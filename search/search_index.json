{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/","text":"C\u8bed\u8a00\u9057\u6f0f\u70b9 define \u5b8f\u5b9a\u4e49\u4e2d\u6709\u51e0\u4e2a\u7b26\u53f7\u9700\u8981\u6ce8\u610f\uff0c\u5982 # \uff0c ## \uff0c \\ \uff0c #@ ,\u4e0b\u9762\u5b9a\u4e49\u4e86\u4e09\u4e2a\u5b8f #define Conn(x,y) x##y #define ToChar(x) #@x #define ToString(x) #x 1. ## \u94fe\u63a5\u64cd\u4f5c\u7b26 int n = Conn(123,456); == int n=123456; char* str = Conn( asdf , adf ); == char* str = asdfadf ; \u9700\u8981\u6ce8\u610f\u7684\u662f ## \u5de6\u53f3\u7b26\u53f7\u5fc5\u987b\u80fd\u591f\u7ec4\u6210\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u7b26\u53f7\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 2. #@ \u5b57\u7b26\u5316\u64cd\u4f5c #@x \u53ea\u80fd\u7528\u4e8e\u6709\u4f20\u5165\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u4e2d\uff0c\u4e14\u5fc5\u987b\u7f6e\u4e8e\u5b8f\u5b9a\u4e49\u4f53\u4e2d\u7684\u53c2\u6570\u540d\u524d\u3002\u4f5c\u7528\u662f\u5c06\u4f20\u7684\u5355\u5b57\u7b26\u53c2\u6570\u540d\u8f6c\u6362\u6210\u5b57\u7b26\uff0c\u4ee5\u4e00\u5bf9\u5355\u5f15\u7528\u62ec\u8d77\u6765\u5176\u5b9e\u5c31\u662f\u7ed9 x \u52a0\u4e0a\u5355\u5f15\u53f7\uff0c\u7ed3\u679c\u8fd4\u56de\u662f\u4e00\u4e2a const char \u3002 \u4e3e\u4f8b\u8bf4\uff1a char a = ToChar(1); == char a='1'; \u505a\u4e2a\u8d8a\u754c\u8bd5\u9a8c char a = ToChar(123); == char a='3'; \u4f46\u662f\u5982\u679c\u4f60\u7684\u53c2\u6570\u8d85\u8fc7\u56db\u4e2a\u5b57\u7b26\uff0c\u7f16\u8bd1\u5668\u5c31\u7ed9\u7ed9\u4f60\u62a5\u9519\u4e86 \uff01error C2015: too many characters in constant \uff1aP 3. # \u5b57\u7b26\u4e32\u5316\u64cd\u4f5c\u7b26 \u8868\u793a\u5b57\u7b26\u4e32\u5316\u64cd\u4f5c\u7b26\uff08stringification\uff09\u3002\u5176\u4f5c\u7528\u662f\uff1a\u5c06\u5b8f\u5b9a\u4e49\u4e2d\u7684\u4f20\u5165\u53c2\u6570\u540d\u8f6c\u6362\u6210\u7528\u4e00\u5bf9\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u53c2\u6570\u540d\u5b57\u7b26\u4e32\u3002\u5176\u53ea\u80fd\u7528\u4e8e\u6709\u4f20\u5165\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u4e2d\uff0c\u4e14\u5fc5\u987b\u7f6e\u4e8e\u5b8f\u5b9a\u4e49\u4f53\u4e2d\u7684\u53c2\u6570\u540d\u524d\u3002\u8bf4\u767d\u4e86\uff0c\u4ed6\u662f\u7ed9x\u52a0\u53cc\u5f15\u53f7\uff1a char* str = ToString(123132); == char* str= 123132 ; \u5982\u679c\u4f60\u60f3\u8981\u5bf9\u5c55\u5f00\u540e\u7684\u5b8f\u53c2\u6570\u8fdb\u884c\u5b57\u7b26\u4e32\u5316\uff0c\u5219\u9700\u8981\u4f7f\u7528\u4e24\u5c42\u5b8f\u3002 #define xstr(s) str(s) #define str(s) #s #define foo 4 str (foo) == foo xstr (foo) == xstr (4) == str (4) == 4 s \u53c2\u6570\u5728 str \u5b8f\u4e2d\u88ab\u5b57\u7b26\u4e32\u5316\uff0c\u6240\u4ee5\u5b83\u4e0d\u662f\u4f18\u5148\u88ab\u5b8f\u5c55\u5f00\u3002\u7136\u800c s \u53c2\u6570\u662f xstr \u5b8f\u7684\u4e00\u4e2a\u666e\u901a\u53c2\u6570\uff0c\u5728\u88ab\u4f20\u9012\u5230 str \u5b8f\u4e4b\u524d\u5df2\u7ecf\u88ab\u5b8f\u5c55\u5f00\u3002 4. \\ \u884c\u7ee7\u7eed\u64cd\u4f5c \\ \u884c\u7ee7\u7eed\u64cd\u4f5c\u5f53\u5b9a\u4e49\u7684\u5b8f\u4e0d\u80fd\u7528\u4e00\u884c\u8868\u8fbe\u5b8c\u6574\u65f6\uff0c\u53ef\u4ee5\u7528 \\ \uff08\u53cd\u659c\u7ebf\uff09\u8868\u793a\u4e0b\u4e00\u884c\u7ee7\u7eed\u6b64\u5b8f\u7684\u5b9a\u4e49\u3002 5. VA_ARGS __VA_ARGS__ \u5b8f\u7528\u6765\u63a5\u53d7\u4e0d\u5b9a\u6570\u91cf\u7684\u53c2\u6570\u3002\u4f8b\u5982\uff1a #define eprintf(...) fprintf (stderr, __VA_ARGS__) eprintf ( %s:%d: , input_file, lineno) == fprintf (stderr, %s:%d: , input_file, lineno) \u5f53 __VA_ARGS__ \u5b8f\u524d\u9762 ## \u65f6\uff0c\u53ef\u4ee5\u7701\u7565\u53c2\u6570\u8f93\u5165\u3002 \u4f8b\u5982\uff1a #define eprintf(format, ...) fprintf (stderr, format, ##__VA_ARGS__) eprintf ( success!\\n ) == fprintf(stderr, success!\\n ); typedef \u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u6765\u66ff\u4ee3\u7cfb\u7edf\u57fa\u672c\u7c7b\u578b\u3002 typedef\u4e2d\u58f0\u660e\u7684\u7c7b\u578b\u5728\u53d8\u91cf\u540d\u7684\u4f4d\u7f6e\u51fa\u73b0 1. \u4e3a\u6570\u7ec4\u5b9a\u4e49\u7c7b\u578b c typedef int INT_ARRAY_100[100]; INT_ARRAY_100 arr; 2. \u4e3a\u6307\u9488\u5b9a\u4e49\u7c7b\u578b c typedef char* PCHAR; PCHAR pa; \u4e0e\u5b8f\u5b9a\u4e49\u7684\u533a\u522b \uff1a c #define MYCHAR char* MYCHAR a, b;// a\u662fchar*,b\u662fchar PCHAR c, d; // c\u548cd\u90fd\u662f char* 3. \u9677\u9631 c typedef char* PCHAR; int strcmp(const PCHAR,const PCHAR); \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c const PCHAR \u662f\u5426\u76f8\u5f53\u4e8e const char* \u5462\uff1f \u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c typedef \u662f\u7528\u6765\u5b9a\u4e49\u4e00\u79cd\u7c7b\u578b\u7684\u65b0\u522b\u540d\u7684\uff0c\u5b83\u4e0d\u540c\u4e8e\u5b8f\uff0c\u4e0d\u662f\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u3002\u56e0\u6b64\uff0c const PCHAR \u4e2d\u7684 const \u7ed9\u4e88\u4e86\u6574\u4e2a\u6307\u9488\u672c\u8eab\u5e38\u91cf\u6027\uff0c\u4e5f\u5c31\u662f\u5f62\u6210\u4e86\u5e38\u91cf\u6307\u9488 char*const \uff08\u4e00\u4e2a\u6307\u5411 char \u7684\u5e38\u91cf\u6307\u9488\uff09\u3002\u5373\u5b83\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e char*const \uff0c\u800c\u4e0d\u662f const char* \uff08\u6307\u5411\u5e38\u91cf char \u7684\u6307\u9488\uff09\u3002\u5f53\u7136\uff0c\u8981\u60f3\u8ba9 const PCHAR \u76f8\u5f53\u4e8e const char* \u4e5f\u5f88\u5bb9\u6613\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a typedef const char* PCHAR; int strcmp(PCHAR\uff0c PCHAR); \u5176\u5b9e\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\uff0c\u53ea\u8981\u4e3a\u6307\u9488\u58f0\u660e typedef\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u5728\u6700\u7ec8\u7684 typedef \u540d\u79f0\u4e2d\u52a0\u4e00\u4e2a const\uff0c\u4ee5\u4f7f\u5f97\u8be5\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002 \u8fd8\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136 typedef \u5e76\u4e0d\u771f\u6b63\u5f71\u54cd\u5bf9\u8c61\u7684\u5b58\u50a8\u7279\u6027\uff0c\u4f46\u5728\u8bed\u6cd5\u4e0a\u5b83\u8fd8\u662f\u4e00\u4e2a\u5b58\u50a8\u7c7b\u7684\u5173\u952e\u5b57\uff0c\u5c31\u50cf auto \u3001 extern \u3001 static \u548c register \u7b49\u5173\u952e\u5b57\u4e00\u6837\u3002\u56e0\u6b64\uff0c\u50cf\u4e0b\u9762\u8fd9\u79cd\u58f0\u660e\u65b9\u5f0f\u662f\u4e0d\u53ef\u884c\u7684\uff1a c typedef static int INT_STATIC; \u6570\u7ec4 1.\u6570\u7ec4\u540d\u4e3a\u5e38\u91cf int array[4]; array++; // \u9519\u8bef\uff0c\u4e0d\u53ef\u4f7f\u7528 ++ int *p = array; p++; //\u6b63\u786e 2. \u6570\u7ec4\u9996\u5730\u5740 \u6570\u7ec4\u540d\u5b57\u5373\u4e3a\u6570\u7ec4\u9996\u5730\u5740 int array[5]; array = array[0]; //\u90fd\u662f\u9996\u5143\u7d20\u5730\u5740 \u7c7b\u578b\u4e3a int* array //\u7c7b\u578b\u6307\u5411 int [5]\u7684\u6307\u9488\u7c7b\u578b\uff0c\u6570\u7ec4\u6307\u9488 switch switch \u7c7b\u578b\u4e0d\u80fd\u662f float , double , bool static \u5c40\u90e8\u53d8\u91cf\uff1a\u5ef6\u957f\u751f\u547d\u4e2d\u671f \u5168\u5c40\u53d8\u91cf\uff1a\u9650\u5236\u4f5c\u7528\u57df \u51fd\u6570 \uff1a \u9650\u5236\u4f5c\u7528\u57df \u9017\u53f7\u8fd0\u7b97\u7b26 {}\u4f5c\u7528\u57df","title":"C\u8bed\u8a00\u62fe\u9057"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#c","text":"","title":"C\u8bed\u8a00\u9057\u6f0f\u70b9"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#define","text":"\u5b8f\u5b9a\u4e49\u4e2d\u6709\u51e0\u4e2a\u7b26\u53f7\u9700\u8981\u6ce8\u610f\uff0c\u5982 # \uff0c ## \uff0c \\ \uff0c #@ ,\u4e0b\u9762\u5b9a\u4e49\u4e86\u4e09\u4e2a\u5b8f #define Conn(x,y) x##y #define ToChar(x) #@x #define ToString(x) #x","title":"define"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#1","text":"int n = Conn(123,456); == int n=123456; char* str = Conn( asdf , adf ); == char* str = asdfadf ; \u9700\u8981\u6ce8\u610f\u7684\u662f ## \u5de6\u53f3\u7b26\u53f7\u5fc5\u987b\u80fd\u591f\u7ec4\u6210\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u7b26\u53f7\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002","title":"1. ## \u94fe\u63a5\u64cd\u4f5c\u7b26"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#2","text":"#@x \u53ea\u80fd\u7528\u4e8e\u6709\u4f20\u5165\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u4e2d\uff0c\u4e14\u5fc5\u987b\u7f6e\u4e8e\u5b8f\u5b9a\u4e49\u4f53\u4e2d\u7684\u53c2\u6570\u540d\u524d\u3002\u4f5c\u7528\u662f\u5c06\u4f20\u7684\u5355\u5b57\u7b26\u53c2\u6570\u540d\u8f6c\u6362\u6210\u5b57\u7b26\uff0c\u4ee5\u4e00\u5bf9\u5355\u5f15\u7528\u62ec\u8d77\u6765\u5176\u5b9e\u5c31\u662f\u7ed9 x \u52a0\u4e0a\u5355\u5f15\u53f7\uff0c\u7ed3\u679c\u8fd4\u56de\u662f\u4e00\u4e2a const char \u3002 \u4e3e\u4f8b\u8bf4\uff1a char a = ToChar(1); == char a='1'; \u505a\u4e2a\u8d8a\u754c\u8bd5\u9a8c char a = ToChar(123); == char a='3'; \u4f46\u662f\u5982\u679c\u4f60\u7684\u53c2\u6570\u8d85\u8fc7\u56db\u4e2a\u5b57\u7b26\uff0c\u7f16\u8bd1\u5668\u5c31\u7ed9\u7ed9\u4f60\u62a5\u9519\u4e86 \uff01error C2015: too many characters in constant \uff1aP","title":"2. #@\u5b57\u7b26\u5316\u64cd\u4f5c"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#3","text":"","title":"3. # \u5b57\u7b26\u4e32\u5316\u64cd\u4f5c\u7b26"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#stringificationx","text":"char* str = ToString(123132); == char* str= 123132 ; \u5982\u679c\u4f60\u60f3\u8981\u5bf9\u5c55\u5f00\u540e\u7684\u5b8f\u53c2\u6570\u8fdb\u884c\u5b57\u7b26\u4e32\u5316\uff0c\u5219\u9700\u8981\u4f7f\u7528\u4e24\u5c42\u5b8f\u3002 #define xstr(s) str(s) #define str(s) #s #define foo 4 str (foo) == foo xstr (foo) == xstr (4) == str (4) == 4 s \u53c2\u6570\u5728 str \u5b8f\u4e2d\u88ab\u5b57\u7b26\u4e32\u5316\uff0c\u6240\u4ee5\u5b83\u4e0d\u662f\u4f18\u5148\u88ab\u5b8f\u5c55\u5f00\u3002\u7136\u800c s \u53c2\u6570\u662f xstr \u5b8f\u7684\u4e00\u4e2a\u666e\u901a\u53c2\u6570\uff0c\u5728\u88ab\u4f20\u9012\u5230 str \u5b8f\u4e4b\u524d\u5df2\u7ecf\u88ab\u5b8f\u5c55\u5f00\u3002","title":"\u8868\u793a\u5b57\u7b26\u4e32\u5316\u64cd\u4f5c\u7b26\uff08stringification\uff09\u3002\u5176\u4f5c\u7528\u662f\uff1a\u5c06\u5b8f\u5b9a\u4e49\u4e2d\u7684\u4f20\u5165\u53c2\u6570\u540d\u8f6c\u6362\u6210\u7528\u4e00\u5bf9\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u53c2\u6570\u540d\u5b57\u7b26\u4e32\u3002\u5176\u53ea\u80fd\u7528\u4e8e\u6709\u4f20\u5165\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u4e2d\uff0c\u4e14\u5fc5\u987b\u7f6e\u4e8e\u5b8f\u5b9a\u4e49\u4f53\u4e2d\u7684\u53c2\u6570\u540d\u524d\u3002\u8bf4\u767d\u4e86\uff0c\u4ed6\u662f\u7ed9x\u52a0\u53cc\u5f15\u53f7\uff1a"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#4","text":"\\ \u884c\u7ee7\u7eed\u64cd\u4f5c\u5f53\u5b9a\u4e49\u7684\u5b8f\u4e0d\u80fd\u7528\u4e00\u884c\u8868\u8fbe\u5b8c\u6574\u65f6\uff0c\u53ef\u4ee5\u7528 \\ \uff08\u53cd\u659c\u7ebf\uff09\u8868\u793a\u4e0b\u4e00\u884c\u7ee7\u7eed\u6b64\u5b8f\u7684\u5b9a\u4e49\u3002","title":"4. \\ \u884c\u7ee7\u7eed\u64cd\u4f5c"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#5-va_args","text":"","title":"5. VA_ARGS"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#typedef","text":"\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u6765\u66ff\u4ee3\u7cfb\u7edf\u57fa\u672c\u7c7b\u578b\u3002 typedef\u4e2d\u58f0\u660e\u7684\u7c7b\u578b\u5728\u53d8\u91cf\u540d\u7684\u4f4d\u7f6e\u51fa\u73b0","title":"typedef"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#1_1","text":"c typedef int INT_ARRAY_100[100]; INT_ARRAY_100 arr;","title":"1.  \u4e3a\u6570\u7ec4\u5b9a\u4e49\u7c7b\u578b"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#2_1","text":"c typedef char* PCHAR; PCHAR pa; \u4e0e\u5b8f\u5b9a\u4e49\u7684\u533a\u522b \uff1a c #define MYCHAR char* MYCHAR a, b;// a\u662fchar*,b\u662fchar PCHAR c, d; // c\u548cd\u90fd\u662f char*","title":"2. \u4e3a\u6307\u9488\u5b9a\u4e49\u7c7b\u578b"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#3_1","text":"c typedef char* PCHAR; int strcmp(const PCHAR,const PCHAR); \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c const PCHAR \u662f\u5426\u76f8\u5f53\u4e8e const char* \u5462\uff1f \u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c typedef \u662f\u7528\u6765\u5b9a\u4e49\u4e00\u79cd\u7c7b\u578b\u7684\u65b0\u522b\u540d\u7684\uff0c\u5b83\u4e0d\u540c\u4e8e\u5b8f\uff0c\u4e0d\u662f\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u3002\u56e0\u6b64\uff0c const PCHAR \u4e2d\u7684 const \u7ed9\u4e88\u4e86\u6574\u4e2a\u6307\u9488\u672c\u8eab\u5e38\u91cf\u6027\uff0c\u4e5f\u5c31\u662f\u5f62\u6210\u4e86\u5e38\u91cf\u6307\u9488 char*const \uff08\u4e00\u4e2a\u6307\u5411 char \u7684\u5e38\u91cf\u6307\u9488\uff09\u3002\u5373\u5b83\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e char*const \uff0c\u800c\u4e0d\u662f const char* \uff08\u6307\u5411\u5e38\u91cf char \u7684\u6307\u9488\uff09\u3002\u5f53\u7136\uff0c\u8981\u60f3\u8ba9 const PCHAR \u76f8\u5f53\u4e8e const char* \u4e5f\u5f88\u5bb9\u6613\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\uff1a typedef const char* PCHAR; int strcmp(PCHAR\uff0c PCHAR); \u5176\u5b9e\uff0c\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\uff0c\u53ea\u8981\u4e3a\u6307\u9488\u58f0\u660e typedef\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u5728\u6700\u7ec8\u7684 typedef \u540d\u79f0\u4e2d\u52a0\u4e00\u4e2a const\uff0c\u4ee5\u4f7f\u5f97\u8be5\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002 \u8fd8\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136 typedef \u5e76\u4e0d\u771f\u6b63\u5f71\u54cd\u5bf9\u8c61\u7684\u5b58\u50a8\u7279\u6027\uff0c\u4f46\u5728\u8bed\u6cd5\u4e0a\u5b83\u8fd8\u662f\u4e00\u4e2a\u5b58\u50a8\u7c7b\u7684\u5173\u952e\u5b57\uff0c\u5c31\u50cf auto \u3001 extern \u3001 static \u548c register \u7b49\u5173\u952e\u5b57\u4e00\u6837\u3002\u56e0\u6b64\uff0c\u50cf\u4e0b\u9762\u8fd9\u79cd\u58f0\u660e\u65b9\u5f0f\u662f\u4e0d\u53ef\u884c\u7684\uff1a c typedef static int INT_STATIC;","title":"3. \u9677\u9631"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#_2","text":"","title":"\u6570\u7ec4"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#1_2","text":"int array[4]; array++; // \u9519\u8bef\uff0c\u4e0d\u53ef\u4f7f\u7528 ++ int *p = array; p++; //\u6b63\u786e","title":"1.\u6570\u7ec4\u540d\u4e3a\u5e38\u91cf"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#2_2","text":"\u6570\u7ec4\u540d\u5b57\u5373\u4e3a\u6570\u7ec4\u9996\u5730\u5740 int array[5]; array = array[0]; //\u90fd\u662f\u9996\u5143\u7d20\u5730\u5740 \u7c7b\u578b\u4e3a int* array //\u7c7b\u578b\u6307\u5411 int [5]\u7684\u6307\u9488\u7c7b\u578b\uff0c\u6570\u7ec4\u6307\u9488","title":"2. \u6570\u7ec4\u9996\u5730\u5740"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#switch","text":"switch \u7c7b\u578b\u4e0d\u80fd\u662f float , double , bool","title":"switch"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#static","text":"\u5c40\u90e8\u53d8\u91cf\uff1a\u5ef6\u957f\u751f\u547d\u4e2d\u671f \u5168\u5c40\u53d8\u91cf\uff1a\u9650\u5236\u4f5c\u7528\u57df \u51fd\u6570 \uff1a \u9650\u5236\u4f5c\u7528\u57df","title":"static"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#_3","text":"","title":"\u9017\u53f7\u8fd0\u7b97\u7b26"},{"location":"c/c\u8bed\u8a00\u62fe\u9057/#_4","text":"","title":"{}\u4f5c\u7528\u57df"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/","text":"\u5168\u90fd\u662f\u77e5\u8bc6\u70b9 \u4e0eC\u7684\u533a\u522b \u7a7a\u53c2\u6570\u51fd\u6570 struct enum \u5b9a\u4e49\u53d8\u91cf\u53ef\u4ee5\u4e0d\u52a0\u5173\u952e\u5b57 struct student{ int age\uff1b }\uff1b student stu\uff1b \u547d\u540d\u7a7a\u95f4 \u5934\u6587\u4ef6\u5c3d\u91cf\u4e0d\u8981\u7528 using namespace xx \uff0c \u540d\u79f0\u6c61\u67d3 \u65e0\u540d\u547d\u540d\u7a7a\u95f4 \u5f15\u7528 \u5b9a\u4e49\u5f15\u7528\u7c7b\u578b\u7684\u53d8\u91cf\u65f6\u5fc5\u987b\u5236\u5b9a\u5f15\u7528\u76ee\u6807\u3002 \u5f15\u7528\u548c\u6307\u9488 \u5e38\u5f15\u7528 \u4f7f\u7528 const \u4fee\u9970\uff0c\u5219\u4e0d\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u4fee\u6539\u76ee\u6807\u7684\u503c\uff0c\u800c\u53ef\u4ee5\u4fee\u6539\u5f15\u7528\u7684\u76ee\u6807 \u5f15\u7528\u5c31\u662f\u522b\u540d \u51fd\u6570 \u7f3a\u7701\u53c2\u6570 \u9760\u53f3\u539f\u5219 \u7f3a\u7701\u53c2\u6570\u653e\u5230\u5f62\u53c2\u8868\u7684\u6700\u53f3\u8fb9 \u4f18\u5148\u4f7f\u7528\u5b9e\u53c2 \u51fd\u6570\u7684\u7f3a\u7701\u53c2\u6570\u4e00\u822c\u653e\u5728\u5934\u6587\u4ef6\u5b9a\u4e49\u3002 \u54d1\u5143\u51fd\u6570 \u53ea\u6307\u5b9a\u7c7b\u578b\uff0c\u6ca1\u6709\u5f62\u53c2\u540d \u5e38\u51fd\u6570 void func(arg) const {} const \u4fee\u9970\u4e86 this \u6307\u9488\uff0c this \u6307\u5411\u7684\u5185\u5bb9\u4e0d\u53ef\u4fee\u6539\u3002\u82e5\u8981\u4fee\u6539\u5fc5\u987b\u52a0 mutable \u5173\u952e\u5b57 \u53cb\u5143\u51fd\u6570 friend \u4fee\u9970\u3002 \u53cb\u5143\u51fd\u6570\u5728\u7c7b\u5185\u90e8\u58f0\u660e\uff0c\u5916\u90e8\u5b9e\u73b0\u3002\u51fd\u6570\u540d\u524d\u9762\u4e0d\u52a0\u7c7b\u540d \u53cb\u5143\u51fd\u6570\u4e0d\u5c5e\u4e8e\u7c7b\uff0c\u6ca1\u6709 this \u6307\u9488 \u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u4e2d\u7684\u6240\u6709\u6210\u5458\uff0c\u6253\u7834\u4e86\u6210\u5458\u8bbf\u95ee\u63a7\u5236\u5c5e\u6027 \u5982\u679c\u8bbf\u95ee\u9759\u6001\u6210\u5458\uff0c\u53cb\u5143\u51fd\u6570\u4e0d\u9700\u8981\u7c7b\u540d \u53cb\u5143\u51fd\u6570\u7684\u8c03\u7528\uff0c\u4e0d\u9700\u8981\u52a0\u7c7b\u540d \u5e38\u5bf9\u8c61 \u4f7f\u7528 const \u4fee\u9970\uff0c\u5e38\u5bf9\u8c61\u53ea\u80fd\u8bbf\u95ee\u5bf9\u8c61\u4e2d\u7684\u5e38\u51fd\u6570\u3002 \u5185\u5b58 new/delete \u662f\u8fd0\u7b97\u7b26\u3002 \u4f7f\u7528 new \u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u521d\u59cb\u5316 new int(10); new int[10]{0,1,2,3,4,5,6,7,8,9}; \u7c7b \u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u5f81\uff1a\u5c01\u88c5\uff0c\u7ee7\u627f\u548c\u591a\u6001 this\u6307\u9488 \u533a\u5206\u4f5c\u7528\u57df \u8fd4\u56de\u81ea\u8eab\u5f15\u7528 \u5728\u7c7b\u5185\u90e8\u9500\u6bc1\u5bf9\u8c61 \u6784\u9020\u51fd\u6570 \u4e0e\u7c7b\u540d\u5b57\u76f8\u540c\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u5728\u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u5019\u88ab\u8c03\u7528\u3002 \u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u8868 \u7c7b\u540d\uff08\u5f62\u53c2\u8868\uff09: \u521d\u59cb\u5316\u8868{} \u5fc5\u987b\u4f7f\u7528\u521d\u59cb\u5316\u8868\u7684\u51e0\u79cd\u60c5\u51b5\uff1a \u5305\u542b\u5f15\u7528\u7c7b\u578b\u6210\u5458\u53d8\u91cf \u5305\u542b const \u4fee\u9970\u7684\u6210\u5458 \u6df1\u62f7\u8d1d \u590d\u5236\u6784\u9020\u51fd\u6570 //\u58f0\u660e\u7684\u8bed\u6cd5 //\u7c7b\u540d\uff08const \u7c7b\u540d \uff09 class MyString { MyString(const MyString copySource); // copy constructor }; \u590d\u5236\u8d4b\u503c\u51fd\u6570 //\u7c7b\u540d operator(const \u7c7b\u540d that) ClassType operator= (const ClassType copySource) { if(this != copySource) // protection against copy into self { // copy assignment operator implementation } return *this; } \u9759\u6001\u6210\u5458 \u4f7f\u7528 static \u4fee\u9970\u7684\u6210\u5458 \u9759\u6001\u6210\u5458\u53d8\u91cf \u9759\u6001\u6210\u5458\u53d8\u91cf\u53d8\u91cf\u5728\u7c7b\u7684\u5185\u90e8\u58f0\u660e\uff0c\u521d\u59cb\u5316\u5fc5\u987b\u653e\u5728\u5916\u90e8\u3002\u4e0d\u53ef\u4ee5\u5728\u6784\u9020\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u3002 \u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u5c5e\u4e8e\u7c7b \u9759\u6001\u6210\u5458\u53d8\u91cf\u5168\u5c40\u53d8\u91cf\uff0c\u5b58\u653e\u5728\u5168\u5c40\u533a \u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u8bbf\u95ee\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u65b9\u5f0f\uff0c \u7c7b\u540d::\u9759\u6001\u6210\u5458 \u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u540d\u8bbf\u95ee \u9759\u6001\u6210\u5458\u51fd\u6570 \u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709 this \u6307\u9488\uff0c\u6240\u4ee5\u4e0d\u80fd\u662f\u5e38\u51fd\u6570\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8303\u6587\u666e\u901a\u6210\u5458\u53d8\u91cf \u7ee7\u627f","title":"Cpp\u77e5\u8bc6\u70b9"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_1","text":"","title":"\u5168\u90fd\u662f\u77e5\u8bc6\u70b9"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#c","text":"\u7a7a\u53c2\u6570\u51fd\u6570 struct enum \u5b9a\u4e49\u53d8\u91cf\u53ef\u4ee5\u4e0d\u52a0\u5173\u952e\u5b57 struct student{ int age\uff1b }\uff1b student stu\uff1b","title":"\u4e0eC\u7684\u533a\u522b"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_2","text":"\u5934\u6587\u4ef6\u5c3d\u91cf\u4e0d\u8981\u7528 using namespace xx \uff0c \u540d\u79f0\u6c61\u67d3 \u65e0\u540d\u547d\u540d\u7a7a\u95f4","title":"\u547d\u540d\u7a7a\u95f4"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_3","text":"\u5b9a\u4e49\u5f15\u7528\u7c7b\u578b\u7684\u53d8\u91cf\u65f6\u5fc5\u987b\u5236\u5b9a\u5f15\u7528\u76ee\u6807\u3002 \u5f15\u7528\u548c\u6307\u9488 \u5e38\u5f15\u7528 \u4f7f\u7528 const \u4fee\u9970\uff0c\u5219\u4e0d\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u4fee\u6539\u76ee\u6807\u7684\u503c\uff0c\u800c\u53ef\u4ee5\u4fee\u6539\u5f15\u7528\u7684\u76ee\u6807 \u5f15\u7528\u5c31\u662f\u522b\u540d","title":"\u5f15\u7528"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_4","text":"","title":"\u51fd\u6570"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_5","text":"\u9760\u53f3\u539f\u5219 \u7f3a\u7701\u53c2\u6570\u653e\u5230\u5f62\u53c2\u8868\u7684\u6700\u53f3\u8fb9 \u4f18\u5148\u4f7f\u7528\u5b9e\u53c2 \u51fd\u6570\u7684\u7f3a\u7701\u53c2\u6570\u4e00\u822c\u653e\u5728\u5934\u6587\u4ef6\u5b9a\u4e49\u3002","title":"\u7f3a\u7701\u53c2\u6570"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_6","text":"\u53ea\u6307\u5b9a\u7c7b\u578b\uff0c\u6ca1\u6709\u5f62\u53c2\u540d","title":"\u54d1\u5143\u51fd\u6570"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_7","text":"void func(arg) const {} const \u4fee\u9970\u4e86 this \u6307\u9488\uff0c this \u6307\u5411\u7684\u5185\u5bb9\u4e0d\u53ef\u4fee\u6539\u3002\u82e5\u8981\u4fee\u6539\u5fc5\u987b\u52a0 mutable \u5173\u952e\u5b57","title":"\u5e38\u51fd\u6570"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_8","text":"friend \u4fee\u9970\u3002 \u53cb\u5143\u51fd\u6570\u5728\u7c7b\u5185\u90e8\u58f0\u660e\uff0c\u5916\u90e8\u5b9e\u73b0\u3002\u51fd\u6570\u540d\u524d\u9762\u4e0d\u52a0\u7c7b\u540d \u53cb\u5143\u51fd\u6570\u4e0d\u5c5e\u4e8e\u7c7b\uff0c\u6ca1\u6709 this \u6307\u9488 \u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u4e2d\u7684\u6240\u6709\u6210\u5458\uff0c\u6253\u7834\u4e86\u6210\u5458\u8bbf\u95ee\u63a7\u5236\u5c5e\u6027 \u5982\u679c\u8bbf\u95ee\u9759\u6001\u6210\u5458\uff0c\u53cb\u5143\u51fd\u6570\u4e0d\u9700\u8981\u7c7b\u540d \u53cb\u5143\u51fd\u6570\u7684\u8c03\u7528\uff0c\u4e0d\u9700\u8981\u52a0\u7c7b\u540d","title":"\u53cb\u5143\u51fd\u6570"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_9","text":"\u4f7f\u7528 const \u4fee\u9970\uff0c\u5e38\u5bf9\u8c61\u53ea\u80fd\u8bbf\u95ee\u5bf9\u8c61\u4e2d\u7684\u5e38\u51fd\u6570\u3002","title":"\u5e38\u5bf9\u8c61"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_10","text":"new/delete \u662f\u8fd0\u7b97\u7b26\u3002 \u4f7f\u7528 new \u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u521d\u59cb\u5316 new int(10); new int[10]{0,1,2,3,4,5,6,7,8,9};","title":"\u5185\u5b58"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_11","text":"\u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u5f81\uff1a\u5c01\u88c5\uff0c\u7ee7\u627f\u548c\u591a\u6001","title":"\u7c7b"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#this","text":"\u533a\u5206\u4f5c\u7528\u57df \u8fd4\u56de\u81ea\u8eab\u5f15\u7528 \u5728\u7c7b\u5185\u90e8\u9500\u6bc1\u5bf9\u8c61","title":"this\u6307\u9488"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_12","text":"\u4e0e\u7c7b\u540d\u5b57\u76f8\u540c\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u5728\u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u5019\u88ab\u8c03\u7528\u3002","title":"\u6784\u9020\u51fd\u6570"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_13","text":"\u7c7b\u540d\uff08\u5f62\u53c2\u8868\uff09: \u521d\u59cb\u5316\u8868{} \u5fc5\u987b\u4f7f\u7528\u521d\u59cb\u5316\u8868\u7684\u51e0\u79cd\u60c5\u51b5\uff1a \u5305\u542b\u5f15\u7528\u7c7b\u578b\u6210\u5458\u53d8\u91cf \u5305\u542b const \u4fee\u9970\u7684\u6210\u5458","title":"\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u8868"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_14","text":"\u590d\u5236\u6784\u9020\u51fd\u6570 //\u58f0\u660e\u7684\u8bed\u6cd5 //\u7c7b\u540d\uff08const \u7c7b\u540d \uff09 class MyString { MyString(const MyString copySource); // copy constructor }; \u590d\u5236\u8d4b\u503c\u51fd\u6570 //\u7c7b\u540d operator(const \u7c7b\u540d that) ClassType operator= (const ClassType copySource) { if(this != copySource) // protection against copy into self { // copy assignment operator implementation } return *this; }","title":"\u6df1\u62f7\u8d1d"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_15","text":"\u4f7f\u7528 static \u4fee\u9970\u7684\u6210\u5458","title":"\u9759\u6001\u6210\u5458"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_16","text":"\u9759\u6001\u6210\u5458\u53d8\u91cf\u53d8\u91cf\u5728\u7c7b\u7684\u5185\u90e8\u58f0\u660e\uff0c\u521d\u59cb\u5316\u5fc5\u987b\u653e\u5728\u5916\u90e8\u3002\u4e0d\u53ef\u4ee5\u5728\u6784\u9020\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u3002 \u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u5c5e\u4e8e\u7c7b \u9759\u6001\u6210\u5458\u53d8\u91cf\u5168\u5c40\u53d8\u91cf\uff0c\u5b58\u653e\u5728\u5168\u5c40\u533a \u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u8bbf\u95ee\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u65b9\u5f0f\uff0c \u7c7b\u540d::\u9759\u6001\u6210\u5458 \u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u540d\u8bbf\u95ee","title":"\u9759\u6001\u6210\u5458\u53d8\u91cf"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_17","text":"\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709 this \u6307\u9488\uff0c\u6240\u4ee5\u4e0d\u80fd\u662f\u5e38\u51fd\u6570\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8303\u6587\u666e\u901a\u6210\u5458\u53d8\u91cf","title":"\u9759\u6001\u6210\u5458\u51fd\u6570"},{"location":"c_plusplus/cpp\u77e5\u8bc6\u70b9/#_18","text":"","title":"\u7ee7\u627f"},{"location":"c_plusplus/qt\u5165\u95e8\u77e5\u8bc6\u70b9/","text":"QT \u5165\u95e8\u77e5\u8bc6\u70b9 \u5b89\u88c5 \u9700\u8981\u5148\u4e0b\u8f7d\u5bf9\u5e94\u5e73\u53f0\u7684\u5b89\u88c5\u5305,\u4ee5\u4e0b\u4e24\u4e2a\u7f51\u7ad9\u90fd\u53ef\u4ee5\u4e0b\u8f7d \u5b98\u65b9\u955c\u50cf , \u6e05\u534e\u5927\u5b66\u955c\u50cf \u3002\u5728\u56fd\u5185\u6e05\u534e\u5927\u5b66\u7684\u955c\u50cf\u7f51\u7ad9\u4f1a\u66f4\u5feb\u70b9\u3002 windows \u5b89\u88c5\u5230\u4e0b\u56fe\u6b65\u9aa4\u65f6\u5019\uff0c\u5e94\u8be5\u9009\u62e9\u4e00\u4e2a\u7f16\u8bd1\u5668\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u52fe\u9009\u7684\u3002\u7b14\u8005\u7b2c\u4e00\u6b21\u6ca1\u6709\u52fe\u9009\u6b64\u9009\u9879\u3002\u8bd5\u56fe\u4f7f\u7528\u81ea\u5df1\u7535\u8111\u5df2\u7ecf\u5b89\u88c5\u7684 mingW ,\u7ed3\u679c\u5728\u914d\u7f6e qmake \u65f6\u627e\u4e0d\u5230\u8be5\u5de5\u5177\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\u9700\u8981\u914d\u7f6e\u73af\u5883\u8def\u5f84 linux \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u914d\u7f6e\u73af\u5883\u8def\u5f84\u4e3a /home/linux/Qt5.12.3/5.12.3/gcc_64/bin \u3002\u6267\u884c qmake -v \u67e5\u770b\u7248\u672c\uff0c\u82e5\u80fd\u663e\u793a\u5219\u5b89\u88c5\u6210\u529f\u3002 QT \u8fd0\u884c\u65f6\u4f9d\u8d56 libgl \u548c libgstreamer sudo apt-get install libgl1-mesa-dev sudo apt-get install libgstreamer0.10-0 sudo apt-get install libgstreamer-plugins-base0.10-0 \u5de5\u5177 assistant \u5e2e\u52a9\u624b\u518c designer \u8bbe\u8ba1 ui \u56fe\u5f62\u5316\u754c\u9762 moc :\u5143\u5bf9\u8c61\u7f16\u8f91\u5668 \u5c06\u975e\u6807\u51c6 C++ \u7684\u8bed\u6cd5\uff0c\u8f6c\u6362\u4e3a\u6807\u51c6\u7684 C++ \u8bed\u6cd5 qmake QT \u5de5\u7a0b\u6784\u5efa\u5668 \u6784\u5efa QT \u5de5\u7a0b rcc \u8d44\u6e90\u7ba1\u7406\u5de5\u5177 \u5c06\u8d44\u6e90\u6587\u4ef6\uff0c\u8f6c\u6362\u4e3a\u6807\u51c6\u7684 C++ \u8bed\u6cd5 uic UI \u8f6c\u6362\u5668 \u5c06 ui \u6587\u4ef6\u8f6c\u6362\u4e3a\u6807\u51c6\u7684 C++ \u5f0f\u5934\u6587\u4ef6 qtcreator \u96c6\u6210 IDE \u5f00\u53d1\u73af\u5883 \u5c06\u4e0a\u8fb9\u6240\u6709\u7684\u5de5\u5177\u90fd\u8fdb\u884c\u96c6\u6210 \u6784\u5efa\u7f16\u8bd1 qmake -project \u9996\u6b21\u6784\u5efa\uff0c\u751f\u6210 ***.pro \u6587\u4ef6\u3002\u82e5\u9700\u8981\u589e\u52a0\u6a21\u5757\uff0c\u548c\u6e90\u4ee3\u7801\uff0c\u9700\u8981\u4fee\u6539\u6b64\u6587\u4ef6 qmake \u751f\u6210 Makefile \u6587\u4ef6 make \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 \u4fe1\u53f7\u4e0e\u69fd\u673a\u5236 \u4fe1\u53f7\u548c\u69fd\u672c\u8d28\u5c31\u662f\u51fd\u6570\uff0cQT\u7684\u901a\u4fe1\u673a\u5236 //\u8fde\u63a5\u51fd\u6570 // connect // \u4fe1\u53f7\u51fd\u6570 --------- \u69fd\u51fd\u6570 // // SIGNAL(\u4fe1\u53f7\u51fd\u6570\u540d(\u5f62\u53c2\u7c7b\u578b)) // \u5c06\u4fe1\u53f7\u51fd\u6570\u8f6c\u6362\u4e3achar *\u7c7b\u578b // SLOT(\u69fd\u51fd\u6570\u540d(\u5f62\u53c2\u7c7b\u578b)) // \u5c06\u69fd\u51fd\u6570\u8f6c\u6362\u4e3achar *\u7c7b\u578b QObject::connect( const QObject *sender, //\u53d1\u9001\u8005 const char *signal, //\u4fe1\u53f7 const QObject *receiver, // \u63a5\u6536\u8005 const char *method, //\u69fd\u51fd\u6570 Qt::ConnectionType type = Qt::AutoConnection) //!! \u5b9a\u4e49\u4fe1\u53f7\u4e0e\u69fd\u51fd\u6570\u7684\u4f7f\u7528\u9700\u8981\u4f7f\u7528\u5b8f Q_OBJECT // \u4fe1\u53f7\u51fd\u6570\u53c2\u7684\u4e2a\u6570 = \u69fd\u51fd\u6570\uff0c\u4e00\u822c\u60c5\u51b5\u662f\u4e2a\u6570\u548c\u7c7b\u578b\u4e00\u81f4 \u4e00\u822c\u60c5\u51b5\u4e0b\u69fd\u51fd\u6570\u548c\u4fe1\u53f7\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u4e0e\u7c7b\u578b\u4e00\u81f4\uff0c\u5982\u679c\u69fd\u51fd\u6570\u53c2\u6570\u4e2a\u6570\u591a\u4e8e\u4fe1\u53f7\u51fd\u6570\uff0c\u5fc5\u987b\u63d0\u4f9b\u7f3a\u7701\u503c","title":"Qt\u5165\u95e8\u77e5\u8bc6\u70b9"},{"location":"c_plusplus/qt\u5165\u95e8\u77e5\u8bc6\u70b9/#qt","text":"","title":"QT \u5165\u95e8\u77e5\u8bc6\u70b9"},{"location":"c_plusplus/qt\u5165\u95e8\u77e5\u8bc6\u70b9/#_1","text":"\u9700\u8981\u5148\u4e0b\u8f7d\u5bf9\u5e94\u5e73\u53f0\u7684\u5b89\u88c5\u5305,\u4ee5\u4e0b\u4e24\u4e2a\u7f51\u7ad9\u90fd\u53ef\u4ee5\u4e0b\u8f7d \u5b98\u65b9\u955c\u50cf , \u6e05\u534e\u5927\u5b66\u955c\u50cf \u3002\u5728\u56fd\u5185\u6e05\u534e\u5927\u5b66\u7684\u955c\u50cf\u7f51\u7ad9\u4f1a\u66f4\u5feb\u70b9\u3002 windows \u5b89\u88c5\u5230\u4e0b\u56fe\u6b65\u9aa4\u65f6\u5019\uff0c\u5e94\u8be5\u9009\u62e9\u4e00\u4e2a\u7f16\u8bd1\u5668\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u52fe\u9009\u7684\u3002\u7b14\u8005\u7b2c\u4e00\u6b21\u6ca1\u6709\u52fe\u9009\u6b64\u9009\u9879\u3002\u8bd5\u56fe\u4f7f\u7528\u81ea\u5df1\u7535\u8111\u5df2\u7ecf\u5b89\u88c5\u7684 mingW ,\u7ed3\u679c\u5728\u914d\u7f6e qmake \u65f6\u627e\u4e0d\u5230\u8be5\u5de5\u5177\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\u9700\u8981\u914d\u7f6e\u73af\u5883\u8def\u5f84 linux \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u914d\u7f6e\u73af\u5883\u8def\u5f84\u4e3a /home/linux/Qt5.12.3/5.12.3/gcc_64/bin \u3002\u6267\u884c qmake -v \u67e5\u770b\u7248\u672c\uff0c\u82e5\u80fd\u663e\u793a\u5219\u5b89\u88c5\u6210\u529f\u3002 QT \u8fd0\u884c\u65f6\u4f9d\u8d56 libgl \u548c libgstreamer sudo apt-get install libgl1-mesa-dev sudo apt-get install libgstreamer0.10-0 sudo apt-get install libgstreamer-plugins-base0.10-0","title":"\u5b89\u88c5"},{"location":"c_plusplus/qt\u5165\u95e8\u77e5\u8bc6\u70b9/#_2","text":"assistant \u5e2e\u52a9\u624b\u518c designer \u8bbe\u8ba1 ui \u56fe\u5f62\u5316\u754c\u9762 moc :\u5143\u5bf9\u8c61\u7f16\u8f91\u5668 \u5c06\u975e\u6807\u51c6 C++ \u7684\u8bed\u6cd5\uff0c\u8f6c\u6362\u4e3a\u6807\u51c6\u7684 C++ \u8bed\u6cd5 qmake QT \u5de5\u7a0b\u6784\u5efa\u5668 \u6784\u5efa QT \u5de5\u7a0b rcc \u8d44\u6e90\u7ba1\u7406\u5de5\u5177 \u5c06\u8d44\u6e90\u6587\u4ef6\uff0c\u8f6c\u6362\u4e3a\u6807\u51c6\u7684 C++ \u8bed\u6cd5 uic UI \u8f6c\u6362\u5668 \u5c06 ui \u6587\u4ef6\u8f6c\u6362\u4e3a\u6807\u51c6\u7684 C++ \u5f0f\u5934\u6587\u4ef6 qtcreator \u96c6\u6210 IDE \u5f00\u53d1\u73af\u5883 \u5c06\u4e0a\u8fb9\u6240\u6709\u7684\u5de5\u5177\u90fd\u8fdb\u884c\u96c6\u6210","title":"\u5de5\u5177"},{"location":"c_plusplus/qt\u5165\u95e8\u77e5\u8bc6\u70b9/#_3","text":"qmake -project \u9996\u6b21\u6784\u5efa\uff0c\u751f\u6210 ***.pro \u6587\u4ef6\u3002\u82e5\u9700\u8981\u589e\u52a0\u6a21\u5757\uff0c\u548c\u6e90\u4ee3\u7801\uff0c\u9700\u8981\u4fee\u6539\u6b64\u6587\u4ef6 qmake \u751f\u6210 Makefile \u6587\u4ef6 make \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6","title":"\u6784\u5efa\u7f16\u8bd1"},{"location":"c_plusplus/qt\u5165\u95e8\u77e5\u8bc6\u70b9/#_4","text":"\u4fe1\u53f7\u548c\u69fd\u672c\u8d28\u5c31\u662f\u51fd\u6570\uff0cQT\u7684\u901a\u4fe1\u673a\u5236 //\u8fde\u63a5\u51fd\u6570 // connect // \u4fe1\u53f7\u51fd\u6570 --------- \u69fd\u51fd\u6570 // // SIGNAL(\u4fe1\u53f7\u51fd\u6570\u540d(\u5f62\u53c2\u7c7b\u578b)) // \u5c06\u4fe1\u53f7\u51fd\u6570\u8f6c\u6362\u4e3achar *\u7c7b\u578b // SLOT(\u69fd\u51fd\u6570\u540d(\u5f62\u53c2\u7c7b\u578b)) // \u5c06\u69fd\u51fd\u6570\u8f6c\u6362\u4e3achar *\u7c7b\u578b QObject::connect( const QObject *sender, //\u53d1\u9001\u8005 const char *signal, //\u4fe1\u53f7 const QObject *receiver, // \u63a5\u6536\u8005 const char *method, //\u69fd\u51fd\u6570 Qt::ConnectionType type = Qt::AutoConnection) //!! \u5b9a\u4e49\u4fe1\u53f7\u4e0e\u69fd\u51fd\u6570\u7684\u4f7f\u7528\u9700\u8981\u4f7f\u7528\u5b8f Q_OBJECT // \u4fe1\u53f7\u51fd\u6570\u53c2\u7684\u4e2a\u6570 = \u69fd\u51fd\u6570\uff0c\u4e00\u822c\u60c5\u51b5\u662f\u4e2a\u6570\u548c\u7c7b\u578b\u4e00\u81f4 \u4e00\u822c\u60c5\u51b5\u4e0b\u69fd\u51fd\u6570\u548c\u4fe1\u53f7\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u4e0e\u7c7b\u578b\u4e00\u81f4\uff0c\u5982\u679c\u69fd\u51fd\u6570\u53c2\u6570\u4e2a\u6570\u591a\u4e8e\u4fe1\u53f7\u51fd\u6570\uff0c\u5fc5\u987b\u63d0\u4f9b\u7f3a\u7701\u503c","title":"\u4fe1\u53f7\u4e0e\u69fd\u673a\u5236"},{"location":"c_plusplus/readme/","text":"about c++","title":"Readme"},{"location":"linux/","text":"Linux_learn \u8bb0\u5f55\u5b66\u4e60Linux\u8d44\u6599","title":"Linux_learn"},{"location":"linux/#linux_learn","text":"\u8bb0\u5f55\u5b66\u4e60Linux\u8d44\u6599","title":"Linux_learn"},{"location":"linux/IO/","text":"\u6807\u51c6IO \u6587\u4ef6IO \u7ec8\u7aefIO \u9ad8\u7ea7IO \u975e\u963b\u585eIO IO\u591a\u8def\u590d\u7528 select \u4f20\u7ed9 select \u7684\u53c2\u6570\u544a\u8bc9\u5185\u6838\uff1a \u6211\u4eec\u5173\u5fc3\u7684\u63cf\u8ff0\u7b26 \u5bf9\u4e8e\u6bcf\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5173\u5fc3\u7684\u6761\u4ef6\uff08\u8bfb\uff0c\u5199\uff0c\u5f02\u5e38\uff09 \u613f\u610f\u7b49\u591a\u4e45 \u5df2\u7ecf\u51c6\u5907\u597d\u7684\u63cf\u8ff0\u7b26\u603b\u6570\u91cf \u5bf9\u4e8e\u8bfb\uff0c\u5199\uff0c\u5f02\u5e38\u8fd93\u4e2a\u6761\u4ef6\u7684\u6bcf\u4e00\u4e2a\uff0c\u54ea\u4e9b\u5df2\u7ecf\u51c6\u5907\u597d #include sys/select.h /* * param maxfdp1 \u76d1\u6d4b\u6700\u5927\u4e2a\u6570 * return 0:\u51fa\u9519 0:\u6709\u4e8b\u4ef6\u4ea7\u751f = 0:\u8d85\u65f6 */ int select (int maxfdp1, fd_set * readfds, fd_set * writefds, fd_set * rxceptfds, struct timeval * tvptr); /* select \u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u4e8b\u4ef6\u4ea7\u751f\uff0c\u96c6\u5408\u4e2d\u9664\u5df2\u53d1\u751f\u4e8b\u4ef6\u5916\uff0c\u5c06\u88ab\u6e05\u7a7a */ tvptr == NULL \u6c38\u8fdc\u7b49\u5f85 tvptr- tv_sec == 0 tv_ptr- usec == 0 : \u4e0d\u7b49\u5f85 'tvptr- tv_sec != 0 || tvptr- tv_user != 0 ' \u7b49\u5f85\u6307\u5b9a\u7684\u79d2\u6570\u6216\u8005\u5fae\u5999\u6570 ```c / \u82e5 fd \u5728\u63cf\u8ff0\u7b26\u96c6\u4e2d \u8fd4\u56de\u975e0 / int FD_ISSET(int fd, fd_set *fdset); void FD_SET(int fd, fd_set fdset); void FD_CLR(int fd, fd_set fdset); void FD_ZERO(fd_set *fdset); ``` poll #include poll.h struct polled { int fd; /* \u6587\u4ef6\u63cf\u8ff0\u7b26 */ short events;/* \u76d1\u6d4b\u7684\u4e8b\u4ef6 */ short revents; /* \u4ea7\u751f\u7684\u4e8b\u4ef6 */ }; /** * param timeout -1: \u6c38\u8fdc\u7b49\u5f85 * 0: \u4e0d\u7b49\u5f85 * 0: \u6beb\u79d2 */ int poll(struct pollfd fdarray[], nfds_t nfds, int timeout) poll \u7c7b\u4f3c select \uff0c\u4f46\u662f poll \u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u4e0d\u4e3a\u6bcf\u4e2a\u6761\u4ef6\uff08\u8bfb\uff0c\u5199\uff0c\u5f02\u5e38\uff09\u6784\u9020\u4e00\u4e2a\u63cf\u8ff0\u7b26\u96c6\uff0c\u800c\u662f\u6784\u9020\u4e86\u4e00\u4e2a polled \u7ed3\u6784\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u63cf\u8ff0\u7b26\u4ee5\u53ca\u6211\u4eec\u611f\u5174\u8da3\u7684\u6761\u4ef6 \u6807\u5fd7\u540d events revents \u8bf4\u660e POLLIN * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u9ad8\u4f18\u5148\u7ea7\u6570\u636e\u4ee5\u5916\u7684\u6570\u636e\uff08\u7b49\u6548\u4e8e POLLRDNORM|POLLRDBAND\uff09 POLLRDNORM * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u666e\u901a\u6570\u636e POLLRDBAND * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u4f18\u5148\u7ea7\u6570\u636e POLLPRI * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u9ad8\u4f18\u5148\u7ea7\u6570\u636e POLLOUT * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u5199\u666e\u901a\u6570\u636e POLLWRNORM * * \u4e0ePOLLOUT\u4ed9\u7ae5 POLLWRBAND * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u5199\u4f18\u5148\u7ea7\u6570\u636e POLLERR * \u5df2\u51fa\u9519 POLLHUP * \u5df2\u6302\u65ad POLLNVAL * \u63cf\u8ff0\u7b26\u6ca1\u6709\u5f15\u7528\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6 epoll \u4fe1\u53f7\u9a71\u52a8IO \u5f02\u6b65IO","title":"IO"},{"location":"linux/IO/#io","text":"","title":"\u6807\u51c6IO"},{"location":"linux/IO/#io_1","text":"","title":"\u6587\u4ef6IO"},{"location":"linux/IO/#io_2","text":"","title":"\u7ec8\u7aefIO"},{"location":"linux/IO/#io_3","text":"","title":"\u9ad8\u7ea7IO"},{"location":"linux/IO/#io_4","text":"","title":"\u975e\u963b\u585eIO"},{"location":"linux/IO/#io_5","text":"","title":"IO\u591a\u8def\u590d\u7528"},{"location":"linux/IO/#select","text":"\u4f20\u7ed9 select \u7684\u53c2\u6570\u544a\u8bc9\u5185\u6838\uff1a \u6211\u4eec\u5173\u5fc3\u7684\u63cf\u8ff0\u7b26 \u5bf9\u4e8e\u6bcf\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5173\u5fc3\u7684\u6761\u4ef6\uff08\u8bfb\uff0c\u5199\uff0c\u5f02\u5e38\uff09 \u613f\u610f\u7b49\u591a\u4e45 \u5df2\u7ecf\u51c6\u5907\u597d\u7684\u63cf\u8ff0\u7b26\u603b\u6570\u91cf \u5bf9\u4e8e\u8bfb\uff0c\u5199\uff0c\u5f02\u5e38\u8fd93\u4e2a\u6761\u4ef6\u7684\u6bcf\u4e00\u4e2a\uff0c\u54ea\u4e9b\u5df2\u7ecf\u51c6\u5907\u597d #include sys/select.h /* * param maxfdp1 \u76d1\u6d4b\u6700\u5927\u4e2a\u6570 * return 0:\u51fa\u9519 0:\u6709\u4e8b\u4ef6\u4ea7\u751f = 0:\u8d85\u65f6 */ int select (int maxfdp1, fd_set * readfds, fd_set * writefds, fd_set * rxceptfds, struct timeval * tvptr); /* select \u53ef\u80fd\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u4e8b\u4ef6\u4ea7\u751f\uff0c\u96c6\u5408\u4e2d\u9664\u5df2\u53d1\u751f\u4e8b\u4ef6\u5916\uff0c\u5c06\u88ab\u6e05\u7a7a */ tvptr == NULL \u6c38\u8fdc\u7b49\u5f85 tvptr- tv_sec == 0 tv_ptr- usec == 0 : \u4e0d\u7b49\u5f85 'tvptr- tv_sec != 0 || tvptr- tv_user != 0 ' \u7b49\u5f85\u6307\u5b9a\u7684\u79d2\u6570\u6216\u8005\u5fae\u5999\u6570 ```c / \u82e5 fd \u5728\u63cf\u8ff0\u7b26\u96c6\u4e2d \u8fd4\u56de\u975e0 / int FD_ISSET(int fd, fd_set *fdset); void FD_SET(int fd, fd_set fdset); void FD_CLR(int fd, fd_set fdset); void FD_ZERO(fd_set *fdset); ```","title":"select"},{"location":"linux/IO/#poll","text":"#include poll.h struct polled { int fd; /* \u6587\u4ef6\u63cf\u8ff0\u7b26 */ short events;/* \u76d1\u6d4b\u7684\u4e8b\u4ef6 */ short revents; /* \u4ea7\u751f\u7684\u4e8b\u4ef6 */ }; /** * param timeout -1: \u6c38\u8fdc\u7b49\u5f85 * 0: \u4e0d\u7b49\u5f85 * 0: \u6beb\u79d2 */ int poll(struct pollfd fdarray[], nfds_t nfds, int timeout) poll \u7c7b\u4f3c select \uff0c\u4f46\u662f poll \u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u4e0d\u4e3a\u6bcf\u4e2a\u6761\u4ef6\uff08\u8bfb\uff0c\u5199\uff0c\u5f02\u5e38\uff09\u6784\u9020\u4e00\u4e2a\u63cf\u8ff0\u7b26\u96c6\uff0c\u800c\u662f\u6784\u9020\u4e86\u4e00\u4e2a polled \u7ed3\u6784\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u6307\u5b9a\u4e00\u4e2a\u63cf\u8ff0\u7b26\u4ee5\u53ca\u6211\u4eec\u611f\u5174\u8da3\u7684\u6761\u4ef6 \u6807\u5fd7\u540d events revents \u8bf4\u660e POLLIN * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u9ad8\u4f18\u5148\u7ea7\u6570\u636e\u4ee5\u5916\u7684\u6570\u636e\uff08\u7b49\u6548\u4e8e POLLRDNORM|POLLRDBAND\uff09 POLLRDNORM * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u666e\u901a\u6570\u636e POLLRDBAND * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u4f18\u5148\u7ea7\u6570\u636e POLLPRI * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u9ad8\u4f18\u5148\u7ea7\u6570\u636e POLLOUT * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u5199\u666e\u901a\u6570\u636e POLLWRNORM * * \u4e0ePOLLOUT\u4ed9\u7ae5 POLLWRBAND * * \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u5199\u4f18\u5148\u7ea7\u6570\u636e POLLERR * \u5df2\u51fa\u9519 POLLHUP * \u5df2\u6302\u65ad POLLNVAL * \u63cf\u8ff0\u7b26\u6ca1\u6709\u5f15\u7528\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6","title":"poll"},{"location":"linux/IO/#epoll","text":"","title":"epoll"},{"location":"linux/IO/#io_6","text":"","title":"\u4fe1\u53f7\u9a71\u52a8IO"},{"location":"linux/IO/#io_7","text":"","title":"\u5f02\u6b65IO"},{"location":"linux/MakeFile/","text":"MakeFile \u4ecb\u7ecd \u57fa\u672c\u89c4\u5219 \u76ee\u6807 \uff1a \u4f9d\u8d56 [tab] \u547d\u4ee4 \u547d\u540d \u4e00\u822c\u4e3a GNUmakefile \uff0c makefile \uff0c Makefile \uff0c\u63a8\u8350\u4f7f\u7528 Makefile \u66f4\u65b0 \u4f9d\u8d56\u6587\u4ef6\u4e0d\u5b58\u5728\u6216\u8005\u6587\u4ef6\u6709\u66f4\u65b0\u65f6\uff0c\u6267\u884cmake\u4f1a\u91cd\u65b0\u7f16\u8bd1 Makefile\u7684\u5185\u5bb9 \u5728\u4e00\u4e2a\u5b8c\u6574\u7684 Makefile \u4e2d,\u5305\u542b\u4e86 5 \u4e2a\u4e1c\u897f: \u663e\u5f0f\u89c4\u5219\u3001\u9690\u542b\u89c4\u5219\u3001\u53d8\u91cf\u5b9a\u4e49\u3001\u6307\u793a\u7b26\u548c\u6ce8\u91ca \u663e\u5f0f\u89c4\u5219 \uff1a\u663e\u5f0f\u89c4\u5219\u8bf4\u660e\u4e86\uff0c\u5982\u4f55\u751f\u6210\u4e00\u4e2a\u6216\u591a\u7684\u7684\u76ee\u6807\u6587\u4ef6\u3002\u8fd9\u662f\u7531Makefile\u7684\u4e66\u5199\u8005\u660e\u663e\u6307\u51fa\uff0c\u8981\u751f\u6210\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c\u751f\u6210\u7684\u547d\u4ee4\u3002 \u9690\u6666\u89c4\u5219 \uff1a\u7531\u4e8e\u6211\u4eec\u7684make\u6709\u81ea\u52a8\u63a8\u5bfc\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u9690\u6666\u7684\u89c4\u5219\u53ef\u4ee5\u8ba9\u6211\u4eec\u6bd4\u8f83\u7c97\u7cd9\u5730\u7b80\u7565\u5730\u4e66\u5199Makefile\uff0c\u8fd9\u662f\u7531make\u6240\u652f\u6301\u7684\u3002 \u53d8\u91cf\u7684\u5b9a\u4e49 \uff1a\u5728Makefile\u4e2d\u6211\u4eec\u8981\u5b9a\u4e49\u4e00\u7cfb\u5217\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u4e00\u822c\u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u6709\u70b9\u4f60C\u8bed\u8a00\u4e2d\u7684\u5b8f\uff0c\u5f53Makefile\u88ab\u6267\u884c\u65f6\uff0c\u5176\u4e2d\u7684\u53d8\u91cf\u90fd\u4f1a\u88ab\u6269\u5c55\u5230\u76f8\u5e94\u7684\u5f15\u7528\u4f4d\u7f6e\u4e0a\u3002 \u6307\u793a\u7b26 \uff1a\u5176\u5305\u62ec\u4e86\u4e09\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u5728\u4e00\u4e2aMakefile\u4e2d\u5f15\u7528\u53e6\u4e00\u4e2aMakefile\uff0c\u5c31\u50cfC\u8bed\u8a00\u4e2d\u7684include\u4e00\u6837\uff1b\u53e6\u4e00\u4e2a\u662f\u6307\u6839\u636e\u67d0\u4e9b\u60c5\u51b5\u6307\u5b9aMakefile\u4e2d\u7684\u6709\u6548\u90e8\u5206\uff0c\u5c31\u50cfC\u8bed\u8a00\u4e2d\u7684\u9884\u7f16\u8bd1#if\u4e00\u6837\uff1b\u8fd8\u6709\u5c31\u662f\u5b9a\u4e49\u4e00\u4e2a\u591a\u884c\u7684\u547d\u4ee4\u3002\u6709\u5173\u8fd9\u4e00\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u6211\u4f1a\u5728\u540e\u7eed\u7684\u90e8\u5206\u4e2d\u8bb2\u8ff0\u3002 \u6ce8\u91ca \uff1aMakefile\u4e2d\u53ea\u6709\u884c\u6ce8\u91ca\uff0c\u548cUNIX\u7684Shell\u811a\u672c\u4e00\u6837\uff0c\u5176\u6ce8\u91ca\u662f\u7528\u201c#\u201d\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5c31\u50cfC/C++\u4e2d\u7684\u201c//\u201d\u4e00\u6837\u3002\u5982\u679c\u4f60\u8981\u5728\u4f60\u7684Makefile\u4e2d\u4f7f\u7528\u201c#\u201d\u5b57\u7b26\uff0c\u53ef\u4ee5\u7528\u53cd\u659c\u6846\u8fdb\u884c\u8f6c\u4e49\uff0c\u5982\uff1a\u201c#\u201d\u3002 1. \u663e\u5f0f\u89c4\u5219 1.1 \u57fa\u672c\u89c4\u5219 \u76ee\u6807 \uff1a \u4f9d\u8d56 [tab] \u547d\u4ee4 1.2 \u6e05\u7a7a\u76ee\u6807\u6587\u4ef6\u7684\u89c4\u5219 .PHONY clean clean: rm $(OBJS) .PHONY \u8868\u793a\u4e00\u4e2a\u4f2a\u76ee\u6807\uff0c\u82e5\u4e0d\u4f7f\u7528 .PHONY \uff0c\u518d\u6b21\u6267\u884c clean \u4f1a\u53d1\u73b0 clean \u662f\u6700\u65b0\u7684\uff0c\u65e0\u6cd5\u5b9e\u73b0\u6e05\u9664\u7684\u76ee\u7684\u3002 .PHONY \u8868\u793a\u4e00\u4e2a\u4f2a\u76ee\u6807\uff0c\u5e76\u4e0d\u662f\u771f\u662f\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u90fd\u53ef\u4ee5\u6267\u884c clean \u3002 1.3 \u6587\u4ef6\u540d\u4f7f\u7528\u901a\u914d\u7b26 Maekfile \u4e2d\u8868\u793a\u6587\u4ef6\u540d\u65f6\u53ef\u4f7f\u7528\u901a\u914d\u7b26\u3002\u53ef\u4f7f\u7528\u7684\u901a\u914d\u7b26\u6709: * \u3001 ? \u548c [...] \u3002 \u5728 Makefile \u4e2d\u901a\u914d\u7b26\u7684\u7528\u6cd5\u548c\u542b\u4e49\u548c Linux(unix)\u7684 Bourne shell \u5b8c\u5168\u76f8\u540c\u3002\u4f8b\u5982, *.c\u201d \u4ee3\u8868\u4e86\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u4ee5 .c \u7ed3\u5c3e\u7684\u6587\u4ef6\u7b49\u3002\u4f46\u662f\u5728 Makefile \u4e2d\u8fd9\u4e9b\u7edf\u914d\u7b26\u5e76\u4e0d\u662f\u53ef\u4ee5\u7528\u5728\u4efb\u4f55\u5730\u65b9,Makefile \u4e2d\u7edf\u914d\u7b26\u53ef\u4ee5\u51fa\u73b0\u5728\u4ee5\u4e0b\u4e24\u79cd\u573a\u5408: \u53ef\u4ee5\u7528\u5728\u89c4\u5219\u7684\u76ee\u6807\u3001\u4f9d\u8d56\u4e2d,make \u5728\u8bfb\u53d6 Makefile \u65f6\u4f1a\u81ea\u52a8\u5bf9\u5176\u8fdb\u884c\u5339\u914d\u5904\u7406(\u901a\u914d\u7b26\u5c55\u5f00); \u53ef\u51fa\u73b0\u5728\u89c4\u5219\u7684\u547d\u4ee4\u4e2d,\u901a\u914d\u7b26\u7684\u901a\u914d\u5904\u7406\u662f\u5728 shell \u5728\u6267\u884c\u6b64\u547d\u4ee4\u65f6\u5b8c\u6210\u7684\u3002 \u9664\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e4b\u5916\u7684\u5176\u5b83\u4e0a\u4e0b\u6587\u4e2d,\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u901a\u914d\u7b26\u3002\u800c\u662f\u9700\u8981\u901a\u8fc7\u51fd\u6570 wildcard \u6765\u5b9e\u73b0\u3002 1.4 \u76ee\u5f55\u641c\u7d22 \u4e00\u822c\u641c\u7d22 VPATH VPATH = src:../headers \u9009\u62e9\u6027\u641c\u7d22 vpath \u76ee\u5f55\u641c\u7d22\u673a\u5236 \u547d\u4ee4\u884c\u548c\u641c\u7d22\u76ee\u5f55 \u9690\u542b\u89c4\u5219\u548c\u641c\u7d22\u76ee\u5f55 \u5e93\u6587\u4ef6\u548c\u641c\u7d22\u8def\u5f84 1.5 \u9759\u6001\u6a21\u5f0f TARGETS ...: TARGET-PATTERN: PREREQ-PATTERNS ... COMMANDS objects = foo.o bar.o all: $(objects) $(objects): %.o: %.c $(CC) -c $(CFLAGS) $ -o $@ \u89c4\u5219\u63cf\u8ff0\u4e86\u6240\u6709\u7684.o\u6587\u4ef6\u7684\u4f9d\u8d56\u6587\u4ef6\u4e3a\u5bf9\u5e94\u7684.c\u6587\u4ef6,\u5bf9\u4e8e\u76ee\u6807\u201cfoo.o\u201d,\u53d6\u5176\u830e\u201cfoo\u201d\u66ff\u4ee3\u5bf9\u5e94\u7684\u4f9d\u8d56\u6a21\u5f0f\u201c%.c\u201d\u4e2d\u7684\u6a21\u5f0f\u5b57\u7b26\u201c%\u201d\u4e4b\u540e\u53ef\u5f97\u5230\u76ee\u6807\u7684\u4f9d\u8d56\u6587\u4ef6\u201cfoo.c\u201d 2. \u9690\u5f0f\u89c4\u5219 2.1 \u81ea\u52a8\u63a8\u5bfc\u89c4\u5219 make \u672c\u8eab\u5b58\u5728\u4e00\u4e2a\u9ed8\u8ba4\u7684\u89c4\u5219,\u80fd\u591f\u81ea\u52a8\u5b8c\u6210\u5bf9 .c \u6587\u4ef6\u7684\u7f16\u8bd1\u5e76\u751f\u6210\u5bf9\u5e94\u7684 .o \u6587\u4ef6\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u7701\u7565\u6389\u63cf\u8ff0 .c \u6587\u4ef6\u548c .o \u4f9d\u8d56\u5173\u7cfb\u7684\u89c4\u5219,\u800c\u53ea\u9700\u8981\u7ed9\u51fa\u90a3\u4e9b\u7279\u5b9a\u7684\u89c4\u5219\u63cf\u8ff0 # sample Makefile objects = main.o kbd.o command.o edit : $(objects) cc -o edit $(objects) main.o : defs.h #\u81ea\u52a8\u63a8\u5bfc kbd.o : defs.h command.h command.o : defs.h command.h .PHONY : clean clean : rm edit $(objects) 2.2 \u7f3a\u7701\u89c4\u5219 2.3 \u540e\u7f00\u89c4\u5219 3.\u53d8\u91cf 3.1 \u53d8\u91cf\u7684\u5f15\u7528 \u53d8\u91cf\u5f15\u7528\u7684\u5c55\u5f00\u8fc7\u7a0b\u662f\u4e25\u683c\u7684\u6587\u672c\u66ff\u6362\u8fc7\u7a0b,\u5c31\u662f\u8bf4\u53d8\u91cf\u503c\u7684\u5b57\u7b26\u4e32\u88ab\u7cbe\u786e\u7684\u5c55\u5f00\u5728\u53d8\u91cf\u88ab\u5f15\u7528\u7684\u5730\u65b9\u3002\u56e0\u6b64\u89c4\u5219: foo = c prog.o : prog.$(foo) $(foo) $(foo) -$(foo) prog.$(foo) \u88ab\u5c55\u5f00\u540e\u5c31\u662f: prog.c : prog.c cc -c prog.c 3.2 \u8bbe\u7f6e\u53d8\u91cf = \uff1a\u9012\u5f52\u65b9\u5f0f \uff1a= \uff1a\u9759\u6001\u65b9\u5f0f += \uff1a\u8ffd\u52a0\u65b9\u5f0f \uff1f= \uff1a\u6761\u4ef6\u8d4b\u503c 3.3 \u81ea\u52a8\u5316\u53d8\u91cf $@ \uff1a\u8868\u793a\u89c4\u5219\u7684\u76ee\u6807\u6587\u4ef6 $ \uff1a\u89c4\u5219\u7684\u7b2c\u4e00\u4f9d\u8d56\u6587\u4ef6 $^ \uff1a\u89c4\u5219\u7684\u6240\u6709\u4f9d\u8d56\u6587\u4ef6\u8868 $? \uff1a\u6240\u6709\u6bd4\u76ee\u6807\u6587\u4ef6\u66f4\u65b0\u7684\u4f9d\u8d56\u6587\u4ef6\u8868 3.4 \u53d8\u91cf MAKEFILES \u5982\u679c\u5728\u5f53\u524d\u73af\u5883\u5b9a\u4e49\u4e86\u4e00\u4e2a MAKEFILES \u73af\u5883\u53d8\u91cf,make\u6267\u884c\u65f6\u9996\u5148\u5c06\u6b64\u53d8\u91cf\u7684\u503c\u4f5c\u4e3a\u9700\u8981\u8bfb\u5165\u7684Makefile\u6587\u4ef6,\u591a\u4e2a\u6587\u4ef6\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u5206\u5f00\u3002\u7c7b\u4f3c\u4f7f\u7528\u6307\u793a\u7b26 include \u5305\u542b\u5176\u5b83Makefile\u6587\u4ef6\u4e00\u6837,\u5982\u679c\u6587\u4ef6\u540d\u975e\u7edd\u5bf9\u8def\u5f84\u800c\u4e14\u5f53\u524d\u76ee\u5f55\u4e5f\u4e0d\u5b58\u5728\u6b64\u6587\u4ef6,make\u4f1a\u5728\u4e00\u4e9b\u9ed8\u8ba4\u7684\u76ee\u5f55\u53bb\u5bfb\u627e\u3002 \u5b83\u548c\u4f7f\u7528 include \u7684\u533a\u522b: \u73af\u5883\u53d8\u91cf\u6307\u5b9a\u7684 makefile \u6587\u4ef6\u4e2d\u7684 \u76ee\u6807 \u4e0d\u4f1a\u88ab\u4f5c\u4e3a make \u6267\u884c\u7684 \u7ec8\u6781\u76ee\u6807 \u3002\u5c31\u662f\u8bf4,\u8fd9\u4e9b\u6587\u4ef6\u4e2d\u6240\u5b9a\u4e49\u89c4\u5219\u7684\u76ee\u6807, make \u4e0d\u4f1a\u5c06\u5176\u4f5c\u4e3a \u7ec8\u6781\u76ee\u6807 \u6765\u770b\u5f85\u3002 make \u6267\u884c\u65f6\u7684 \u7ec8\u6781\u76ee\u6807 \u5c31\u662f\u5f53\u524d\u76ee\u5f55\u4e0b\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u6240\u5b9a\u4e49\u7684 \u7ec8\u6781\u76ee\u6807 \u3002 \u73af\u5883\u53d8\u91cf\u6240\u5b9a\u4e49\u7684\u6587\u4ef6\u5217\u8868,\u5728\u6267\u884c make \u65f6,\u5982\u679c\u4e0d\u80fd\u627e\u5230\u5176\u4e2d\u67d0\u4e00\u4e2a\u6587\u4ef6(\u4e0d\u5b58\u5728\u6216\u8005\u65e0\u6cd5\u521b\u5efa)\u3002make \u4e0d\u4f1a\u63d0\u793a\u9519\u8bef,\u4e5f\u4e0d\u9000\u51fa\u3002\u5c31\u662f\u8bf4\u73af\u5883\u53d8\u91cf MAKEFILES \u5b9a\u4e49\u7684\u5305\u542b\u6587\u4ef6\u662f\u5426\u5b58\u5728\u4e0d\u4f1a\u5bfc\u81f4 make \u9519\u8bef(\u8fd9\u662f\u6bd4\u8f83\u9690\u853d\u7684\u5730\u65b9)\u3002 make \u5728\u6267\u884c\u65f6,\u9996\u5148\u8bfb\u53d6\u7684\u662f\u73af\u5883\u53d8\u91cf MAKEFILES \u6240\u6307\u5b9a\u7684\u6587\u4ef6\u5217\u8868,\u4e4b\u540e\u624d\u662f\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684 makefile \u6587\u4ef6, include \u6240\u6307\u5b9a\u7684\u6587\u4ef6\u662f\u5728 make \u53d1\u73b0\u6b64\u5173\u952e\u5b57\u7684\u65f6\u3001\u6682\u505c\u6b63\u5728\u8bfb\u53d6\u7684\u6587\u4ef6\u800c\u8f6c\u53bb\u8bfb\u53d6 include \u6240\u6307\u5b9a\u7684\u6587\u4ef6\u3002 \u53d8\u91cf MAKEFILES \u4e3b\u8981\u7528\u5728 make \u7684\u9012\u5f52\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7684\u7684\u901a\u4fe1\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u5f88\u5c11\u8bbe\u7f6e\u6b64\u53d8\u91cf\u3002\u56e0\u4e3a\u4e00\u65e6\u8bbe\u7f6e\u4e86\u6b64\u53d8\u91cf,\u5728\u591a\u7ea7make \u8c03\u7528\u65f6;\u7531\u4e8e\u6bcf\u4e00\u7ea7make\u90fd\u4f1a\u8bfb\u53d6\u201cMAKEFILES\u201d\u53d8\u91cf\u6240\u6307\u5b9a\u7684\u6587\u4ef6,\u5c06\u5bfc\u81f4\u6267\u884c\u51fa,\u73b0\u6df7\u4e71\u3002 GNU make\u5de5\u4f5c\u65b9\u5f0f 1. GNU\u7684make\u5de5\u4f5c\u65f6\u7684\u6267\u884c\u6b65\u9aa4 \u8bfb\u5165\u6240\u6709\u7684Makefile\u3002 \u8bfb\u5165\u88abinclude\u7684\u5176\u5b83Makefile\u3002 \u521d\u59cb\u5316\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u3002 \u63a8\u5bfc\u9690\u6666\u89c4\u5219\uff0c\u5e76\u5206\u6790\u6240\u6709\u89c4\u5219\u3002 \u4e3a\u6240\u6709\u7684\u76ee\u6807\u6587\u4ef6\u521b\u5efa\u4f9d\u8d56\u5173\u7cfb\u94fe\u3002 \u6839\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c\u51b3\u5b9a\u54ea\u4e9b\u76ee\u6807\u8981\u91cd\u65b0\u751f\u6210\u3002 \u6267\u884c\u751f\u6210\u547d\u4ee4\u3002 1-5\u6b65\u4e3a\u7b2c\u4e00\u4e2a\u9636\u6bb5\uff0c6-7\u4e3a\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u3002\u7b2c\u4e00\u4e2a\u9636\u6bb5\u4e2d\uff0c\u5982\u679c\u5b9a\u4e49\u7684\u53d8\u91cf\u88ab\u4f7f\u7528\u4e86\uff0c\u90a3\u4e48\uff0cmake\u4f1a\u628a\u5176\u5c55\u5f00\u5728\u4f7f\u7528\u7684\u4f4d\u7f6e\u3002\u4f46make\u5e76\u4e0d\u4f1a\u5b8c\u5168\u9a6c\u4e0a\u5c55\u5f00\uff0cmake\u4f7f\u7528\u7684\u662f\u62d6\u5ef6\u6218\u672f\uff0c\u5982\u679c\u53d8\u91cf\u51fa\u73b0\u5728\u4f9d\u8d56\u5173\u7cfb\u7684\u89c4\u5219\u4e2d\uff0c\u90a3\u4e48\u4ec5\u5f53\u8fd9\u6761\u4f9d\u8d56\u88ab\u51b3\u5b9a\u8981\u4f7f\u7528\u4e86\uff0c\u53d8\u91cf\u624d\u4f1a\u5728\u5176\u5185\u90e8\u5c55\u5f00 2.\u5d4c\u5957Make \u5728\u4e00\u4e9b\u5927\u7684\u5de5\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u628a\u6211\u4eec\u4e0d\u540c\u6a21\u5757\u6216\u662f\u4e0d\u540c\u529f\u80fd\u7684\u6e90\u6587\u4ef6\u653e\u5728\u4e0d\u540c\u7684\u76ee\u5f55\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u76ee\u5f55\u4e2d\u90fd\u4e66\u5199\u4e00\u4e2a\u8be5\u76ee\u5f55\u7684Makefile\uff0c\u8fd9\u6709\u5229\u4e8e\u8ba9\u6211\u4eec\u7684Makefile\u53d8\u5f97\u66f4\u52a0\u5730\u7b80\u6d01\uff0c\u800c\u4e0d\u81f3\u4e8e\u628a\u6240\u6709\u7684\u4e1c\u897f\u5168\u90e8\u5199\u5728\u4e00\u4e2aMakefile\u4e2d\uff0c\u8fd9\u6837\u4f1a\u5f88\u96be\u7ef4\u62a4\u6211\u4eec\u7684Makefile\uff0c\u8fd9\u4e2a\u6280\u672f\u5bf9\u4e8e\u6211\u4eec\u6a21\u5757\u7f16\u8bd1\u548c\u5206\u6bb5\u7f16\u8bd1\u6709\u7740\u975e\u5e38\u5927\u7684\u597d\u5904\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5b50\u76ee\u5f55\u53ebsubdir\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6709\u4e2aMakefile\u6587\u4ef6\uff0c\u6765\u6307\u660e\u4e86\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6587\u4ef6\u7684\u7f16\u8bd1\u89c4\u5219\u3002\u90a3\u4e48\u6211\u4eec\u603b\u63a7\u7684Makefile\u53ef\u4ee5\u8fd9\u6837\u4e66\u5199\uff1a subsystem: cd subdir $(MAKE) \u5176\u7b49\u4ef7\u4e8e\uff1a subsystem: $(MAKE) -C subdir \u5b9a\u4e49 $(MAKE) \u5b8f\u53d8\u91cf\u7684\u610f\u601d\u662f\uff0c\u4e5f\u8bb8\u6211\u4eec\u7684 make \u9700\u8981\u4e00\u4e9b\u53c2\u6570\uff0c\u6240\u4ee5\u5b9a\u4e49\u6210\u4e00\u4e2a\u53d8\u91cf\u6bd4\u8f83\u5229\u4e8e\u7ef4\u62a4\u3002\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u7684\u610f\u601d\u90fd\u662f\u5148\u8fdb\u5165 subdir \u76ee\u5f55\uff0c\u7136\u540e\u6267\u884c make \u547d\u4ee4\u3002 Makefile\u793a\u4f8b # $(notdir $(CURDIR)) \u83b7\u53d6\u76ee\u5f55\u540d TARGET = $(notdir $(CURDIR)) CROSS_COMPILE = gcc SOURCES = $(wildcard *.c) HEADERS = $(wildcard *.h) #\u9759\u6001\u6a21\u5f0f\u89c4\u5219 .c \u66ff\u6362\u6210 .o OBJFILES = $(patsubst %.c,%.o,$(SOURCES)) #OBJFILES = $(SOURCES:%.c=%.o) all:$(TARGET) @echo builded target:$^ $(TARGET): $(OBJFILES) @echo linking $@ from $^ $(CROSS_COMPILE) -o $@ $^ @echo obj $(OBJFILES) $(OBJFILES): %.o:%.c @echo compilinng $@ from $ ... $(CROSS_COMPILE) -c $ -o $@ @echo Compile finished .PHONY :clean clean: @echo Removing generated files rm -rf $(TARGET) *.d *.o","title":"MakeFile"},{"location":"linux/MakeFile/#makefile","text":"","title":"MakeFile"},{"location":"linux/MakeFile/#_1","text":"","title":"\u4ecb\u7ecd"},{"location":"linux/MakeFile/#_2","text":"\u76ee\u6807 \uff1a \u4f9d\u8d56 [tab] \u547d\u4ee4","title":"\u57fa\u672c\u89c4\u5219"},{"location":"linux/MakeFile/#_3","text":"\u4e00\u822c\u4e3a GNUmakefile \uff0c makefile \uff0c Makefile \uff0c\u63a8\u8350\u4f7f\u7528 Makefile","title":"\u547d\u540d"},{"location":"linux/MakeFile/#_4","text":"\u4f9d\u8d56\u6587\u4ef6\u4e0d\u5b58\u5728\u6216\u8005\u6587\u4ef6\u6709\u66f4\u65b0\u65f6\uff0c\u6267\u884cmake\u4f1a\u91cd\u65b0\u7f16\u8bd1","title":"\u66f4\u65b0"},{"location":"linux/MakeFile/#makefile_1","text":"\u5728\u4e00\u4e2a\u5b8c\u6574\u7684 Makefile \u4e2d,\u5305\u542b\u4e86 5 \u4e2a\u4e1c\u897f: \u663e\u5f0f\u89c4\u5219\u3001\u9690\u542b\u89c4\u5219\u3001\u53d8\u91cf\u5b9a\u4e49\u3001\u6307\u793a\u7b26\u548c\u6ce8\u91ca \u663e\u5f0f\u89c4\u5219 \uff1a\u663e\u5f0f\u89c4\u5219\u8bf4\u660e\u4e86\uff0c\u5982\u4f55\u751f\u6210\u4e00\u4e2a\u6216\u591a\u7684\u7684\u76ee\u6807\u6587\u4ef6\u3002\u8fd9\u662f\u7531Makefile\u7684\u4e66\u5199\u8005\u660e\u663e\u6307\u51fa\uff0c\u8981\u751f\u6210\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c\u751f\u6210\u7684\u547d\u4ee4\u3002 \u9690\u6666\u89c4\u5219 \uff1a\u7531\u4e8e\u6211\u4eec\u7684make\u6709\u81ea\u52a8\u63a8\u5bfc\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u9690\u6666\u7684\u89c4\u5219\u53ef\u4ee5\u8ba9\u6211\u4eec\u6bd4\u8f83\u7c97\u7cd9\u5730\u7b80\u7565\u5730\u4e66\u5199Makefile\uff0c\u8fd9\u662f\u7531make\u6240\u652f\u6301\u7684\u3002 \u53d8\u91cf\u7684\u5b9a\u4e49 \uff1a\u5728Makefile\u4e2d\u6211\u4eec\u8981\u5b9a\u4e49\u4e00\u7cfb\u5217\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u4e00\u822c\u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u6709\u70b9\u4f60C\u8bed\u8a00\u4e2d\u7684\u5b8f\uff0c\u5f53Makefile\u88ab\u6267\u884c\u65f6\uff0c\u5176\u4e2d\u7684\u53d8\u91cf\u90fd\u4f1a\u88ab\u6269\u5c55\u5230\u76f8\u5e94\u7684\u5f15\u7528\u4f4d\u7f6e\u4e0a\u3002 \u6307\u793a\u7b26 \uff1a\u5176\u5305\u62ec\u4e86\u4e09\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u5728\u4e00\u4e2aMakefile\u4e2d\u5f15\u7528\u53e6\u4e00\u4e2aMakefile\uff0c\u5c31\u50cfC\u8bed\u8a00\u4e2d\u7684include\u4e00\u6837\uff1b\u53e6\u4e00\u4e2a\u662f\u6307\u6839\u636e\u67d0\u4e9b\u60c5\u51b5\u6307\u5b9aMakefile\u4e2d\u7684\u6709\u6548\u90e8\u5206\uff0c\u5c31\u50cfC\u8bed\u8a00\u4e2d\u7684\u9884\u7f16\u8bd1#if\u4e00\u6837\uff1b\u8fd8\u6709\u5c31\u662f\u5b9a\u4e49\u4e00\u4e2a\u591a\u884c\u7684\u547d\u4ee4\u3002\u6709\u5173\u8fd9\u4e00\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u6211\u4f1a\u5728\u540e\u7eed\u7684\u90e8\u5206\u4e2d\u8bb2\u8ff0\u3002 \u6ce8\u91ca \uff1aMakefile\u4e2d\u53ea\u6709\u884c\u6ce8\u91ca\uff0c\u548cUNIX\u7684Shell\u811a\u672c\u4e00\u6837\uff0c\u5176\u6ce8\u91ca\u662f\u7528\u201c#\u201d\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5c31\u50cfC/C++\u4e2d\u7684\u201c//\u201d\u4e00\u6837\u3002\u5982\u679c\u4f60\u8981\u5728\u4f60\u7684Makefile\u4e2d\u4f7f\u7528\u201c#\u201d\u5b57\u7b26\uff0c\u53ef\u4ee5\u7528\u53cd\u659c\u6846\u8fdb\u884c\u8f6c\u4e49\uff0c\u5982\uff1a\u201c#\u201d\u3002","title":"Makefile\u7684\u5185\u5bb9"},{"location":"linux/MakeFile/#1","text":"","title":"1. \u663e\u5f0f\u89c4\u5219"},{"location":"linux/MakeFile/#11","text":"\u76ee\u6807 \uff1a \u4f9d\u8d56 [tab] \u547d\u4ee4","title":"1.1 \u57fa\u672c\u89c4\u5219"},{"location":"linux/MakeFile/#12","text":".PHONY clean clean: rm $(OBJS) .PHONY \u8868\u793a\u4e00\u4e2a\u4f2a\u76ee\u6807\uff0c\u82e5\u4e0d\u4f7f\u7528 .PHONY \uff0c\u518d\u6b21\u6267\u884c clean \u4f1a\u53d1\u73b0 clean \u662f\u6700\u65b0\u7684\uff0c\u65e0\u6cd5\u5b9e\u73b0\u6e05\u9664\u7684\u76ee\u7684\u3002 .PHONY \u8868\u793a\u4e00\u4e2a\u4f2a\u76ee\u6807\uff0c\u5e76\u4e0d\u662f\u771f\u662f\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u90fd\u53ef\u4ee5\u6267\u884c clean \u3002","title":"1.2 \u6e05\u7a7a\u76ee\u6807\u6587\u4ef6\u7684\u89c4\u5219"},{"location":"linux/MakeFile/#13","text":"Maekfile \u4e2d\u8868\u793a\u6587\u4ef6\u540d\u65f6\u53ef\u4f7f\u7528\u901a\u914d\u7b26\u3002\u53ef\u4f7f\u7528\u7684\u901a\u914d\u7b26\u6709: * \u3001 ? \u548c [...] \u3002 \u5728 Makefile \u4e2d\u901a\u914d\u7b26\u7684\u7528\u6cd5\u548c\u542b\u4e49\u548c Linux(unix)\u7684 Bourne shell \u5b8c\u5168\u76f8\u540c\u3002\u4f8b\u5982, *.c\u201d \u4ee3\u8868\u4e86\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u4ee5 .c \u7ed3\u5c3e\u7684\u6587\u4ef6\u7b49\u3002\u4f46\u662f\u5728 Makefile \u4e2d\u8fd9\u4e9b\u7edf\u914d\u7b26\u5e76\u4e0d\u662f\u53ef\u4ee5\u7528\u5728\u4efb\u4f55\u5730\u65b9,Makefile \u4e2d\u7edf\u914d\u7b26\u53ef\u4ee5\u51fa\u73b0\u5728\u4ee5\u4e0b\u4e24\u79cd\u573a\u5408: \u53ef\u4ee5\u7528\u5728\u89c4\u5219\u7684\u76ee\u6807\u3001\u4f9d\u8d56\u4e2d,make \u5728\u8bfb\u53d6 Makefile \u65f6\u4f1a\u81ea\u52a8\u5bf9\u5176\u8fdb\u884c\u5339\u914d\u5904\u7406(\u901a\u914d\u7b26\u5c55\u5f00); \u53ef\u51fa\u73b0\u5728\u89c4\u5219\u7684\u547d\u4ee4\u4e2d,\u901a\u914d\u7b26\u7684\u901a\u914d\u5904\u7406\u662f\u5728 shell \u5728\u6267\u884c\u6b64\u547d\u4ee4\u65f6\u5b8c\u6210\u7684\u3002 \u9664\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e4b\u5916\u7684\u5176\u5b83\u4e0a\u4e0b\u6587\u4e2d,\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u901a\u914d\u7b26\u3002\u800c\u662f\u9700\u8981\u901a\u8fc7\u51fd\u6570 wildcard \u6765\u5b9e\u73b0\u3002","title":"1.3 \u6587\u4ef6\u540d\u4f7f\u7528\u901a\u914d\u7b26"},{"location":"linux/MakeFile/#14","text":"\u4e00\u822c\u641c\u7d22 VPATH VPATH = src:../headers \u9009\u62e9\u6027\u641c\u7d22 vpath \u76ee\u5f55\u641c\u7d22\u673a\u5236 \u547d\u4ee4\u884c\u548c\u641c\u7d22\u76ee\u5f55 \u9690\u542b\u89c4\u5219\u548c\u641c\u7d22\u76ee\u5f55 \u5e93\u6587\u4ef6\u548c\u641c\u7d22\u8def\u5f84","title":"1.4 \u76ee\u5f55\u641c\u7d22"},{"location":"linux/MakeFile/#15","text":"TARGETS ...: TARGET-PATTERN: PREREQ-PATTERNS ... COMMANDS objects = foo.o bar.o all: $(objects) $(objects): %.o: %.c $(CC) -c $(CFLAGS) $ -o $@ \u89c4\u5219\u63cf\u8ff0\u4e86\u6240\u6709\u7684.o\u6587\u4ef6\u7684\u4f9d\u8d56\u6587\u4ef6\u4e3a\u5bf9\u5e94\u7684.c\u6587\u4ef6,\u5bf9\u4e8e\u76ee\u6807\u201cfoo.o\u201d,\u53d6\u5176\u830e\u201cfoo\u201d\u66ff\u4ee3\u5bf9\u5e94\u7684\u4f9d\u8d56\u6a21\u5f0f\u201c%.c\u201d\u4e2d\u7684\u6a21\u5f0f\u5b57\u7b26\u201c%\u201d\u4e4b\u540e\u53ef\u5f97\u5230\u76ee\u6807\u7684\u4f9d\u8d56\u6587\u4ef6\u201cfoo.c\u201d","title":"1.5 \u9759\u6001\u6a21\u5f0f"},{"location":"linux/MakeFile/#2","text":"","title":"2. \u9690\u5f0f\u89c4\u5219"},{"location":"linux/MakeFile/#21","text":"make \u672c\u8eab\u5b58\u5728\u4e00\u4e2a\u9ed8\u8ba4\u7684\u89c4\u5219,\u80fd\u591f\u81ea\u52a8\u5b8c\u6210\u5bf9 .c \u6587\u4ef6\u7684\u7f16\u8bd1\u5e76\u751f\u6210\u5bf9\u5e94\u7684 .o \u6587\u4ef6\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u7701\u7565\u6389\u63cf\u8ff0 .c \u6587\u4ef6\u548c .o \u4f9d\u8d56\u5173\u7cfb\u7684\u89c4\u5219,\u800c\u53ea\u9700\u8981\u7ed9\u51fa\u90a3\u4e9b\u7279\u5b9a\u7684\u89c4\u5219\u63cf\u8ff0 # sample Makefile objects = main.o kbd.o command.o edit : $(objects) cc -o edit $(objects) main.o : defs.h #\u81ea\u52a8\u63a8\u5bfc kbd.o : defs.h command.h command.o : defs.h command.h .PHONY : clean clean : rm edit $(objects)","title":"2.1 \u81ea\u52a8\u63a8\u5bfc\u89c4\u5219"},{"location":"linux/MakeFile/#22","text":"","title":"2.2 \u7f3a\u7701\u89c4\u5219"},{"location":"linux/MakeFile/#23","text":"","title":"2.3 \u540e\u7f00\u89c4\u5219"},{"location":"linux/MakeFile/#3","text":"","title":"3.\u53d8\u91cf"},{"location":"linux/MakeFile/#31","text":"\u53d8\u91cf\u5f15\u7528\u7684\u5c55\u5f00\u8fc7\u7a0b\u662f\u4e25\u683c\u7684\u6587\u672c\u66ff\u6362\u8fc7\u7a0b,\u5c31\u662f\u8bf4\u53d8\u91cf\u503c\u7684\u5b57\u7b26\u4e32\u88ab\u7cbe\u786e\u7684\u5c55\u5f00\u5728\u53d8\u91cf\u88ab\u5f15\u7528\u7684\u5730\u65b9\u3002\u56e0\u6b64\u89c4\u5219: foo = c prog.o : prog.$(foo) $(foo) $(foo) -$(foo) prog.$(foo) \u88ab\u5c55\u5f00\u540e\u5c31\u662f: prog.c : prog.c cc -c prog.c","title":"3.1 \u53d8\u91cf\u7684\u5f15\u7528"},{"location":"linux/MakeFile/#32","text":"= \uff1a\u9012\u5f52\u65b9\u5f0f \uff1a= \uff1a\u9759\u6001\u65b9\u5f0f += \uff1a\u8ffd\u52a0\u65b9\u5f0f \uff1f= \uff1a\u6761\u4ef6\u8d4b\u503c","title":"3.2 \u8bbe\u7f6e\u53d8\u91cf"},{"location":"linux/MakeFile/#33","text":"$@ \uff1a\u8868\u793a\u89c4\u5219\u7684\u76ee\u6807\u6587\u4ef6 $ \uff1a\u89c4\u5219\u7684\u7b2c\u4e00\u4f9d\u8d56\u6587\u4ef6 $^ \uff1a\u89c4\u5219\u7684\u6240\u6709\u4f9d\u8d56\u6587\u4ef6\u8868 $? \uff1a\u6240\u6709\u6bd4\u76ee\u6807\u6587\u4ef6\u66f4\u65b0\u7684\u4f9d\u8d56\u6587\u4ef6\u8868","title":"3.3 \u81ea\u52a8\u5316\u53d8\u91cf"},{"location":"linux/MakeFile/#34-makefiles","text":"\u5982\u679c\u5728\u5f53\u524d\u73af\u5883\u5b9a\u4e49\u4e86\u4e00\u4e2a MAKEFILES \u73af\u5883\u53d8\u91cf,make\u6267\u884c\u65f6\u9996\u5148\u5c06\u6b64\u53d8\u91cf\u7684\u503c\u4f5c\u4e3a\u9700\u8981\u8bfb\u5165\u7684Makefile\u6587\u4ef6,\u591a\u4e2a\u6587\u4ef6\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u5206\u5f00\u3002\u7c7b\u4f3c\u4f7f\u7528\u6307\u793a\u7b26 include \u5305\u542b\u5176\u5b83Makefile\u6587\u4ef6\u4e00\u6837,\u5982\u679c\u6587\u4ef6\u540d\u975e\u7edd\u5bf9\u8def\u5f84\u800c\u4e14\u5f53\u524d\u76ee\u5f55\u4e5f\u4e0d\u5b58\u5728\u6b64\u6587\u4ef6,make\u4f1a\u5728\u4e00\u4e9b\u9ed8\u8ba4\u7684\u76ee\u5f55\u53bb\u5bfb\u627e\u3002 \u5b83\u548c\u4f7f\u7528 include \u7684\u533a\u522b: \u73af\u5883\u53d8\u91cf\u6307\u5b9a\u7684 makefile \u6587\u4ef6\u4e2d\u7684 \u76ee\u6807 \u4e0d\u4f1a\u88ab\u4f5c\u4e3a make \u6267\u884c\u7684 \u7ec8\u6781\u76ee\u6807 \u3002\u5c31\u662f\u8bf4,\u8fd9\u4e9b\u6587\u4ef6\u4e2d\u6240\u5b9a\u4e49\u89c4\u5219\u7684\u76ee\u6807, make \u4e0d\u4f1a\u5c06\u5176\u4f5c\u4e3a \u7ec8\u6781\u76ee\u6807 \u6765\u770b\u5f85\u3002 make \u6267\u884c\u65f6\u7684 \u7ec8\u6781\u76ee\u6807 \u5c31\u662f\u5f53\u524d\u76ee\u5f55\u4e0b\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u6240\u5b9a\u4e49\u7684 \u7ec8\u6781\u76ee\u6807 \u3002 \u73af\u5883\u53d8\u91cf\u6240\u5b9a\u4e49\u7684\u6587\u4ef6\u5217\u8868,\u5728\u6267\u884c make \u65f6,\u5982\u679c\u4e0d\u80fd\u627e\u5230\u5176\u4e2d\u67d0\u4e00\u4e2a\u6587\u4ef6(\u4e0d\u5b58\u5728\u6216\u8005\u65e0\u6cd5\u521b\u5efa)\u3002make \u4e0d\u4f1a\u63d0\u793a\u9519\u8bef,\u4e5f\u4e0d\u9000\u51fa\u3002\u5c31\u662f\u8bf4\u73af\u5883\u53d8\u91cf MAKEFILES \u5b9a\u4e49\u7684\u5305\u542b\u6587\u4ef6\u662f\u5426\u5b58\u5728\u4e0d\u4f1a\u5bfc\u81f4 make \u9519\u8bef(\u8fd9\u662f\u6bd4\u8f83\u9690\u853d\u7684\u5730\u65b9)\u3002 make \u5728\u6267\u884c\u65f6,\u9996\u5148\u8bfb\u53d6\u7684\u662f\u73af\u5883\u53d8\u91cf MAKEFILES \u6240\u6307\u5b9a\u7684\u6587\u4ef6\u5217\u8868,\u4e4b\u540e\u624d\u662f\u5de5\u4f5c\u76ee\u5f55\u4e0b\u7684 makefile \u6587\u4ef6, include \u6240\u6307\u5b9a\u7684\u6587\u4ef6\u662f\u5728 make \u53d1\u73b0\u6b64\u5173\u952e\u5b57\u7684\u65f6\u3001\u6682\u505c\u6b63\u5728\u8bfb\u53d6\u7684\u6587\u4ef6\u800c\u8f6c\u53bb\u8bfb\u53d6 include \u6240\u6307\u5b9a\u7684\u6587\u4ef6\u3002 \u53d8\u91cf MAKEFILES \u4e3b\u8981\u7528\u5728 make \u7684\u9012\u5f52\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7684\u7684\u901a\u4fe1\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u5f88\u5c11\u8bbe\u7f6e\u6b64\u53d8\u91cf\u3002\u56e0\u4e3a\u4e00\u65e6\u8bbe\u7f6e\u4e86\u6b64\u53d8\u91cf,\u5728\u591a\u7ea7make \u8c03\u7528\u65f6;\u7531\u4e8e\u6bcf\u4e00\u7ea7make\u90fd\u4f1a\u8bfb\u53d6\u201cMAKEFILES\u201d\u53d8\u91cf\u6240\u6307\u5b9a\u7684\u6587\u4ef6,\u5c06\u5bfc\u81f4\u6267\u884c\u51fa,\u73b0\u6df7\u4e71\u3002","title":"3.4 \u53d8\u91cfMAKEFILES"},{"location":"linux/MakeFile/#gnu-make","text":"","title":"GNU make\u5de5\u4f5c\u65b9\u5f0f"},{"location":"linux/MakeFile/#1-gnumake","text":"\u8bfb\u5165\u6240\u6709\u7684Makefile\u3002 \u8bfb\u5165\u88abinclude\u7684\u5176\u5b83Makefile\u3002 \u521d\u59cb\u5316\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u3002 \u63a8\u5bfc\u9690\u6666\u89c4\u5219\uff0c\u5e76\u5206\u6790\u6240\u6709\u89c4\u5219\u3002 \u4e3a\u6240\u6709\u7684\u76ee\u6807\u6587\u4ef6\u521b\u5efa\u4f9d\u8d56\u5173\u7cfb\u94fe\u3002 \u6839\u636e\u4f9d\u8d56\u5173\u7cfb\uff0c\u51b3\u5b9a\u54ea\u4e9b\u76ee\u6807\u8981\u91cd\u65b0\u751f\u6210\u3002 \u6267\u884c\u751f\u6210\u547d\u4ee4\u3002 1-5\u6b65\u4e3a\u7b2c\u4e00\u4e2a\u9636\u6bb5\uff0c6-7\u4e3a\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u3002\u7b2c\u4e00\u4e2a\u9636\u6bb5\u4e2d\uff0c\u5982\u679c\u5b9a\u4e49\u7684\u53d8\u91cf\u88ab\u4f7f\u7528\u4e86\uff0c\u90a3\u4e48\uff0cmake\u4f1a\u628a\u5176\u5c55\u5f00\u5728\u4f7f\u7528\u7684\u4f4d\u7f6e\u3002\u4f46make\u5e76\u4e0d\u4f1a\u5b8c\u5168\u9a6c\u4e0a\u5c55\u5f00\uff0cmake\u4f7f\u7528\u7684\u662f\u62d6\u5ef6\u6218\u672f\uff0c\u5982\u679c\u53d8\u91cf\u51fa\u73b0\u5728\u4f9d\u8d56\u5173\u7cfb\u7684\u89c4\u5219\u4e2d\uff0c\u90a3\u4e48\u4ec5\u5f53\u8fd9\u6761\u4f9d\u8d56\u88ab\u51b3\u5b9a\u8981\u4f7f\u7528\u4e86\uff0c\u53d8\u91cf\u624d\u4f1a\u5728\u5176\u5185\u90e8\u5c55\u5f00","title":"1. GNU\u7684make\u5de5\u4f5c\u65f6\u7684\u6267\u884c\u6b65\u9aa4"},{"location":"linux/MakeFile/#2make","text":"\u5728\u4e00\u4e9b\u5927\u7684\u5de5\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u628a\u6211\u4eec\u4e0d\u540c\u6a21\u5757\u6216\u662f\u4e0d\u540c\u529f\u80fd\u7684\u6e90\u6587\u4ef6\u653e\u5728\u4e0d\u540c\u7684\u76ee\u5f55\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u76ee\u5f55\u4e2d\u90fd\u4e66\u5199\u4e00\u4e2a\u8be5\u76ee\u5f55\u7684Makefile\uff0c\u8fd9\u6709\u5229\u4e8e\u8ba9\u6211\u4eec\u7684Makefile\u53d8\u5f97\u66f4\u52a0\u5730\u7b80\u6d01\uff0c\u800c\u4e0d\u81f3\u4e8e\u628a\u6240\u6709\u7684\u4e1c\u897f\u5168\u90e8\u5199\u5728\u4e00\u4e2aMakefile\u4e2d\uff0c\u8fd9\u6837\u4f1a\u5f88\u96be\u7ef4\u62a4\u6211\u4eec\u7684Makefile\uff0c\u8fd9\u4e2a\u6280\u672f\u5bf9\u4e8e\u6211\u4eec\u6a21\u5757\u7f16\u8bd1\u548c\u5206\u6bb5\u7f16\u8bd1\u6709\u7740\u975e\u5e38\u5927\u7684\u597d\u5904\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5b50\u76ee\u5f55\u53ebsubdir\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6709\u4e2aMakefile\u6587\u4ef6\uff0c\u6765\u6307\u660e\u4e86\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6587\u4ef6\u7684\u7f16\u8bd1\u89c4\u5219\u3002\u90a3\u4e48\u6211\u4eec\u603b\u63a7\u7684Makefile\u53ef\u4ee5\u8fd9\u6837\u4e66\u5199\uff1a subsystem: cd subdir $(MAKE) \u5176\u7b49\u4ef7\u4e8e\uff1a subsystem: $(MAKE) -C subdir \u5b9a\u4e49 $(MAKE) \u5b8f\u53d8\u91cf\u7684\u610f\u601d\u662f\uff0c\u4e5f\u8bb8\u6211\u4eec\u7684 make \u9700\u8981\u4e00\u4e9b\u53c2\u6570\uff0c\u6240\u4ee5\u5b9a\u4e49\u6210\u4e00\u4e2a\u53d8\u91cf\u6bd4\u8f83\u5229\u4e8e\u7ef4\u62a4\u3002\u8fd9\u4e24\u4e2a\u4f8b\u5b50\u7684\u610f\u601d\u90fd\u662f\u5148\u8fdb\u5165 subdir \u76ee\u5f55\uff0c\u7136\u540e\u6267\u884c make \u547d\u4ee4\u3002","title":"2.\u5d4c\u5957Make"},{"location":"linux/MakeFile/#makefile_2","text":"# $(notdir $(CURDIR)) \u83b7\u53d6\u76ee\u5f55\u540d TARGET = $(notdir $(CURDIR)) CROSS_COMPILE = gcc SOURCES = $(wildcard *.c) HEADERS = $(wildcard *.h) #\u9759\u6001\u6a21\u5f0f\u89c4\u5219 .c \u66ff\u6362\u6210 .o OBJFILES = $(patsubst %.c,%.o,$(SOURCES)) #OBJFILES = $(SOURCES:%.c=%.o) all:$(TARGET) @echo builded target:$^ $(TARGET): $(OBJFILES) @echo linking $@ from $^ $(CROSS_COMPILE) -o $@ $^ @echo obj $(OBJFILES) $(OBJFILES): %.o:%.c @echo compilinng $@ from $ ... $(CROSS_COMPILE) -c $ -o $@ @echo Compile finished .PHONY :clean clean: @echo Removing generated files rm -rf $(TARGET) *.d *.o","title":"Makefile\u793a\u4f8b"},{"location":"linux/arm\u6c47\u7f16/","text":"ARM\u6c47\u7f16 ARM\u5904\u7406\u5668\u7684\u5de5\u4f5c\u6a21\u5f0f \u6a21\u5f0f\u8bf4\u660e: User : \u975e\u7279\u6743\u6a21\u5f0f\uff0c\u5927\u90e8\u5206\u4efb\u52a1\u6267\u884c\u5728\u8fd9\u79cd\u6a21\u5f0f FIQ : \u5f53\u4e00\u4e2a\u9ad8\u4f18\u5148\u7ea7\uff08fast) \u4e2d\u65ad\u4ea7\u751f\u65f6\u5c06\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f IRQ : \u5f53\u4e00\u4e2a\u4f4e\u4f18\u5148\u7ea7\uff08normal) \u4e2d\u65ad\u4ea7\u751f\u65f6\u5c06\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f Supervisor : \u5f53\u590d\u4f4d\u6216\u8f6f\u4e2d\u65ad\u6307\u4ee4\u6267\u884c\u65f6\u5c06\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f Abort : \u5f53\u5b58\u53d6\u5f02\u5e38\u65f6\u5c06\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f Undef : \u5f53\u6267\u884c\u672a\u5b9a\u4e49\u6307\u4ee4\u65f6\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f System : \u4f7f\u7528\u548cUser\u6a21\u5f0f\u76f8\u540c\u5bc4\u5b58\u5668\u96c6\u7684\u7279\u6743\u6a21\u5f0f Monitor : \u662f\u4e3a\u4e86\u5b89\u5168\u800c\u6269\u5c55\u51fa\u7684\u7528\u4e8e\u6267\u884c\u5b89\u5168\u76d1\u63a7\u4ee3\u7801\u7684\u6a21\u5f0f(Cortex\u591a\u51fa\u6765\u6b64\u6a21\u5f0f) \u5bc4\u5b58\u5668 R13 (the stack pointer register) \u5e38\u4f5c\u4e3a\u6808\u6307\u9488\u5bc4\u5b58\u5668\uff0c\u7528\u6765\u4fdd\u5b58\u6808\u5b58\u50a8\u7a7a\u95f4\u9996\u5730\u5740\u3002\u6bcf\u79cd \u5f02\u5e38\u6a21\u5f0f\u62e5\u6709\u81ea\u5df1\u7684 R13 \u4f5c\u4e3a\u6808\u6307\u9488 R14 (the linker register) \u94fe\u63a5\u5bc4\u5b58\u5668\uff0c\u4fdd\u5b58\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u503c\u3002\u5728 ARM \u4f53\u7cfb\u4e2d\u5177\u6709\u4e0b\u9762\u4e24\u79cd\u7279\u6b8a\u4f5c\u7528\u3002 \u6bcf\u4e00\u79cd\u5904\u7406\u5668\u6a21\u5f0f\u81ea\u5df1\u7684\u7269\u7406 R14 \u4e2d\u5b58\u653e\u5f53\u524d\u5b50\u7a0b\u5e8f\u7684\u8fd4\u56de\u5730\u5740\u3002\u5f53\u901a\u8fc7 BL \u6216\u8005 BLX \u6307\u4ee4\u8c03\u7528\u5b50\u7a0b\u5e8f\u662f\uff0c R14 \u88ab\u8bbe\u7f6e\u4e3a\u5b50\u7a0b\u5e8f\u7684\u8fd4\u56de\u5730\u5740\u3002\u5728\u5b50\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u628a R14 \u7684\u503c\u8d4b\u503c\u5230\u7a0b\u5e8f\u8ba1\u6570\u5668 PC \u4e2d\u65f6\uff0c\u5b50\u7a0b\u5e8f\u8fd4\u56de\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0 \u6267\u884c\u4e0b\u9a6c\u4efb\u4f55\u4e00\u6761\u6307\u4ee4\uff1a assembly MOV PC,LR BX LR \u5728\u5b50\u7a0b\u5e8f\u5165\u53e3\u4f7f\u7528\u4e0b\u9762\u6307\u4ee4\u5c06PC\u4fdd\u5b58\u5230\u6808\u4e2d\uff1a assembly STMFD SP! , { register , LR} /*\u4e0b\u9762\u6307\u4ee4\u53ef\u4ee5\u5b9e\u73b0\u5b50\u7a0b\u5e8f\u8fd4\u56de*/ LDMFD SP!, { REGISTER, PC } \u5f53\u5f02\u5e38\u4e2d\u65ad\u53d1\u751f\u65f6\uff0c\u8be5\u5f02\u5e38\u6a21\u5f0f\u7279\u5b9a\u7684\u7269\u7406 R14 \u88ab\u8bbe\u7f6e\u6210\u8be5\u5f02\u5e38\u6a21\u5f0f\u5c06\u8981\u8fd4\u56de\u7684\u5730\u5740\uff0c\u5bf9\u4e8e\u6709\u4e9b\u5f02\u5e38\u6a21\u5f0f\uff0c R14 \u7684\u503c\u53ef\u80fd\u4e0e\u5c06\u8fd4\u56de\u7684\u5730\u5740\u6709\u4e00\u4e2a\u5e38\u6570\u7684\u504f\u79fb\u91cf \u200b NOTE\uff1aR14\u5bc4\u5b58\u5668\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u901a\u7528\u5bc4\u5b58\u5668\u4f7f\u7528 R15 (the current program counter register) \u5f53\u524d\u7a0b\u5e8f\u8ba1\u6570\u5bc4\u5b58\u5668\uff0c\u4fdd\u5b58\u5f53\u524d\u53d6\u6307\u6307\u4ee4\u7684\u5730\u5740\u503c cpsr (the current program status register) \u5f53\u524d\u7a0b\u5e8f\u72b6\u6001\u5bc4\u5b58\u5668\uff0c N[31]: \u5982\u679c\u7a0b\u5e8f\u8fd0\u7b97\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0cN[31] \u7f6e1\u5426\u5219 \u6e050 Z[30]: \u5982\u679c\u7ed3\u679c\u4e3a0 \u7684\u8bdd, Z\u4f4d \u88ab\u7f6e1 \u5426\u5219 \u6e050 C[29]: \u5982\u679c\u8fd0\u884c\u52a0\u6cd5\u6307\u4ee4 \u52a0\u5b8c\u7684\u7ed3\u679c\u752832\u4f4d\u6ca1\u529e\u6cd5\u8868\u793a\uff08\u6ea2\u51fa\u4e86\uff09C \u7f6e1 \u5426\u5219 \u6e050 \u5982\u679c\u662f\u51cf\u6cd5\u8fd0\u7b97\u4ea7\u751f\u501f\u4f4d\uff0cC\u4f4d \u6e050 \u6ca1\u6709\u4ea7\u751f\u501f\u4f4d\uff0c C\u4f4d \u7f6e1 V[28]: \u7b26\u53f7\u4f4d\u53d1\u751f\u53d8\u5316\uff0c \u90a3\u4e48 V\u4f4d\u7f6e1\uff0c\u5426\u5219\u6e05\u96f6 I[7]: \u662f\u5426\u7981\u6b62 IRQ \u4e2d\u65ad\u6e90 F[6]: \u662f\u5426\u7981\u6b62 FIQ \u4e2d\u65ad\u6e90 T[5]: \u7f6e1\uff0c CPU\u5904\u4e8e Thumb \u72b6\u6001 \u6e050\uff0c CPU\u5904\u4e8e ARM \u72b6\u6001 M[4:0]: \u6a21\u5f0f\u4f4d\uff0c 2^5 , \u53ea\u7528\u4e868\u4e2a 10000 User mode; 10001 FIQ mode; 10011 SVC mode; 10111 Abort mode; 11011 Undfined mode; 11111 System mode; 10110 Monitor mode; 10010 IRQ; SPSR\uff1a \u4fdd\u5b58\u7a0b\u5e8f\u72b6\u6001\u5bc4\u5b58\u5668 (the save progrem status register) \u7528\u6765\u4fdd\u5b58 CPSR \u503c ARM\u6307\u4ee4 \u5206\u7c7b ARM\u6307\u4ee4\u96c6\u5206\u4e3a\u8df3\u8f6c\u6307\u4ee4\uff0c\u6570\u636e\u5904\u7406\u6307\u4ee4\uff0c\u7a0b\u5e8f\u72b6\u6001\u5bc4\u5b58\u5668\u4f20\u8f93\u6307\u4ee4\u3001Load/Store\u6307\u4ee4\u3001\u534f\u5904\u7406\u5668\u6307\u4ee4\u548c\u5f02\u5e38\u4e2d\u65ad\u6307\u4ee4 \u6307\u4ee4\u7684\u4e00\u822c\u7f16\u7801\u683c\u5f0f \u8bed\u6cd5\u683c\u5f0f\u5982 opcode { cond }{S} Rd , Rn , shifter_operand 31 - 28 27 - 25 24- 21 20 19-16 15-12 11 - 0 cond 001 opcode S Rn Rd shifter_operand opcode : \u6307\u4ee4\u64cd\u4f5c\u7b26\u7f16\u7801 cond : \u6307\u4ee4\u6267\u884c\u7684\u6761\u4ef6\u7f16\u7801 S : \u51b3\u5b9a\u6307\u4ee4\u7684\u64cd\u4f5c\u662f\u5426\u5f71\u54cdCPSR\u7684\u503c Rd : \u76ee\u6807\u5bc4\u5b58\u5668\u7f16\u7801 Rn : \u5305\u542b\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u7684\u5bc4\u5b58\u5668\u7f16\u7801 shifter_operand :\u8868\u793a\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570 ARM\u6307\u4ee4\u7684\u6761\u4ef6\u7801\u57df \u6761\u4ef6\u7801 \u52a9\u8bb0\u7b26 \u542b\u4e49 CPSR\u4e2d\u6761\u4ef6\u6807\u5fd7 0000 EQ \u76f8\u7b49 Z=1 0001 NE \u4e0d\u76f8\u7b49 Z=0 0010 CS/HS \u65e0\u7b26\u53f7\u6570\u5927\u4e8e\u7b49\u4e8e C=1 0011 CC/LO \u65e0\u7b26\u53f7\u6570\u5c0f\u4e8e C=0 0100 MI \u8d1f\u6570 N=1 0101 PL \u975e\u8d1f\u6570 N=0 0110 VS \u4e0a\u6ea2\u51fa V=1 0111 VC \u6ca1\u6709\u4e0a\u6ea2\u51fa V=0 1000 HI \u65e0\u7b26\u53f7\u6570\u5927\u4e8e C=1\u4e14Z=0 1001 LS \u65e0\u7b26\u53f7\u6570\u5c0f\u4e8e\u7b49\u4e8e C=0\u6216Z=1 1010 GE \u5e26\u7b26\u53f7\u6570\u5927\u4e8e\u7b49\u4e8e N=1\u4e14V=1\u6216 N=0\u4e14V=0 1011 LT \u5e26\u7b26\u53f7\u6570\u5c0f\u4e8e N=1\u4e14V=0\u6216 N=0\u4e14V=1 1100 GT \u5e26\u7b26\u53f7\u6570\u5927\u4e8e Z=0\u4e14N=V 1101 LE \u5e26\u7b26\u53f7\u6570\u5c0f\u4e8e\u7b49\u4e8e Z=1\u4e14N!=V 1110 AL \u65e0\u6761\u4ef6\u6267\u884c 1111 NV ARM\u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u6570\u636e\u5904\u7406\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u5bfb\u5740\u65b9\u5f0f \u5b57\u53ca\u65e0\u7b26\u53f7\u5b57\u8282\u7684 Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u6742\u7c7b Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u6279\u91cf Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u534f\u5904\u7406\u5668 Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f 1. \u6570\u636e\u5904\u7406\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u5bfb\u5740\u65b9\u5f0f shifter_operand \u901a\u5e38\u6709\u4e0b\u97623\u4e2d\u683c\u5f0f\uff1a \u7acb\u5373\u6570\u65b9\u5f0f\u3002 \u6bcf\u4e2a\u7acb\u5373\u6570\u7531\u4e00\u4e2a8\u4f4d\u5e38\u6570\u5faa\u73af\u53f3\u79fb\u5076\u6570\u4f4d\u5f97\u5230\uff0c\u5176\u4e2d\u5faa\u73af\u53cb\u8c0a\u7684\u4f4d\u6570\u6709\u4e00\u4e2a4\u4f4d\u4e8c\u8fdb\u5236\u7684\u4e24\u500d\u8868\u793a\uff0c\u5982\u679c\u7acb\u5373\u6570\u8bb0\u505a immediate \uff0c8\u4f4d\u5e38\u6570\u8bb0\u505a immed_8 \uff0c4\u4f4d\u5faa\u73af\u53f3\u79fb\u503c\u8bb0\u4f5c rotate_imm immediate = immed \u5faa\u73af\u53f3\u79fb\uff082 * rotate_imm\uff09 \u5bc4\u5b58\u5668\u65b9\u5f0f \u3002 \u5728\u5bc4\u5b58\u5668\u5bfb\u5740\u65b9\u5f0f\u4e0b\uff0c\u64cd\u4f5c\u6570\u5373\u4e3a\u5bc4\u5b58\u5668\u7684\u6570\u503c\uff0c\u5982\u4e0b\uff1a assembly MOV R3, R2 ADD R0, R1, R2 \u5bc4\u5b58\u5668\u79fb\u4f4d\u65b9\u5f0f \u5bc4\u5b58\u5668\u79fb\u4f4d\u65b9\u5f0f\u7684\u64cd\u4f5c\u6570\u4e3a\u5bc4\u5b58\u5668\u7684\u6570\u503c\u505a\u76f8\u5e94\u7684\u79fb\u4f4d\u800c\u5f97\u5230\uff0c\u5177\u4f53\u7684\u79fb\u4f4d\u65b9\u5f0f\u6709\u4e0b\u9762\u51e0\u79cd\uff1a ASR \uff1a\u7b97\u6570\u53f3\u79fb LSL \uff1a\u903b\u8f91\u5de6\u79fb LSR \uff1a\u903b\u8f91\u53f3\u79fb ROR \uff1a\u5faa\u73af\u53f3\u79fb RRX \uff1a\u6269\u5c55\u7684\u5faa\u73af\u53f3\u79fb 2. \u5b57\u53ca\u65e0\u7b26\u53f7\u5b57\u8282\u7684 Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f 3. \u6742\u7c7b Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u8fd9\u91cc\u8bf4\u7684\u6742\u7c7b Load/Store \u6307\u4ee4\u5305\u62ec\uff1a\u64cd\u4f5c\u6570\u4e3a\u534a\u5b57\uff08\u65e0\u7b26\u53f7\u6216\u8005\u5e26\u7b26\u53f7\u6570\uff09\u6570\u636e\uff1b\u64cd\u4f5c\u6570\u4e3a\u5e26\u7b26\u53f7\u7684\u5b57\u8282\u6570\u636e\uff1b\u53cc\u5b57\uff1b 4. \u6279\u91cf Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f 5. \u534f\u5904\u7406\u5668 Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u6307\u4ee4\u96c6 1. \u8df3\u8f6c\u6307\u4ee4 ARM\u4e2d\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u7a0b\u5e8f\u8df3\u8f6c\uff1a\u4e00\u79cd\u662f\u8df3\u8f6c\u6307\u4ee4\uff1b\u53e6\u4e00\u79cd\u662f\u76f4\u63a5\u5411PC\u5bc4\u5b58\u5668\u5199\u5165\u76ee\u6807\u503c B\u548cBL:\u8df3\u8f6c\u6307\u4ee4 \u4e24\u8005\u5747\u53ef\u4ee5\u8df3\u8f6c\u5230\u6307\u4ee4\u4e2d\u7684\u76ee\u6807\u5730\u5740\uff0c\u4e0d\u540c\u4e4b\u5904\u662f BL \u540c\u65f6\u8fd8\u5c06 PC \u5bc4\u5b58\u5668\u7684\u503c\u4fdd\u5b58\u5230 LR \u5bc4\u5b58\u5668\u4e2d \u8bed\u6cd5\u683c\u5f0f\uff1a B{L}{ cond } targer_address \u6307\u4ee4\u7684\u4f7f\u7528\uff1a BL\u6307\u4ee4\u7528\u4e8e\u5b9e\u73b0\u5b50\u7a0b\u5e8f\u7684\u8c03\u7528\uff08\u5982 BL lable \uff09\u3002\u5b50\u7a0b\u5e8f\u7684\u8fd4\u56de\u53ef\u4ee5\u901a\u8fc7\u5c06LR\u5bc4\u5b58\u5668\u7684\u503c\u590d\u5236\u5230PC\u5bc4\u5b58\u5668 BX R14 MOV PC , R14 \u5f53\u5b50\u7a0b\u5e8f\u5165\u53e3\u8c03\u7528\u4e86 STMFD R13! , { register , R14} , \u8fd4\u56de\u53ef\u4ee5\u7528 LDMFD R13!, { register ,PC} BLX \u8df3\u8f6c\u5230\u76ee\u6807\u5730\u5740\uff0c\u5e76\u5c06\u7a0b\u5e8f\u72b6\u6001\u5207\u6362\u4e3a Thumb \u72b6\u6001 BLX 2. \u6570\u636e\u5904\u7406\u6307\u4ee4 \u5927\u81f4\u52063\u7c7b\uff1a\u6570\u636e\u4f20\u9001\uff0c\u7b97\u6570\u903b\u8f91\u8fd0\u7b97\uff0c\u6bd4\u8f83\u6307\u4ee4 \u6570\u636e\u4f20\u9001\u6307\u4ee4 \u7528\u4e8e\u5411\u5bc4\u5b58\u5668\u4f20\u5165\u4e00\u4e2a\u5e38\u6570\uff0c\u8be5\u6307\u4ee4\u5305\u62ec\u4e00\u4e2a\u76ee\u6807\u5bc4\u5b58\u5668\u548c\u4e00\u4e2a\u6e90\u64cd\u4f5c\u6570 \u7b97\u6570\u903b\u8f91\u8fd0\u7b97 \u5305\u62ec\u4e00\u4e2a\u76ee\u6807\u5bc4\u5b58\u5668\u548c\u4e24\u4e2a\u6e90\u64cd\u4f5c\u6570\uff0c\u8be5\u6307\u4ee4\u5c06\u8fd0\u7b97\u7ed3\u679c\u5b58\u5165\u76ee\u6807\u5bc4\u5b58\u5668\uff0c\u540c\u65f6\u66f4\u65b0 CPSR \u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d \u6bd4\u8f83\u6307\u4ee4 \u4e0d\u4fdd\u5b58\u8fd0\u7b97\u7ed3\u679c\uff0c\u53ea\u66f4\u65b0 CPSR \u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u4f4d MOV \uff1a\u6570\u636e\u4f20\u9001 \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4f20\u9001\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d 31 - 28 27 - 25 24- 21 20 19-16 15-12 11 - 0 cond 001 1101 S \u5e94\u4e3a0 Rd shifter_operand MOV { } {S} , MVN \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u7684\u53cd\u7801\u4f20\u9001\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d \u683c\u5f0f\u540cMOV ADD : \u52a0\u6cd5\u6307\u4ee4 \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u76f8\u52a0\uff0c\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d 31 - 28 27 - 25 24- 21 20 19-16 15-12 11 - 0 cond 001 0100 S Rn Rd shifter_operand ADD { } {S} , , \u5178\u578b\u7528\u6cd5\uff1a add rx, rx, #1 add rd, rx,rx ,lsl #n add rs, pc, #offset ADC \uff1a \u5e26\u8fdb\u4f4d\u7684\u52a0\u6cd5\u6307\u4ee4 \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u76f8\u52a0\uff0c\u5728\u52a0\u4e0a CPSR \u4e2d\u7684C\u6761\u4ef6\u6807\u5fd7\u4e3a\u7684\u503c\u3002\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d \u683c\u5f0f\u540c ADD \u5b9e\u73b064\u4f4d\u6570\u76f8\u52a0\uff1a adds r4, r0, r2 @r0,r1\u5206\u522b\u4e3a\u9ad832\u4f4d\u548c\u4f4e32\u4f4d ADC r5, r1, r3 SUB \uff1a\u51cf\u6cd5\u6307\u4ee4 \u4ece Rn \u4e2d\u51cf\u53bb shifter_opperand \u8868\u793a\u7684\u6570\u636e\uff0c\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d SUB { } {S} , , SUB Rx\uff0c Rx\uff0c #1 @Rx = Rx - 1 SBC \uff1a\u5e26\u4f4d\u51cf\u6cd5\u6307\u4ee4 \u4ece Rn \u4e2d\u51cf\u53bb shifter_opperand \u8868\u793a\u7684\u6570\u636e\uff0c\u518d\u51cf\u53bb CPRS \u4e2dC\u6761\u4ef6\u6807\u5fd7\u4f4d\u7684\u53cd\u7801\uff0c\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d \u683c\u5f0f\u540cSUB RSB \uff1a \u9006\u5411\u51cf\u6cd5 \u4ece shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e2d\u51cf\u53bb Rn \uff0c\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d RCS \uff1a \u5e26\u4f4d\u9006\u5411\u51cf\u6cd5 \u4ece shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e2d\u51cf\u53bb Rn \uff0c\u518d\u51cf\u53bb CPRS \u4e2dC\u6761\u4ef6\u6807\u5fd7\u4f4d\u7684\u53cd\u7801,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d AND \uff1a \u903b\u8f91\u4e0e \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u4e0e\u64cd\u4f5c\uff0c,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d AND { } {S} \uff0c , ORR \uff1a\u903b\u8f91\u6216 \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u6216\u64cd\u4f5c\uff0c,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d ORR { } {S} \uff0c , ORR R3, R0, R3, LSL #8 @ R3\u4e2d\u7684\u6570\u636e\u5de6\u79fb8\u4f4d\uff0cORR\u64cd\u4f5c\u5c06R0\u7684\u4f4e8\u4f4d\u6570\u636e\u83b7\u53d6\u5230 EOR \uff1a\u903b\u8f91\u5f02\u6216 \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u5f02\u6216\u64cd\u4f5c\uff0c,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d EOR { } {S} \uff0c , BIC \uff1a \u4f4d\u6e05\u9664\u6307\u4ee4 \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u7684\u53cd\u7801\uff0c\u6309\u4f4d\u4f5c\u903b\u8f91\u4e0e\u64cd\u4f5c\uff0c,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d BIC { } {S} \uff0c , CMP \uff1a\u6bd4\u8f83\u6307\u4ee4 \u5c06\u5bc4\u5b58\u5668 Rn \u7684\u503c\u51cf\u53bb shifter_opperand \u8868\u793a\u7684\u6570\u503c\uff0c\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\uff0c\u540e\u9762\u7684\u6307\u4ee4\u5c31\u53ef\u4ee5\u6839\u636e CPSR \u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\u6765\u5224\u65ad\u662f\u5426\u6267\u884c CMP { } , CMP \u4e0e SUBS \u7684\u533a\u522b\u5728\u4e8e CMP \u6307\u4ee4\u4e0d\u4fdd\u5b58\u64cd\u4f5c\u7ed3\u679c CMN \uff1a \u57fa\u4e8e\u76f8\u53cd\u6570\u7684\u6bd4\u8f83\u6307\u4ee4 \u5c06\u5bc4\u5b58\u5668 Rn \u7684\u503c\u52a0\u4e0a shifter_opperand \u8868\u793a\u7684\u6570\u503c\uff0c\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\uff0c\u540e\u9762\u7684\u6307\u4ee4\u5c31\u53ef\u4ee5\u6839\u636e CPSR \u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\u6765\u5224\u65ad\u662f\u5426\u6267\u884c CMN { } , TST \uff1a \u6d4b\u8bd5\u6307\u4ee4 \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u4e0e\u64cd\u4f5c\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d TST { } , TSQ \uff1a \u76f8\u7b49\u6d4b\u8bd5\u6307\u4ee4 \u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u5f02\u6216\u64cd\u4f5c\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d TEQ { } , 3. \u4e58\u6cd5\u6307\u4ee4 MUL : 32\u4f4d\u4e58\u6cd5\u6307\u4ee4 \u5b9e\u73b0\u4e24\u4e2a32\u4f4d\u6570\uff08\u6709\u6216\u65e0\u7b26\u53f7\uff09\u7684\u4e58\u79ef\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u653e\u5230\u4e00\u4e2a32\u4f4d\u5bc4\u5b58\u5668\u4e2d\uff0c\u540c\u65f6\u6839\u636e\u8fd0\u7b97\u7ed3\u679c\u8bbe\u7f6e CPSR \u5bc4\u5b58\u5668\u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\u3002 \u8003\u8651\u6307\u4ee4\u6267\u884c\u7684\u6548\u7387\uff0c\u6307\u4ee4\u4e2d\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u653e\u5728\u5bc4\u5b58\u5668\u4e2d MUL { }, {S}, , , MUL R0, R1, R2 @ R0 = R1 * R2 MLA \uff1a32\u4f4d\u5e26\u52a0\u6570\u7684\u4e58\u6cd5 \u5b9e\u73b0\u4e24\u4e2a32\u4f4d\u6570\uff08\u6709\u6216\u65e0\u7b26\u53f7\uff09\u7684\u4e58\u79ef\uff0c\u518d\u5c06\u4e58\u79ef\u52a0\u4e0a\u7b2c\u4e09\u4e2a\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u653e\u5230\u4e00\u4e2a32\u4f4d\u5bc4\u5b58\u5668\u4e2d\uff0c\u540c\u65f6\u6839\u636e\u8fd0\u7b97\u7ed3\u679c\u8bbe\u7f6e CPSR \u5bc4\u5b58\u5668\u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\u3002 \u8003\u8651\u6307\u4ee4\u6267\u884c\u7684\u6548\u7387\uff0c\u6307\u4ee4\u4e2d\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u653e\u5728\u5bc4\u5b58\u5668\u4e2d MLA { }, {S}, , , \uff0c MUL R0, R1, R2, R3 @ R0 = R1 * R2 + R3 SMULL\uff1a 64\u4f4d\u6709\u7b26\u53f7\u6570\u4e58\u6cd5\u6307\u4ee4 SMLAL \uff1a64\u4f4d\u5e26\u52a0\u6570\u7684\u6709\u7b26\u53f7\u4e58\u6cd5\u6307\u4ee4 UMULL \uff1a64\u4f4d\u65e0\u7b26\u53f7\u4e58\u6cd5\u6307\u4ee4 UMLAL \uff1a64\u4f4d\u5e26\u52a0\u6570\u7684\u65e0\u7b26\u53f7\u4e58\u6cd5\u6307\u4ee4 4. \u6742\u7c7b\u7684\u7b97\u6570\u6307\u4ee4 CLZ : \u524d\u5bfc0\u4e2a\u6570\u8ba1\u6570\u6307\u4ee4 \u8ba1\u7b97\u5bc4\u5b58\u5668\u4e2d\u64cd\u4f5c\u6570\u6700\u9ad8\u7aef0\u4e2a\u6570 CLZ { } , 5. \u72b6\u6001\u5bc4\u5b58\u5668\u7684\u8bbf\u95ee\u6307\u4ee4 MRS \uff1a\u72b6\u6001\u5bc4\u5b58\u5668\u5230\u901a\u7528\u5bc4\u5b58\u5668\u7684\u4f20\u9001\u6307\u4ee4 MRS { }, , CPSR MRS { }, , SPSR \u6307\u4ee4\u7684\u4f7f\u7528\uff1a \u4e3b\u8981\u7528\u4e8e\u4ee5\u4e0b3\u79cd\u573a\u5408\uff1a \u901a\u5e38\u901a\u8fc7 \u8bfb\u53d6 - \u4fee\u6539 - \u5199\u56de \u64cd\u4f5c\u5e8f\u5217\u4fee\u6539\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\uff0c MRS \u7528\u4e8e\u8bfb\u53d6 \u5f53\u5f02\u5e38\u4e2d\u65ad\u5141\u8bb8\u5d4c\u5957\u65f6\uff0c\u9700\u8981\u8fdb\u5165\u5f02\u5e38\u4e2d\u65ad\u4e4b\u540e\uff0c\u5d4c\u5957\u4e2d\u65ad\u53d1\u751f\u4e4b\u524d\u4fdd\u5b58\u5f53\u524d\u5904\u7406\u5668\u6a21\u5f0f\u5bf9\u5e94\u7684 SPSR \u5728\u8fdb\u7a0b\u5207\u6362\u65f6\u4e5f\u9700\u8981\u4fdd\u5b58\u5f53\u524d\u72b6\u6001\u5bc4\u5b58\u5668\u503c MSR \uff1a\u901a\u7528\u5bc4\u5b58\u5668\u5230\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u4f20\u9001\u6307\u4ee4 MRS { }, CPSR_ , # MRS { }, CPSR_ , MSR CPSR_c, R0 @\u4ec5\u4ec5\u4fee\u6539\u63a7\u5236\u4f4d\u57df MSR CPSR\uff0cR1 6. Load/Store\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4 LDR \uff1a \u5b57\u6570\u636e\u8bfb\u53d6\u6307\u4ee4 \u4ece\u5185\u5b58\u5c06\u4e00\u4e2a32\u4f4d\u7684\u5b57\u8bfb\u53d6\u5230\u6307\u4ee4\u4e2d\u7684\u76ee\u6807\u5bc4\u5b58\u5668\u4e2d\uff0c\u5982\u679c\u6307\u4ee4\u4e2d\u7684\u5bfb\u5740\u65b9\u5f0f\u786e\u5b9a\u7684\u5730\u5740\u4e0d\u662f\u5b57\u5bf9\u9f50\uff0c\u5219\u4ece\u5185\u5b58\u72ec\u5904\u7684\u6570\u636e\u8981\u8fdb\u884c\u5faa\u73af\u53f3\u79fb\u64cd\u4f5c\uff0c\u79fb\u4f4d\u7684\u4f4d\u6570\u4e3a\u5bfb\u5740\u65b9\u5f0f\u786e\u5b9a\u5730\u5740\u7684bit[1:0]\u76848\u500d LDR { }, , \u6307\u4ee4\u7684\u4f7f\u7528 \u7528\u4e8e\u4ece\u5185\u5b58\u8bfb\u53d632\u4f4d\u5b57\u6570\u636e\u5230\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5728\u8be5\u5bc4\u5b58\u5668\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u5b9a\u64cd\u4f5c \u5f53PC\u4f5c\u4e3a\u6307\u4ee4\u4e2d\u7684\u76ee\u6807\u5bc4\u5b58\u5668\u65f6\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7a0b\u5e8f\u8df3\u8f6c LDR R0, [R1, #4] @\u5185\u5b58\u5355\u5143R1+4\u4e2d\u7684\u5b57\u8bfb\u53d6\u5230R0\u5bc4\u5b58\u5668 LDR R0, [R1, R2] @\u5185\u5b58\u5355\u5143R1+R2\u4e2d\u7684\u5b57\u8bfb\u53d6\u5230R0\u5bc4\u5b58\u5668 LDR R0, [R1], #4 @\u5185\u5b58\u5355\u5143R1\u4e2d\u7684\u5b57\u8bfb\u53d6\u5230R0\u5bc4\u5b58\u5668,\u7136\u540eR1=R1+4 LDR R0, [R1], R2 @\u5185\u5185\u5b58\u5355\u5143R1\u4e2d\u7684\u5b57\u8bfb\u53d6\u5230R0\u5bc4\u5b58\u5668,\u7136\u540eR1=R1+R2 LDRB \uff1a\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u6307\u4ee4 LDRH \uff1a \u534a\u5b57\u6570\u636e\u8bfb\u53d6\u6307\u4ee4 LDRSB \uff1a \u6709\u7b26\u53f7\u7684\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u6307\u4ee4 LDRSH \uff1a \u6709\u7b26\u53f7\u7684\u534a\u5b57\u6570\u636e\u8bfb\u53d6\u6307\u4ee4 LDRT \uff1a \u7528\u6237\u6a21\u5f0f\u7684\u5b57\u6570\u636e\u8bfb\u53d6\u6307\u4ee4 LDRBT \uff1a \u7528\u6237\u6a21\u5f0f\u7684\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u6307\u4ee4 STR \uff1a \u5b57\u6570\u636e\u5199\u5165\u6307\u4ee4 \u4ece\u5185\u5b58\u5c06\u4e00\u4e2a32\u4f4d\u7684\u5b57\u5199\u5165\u5230\u6307\u5b9a\u7684\u5185\u5b58\u5355\u5143 STR { }, , STR R0, [R1, #0X100] @\u5c06R0\u4e2d\u7684\u5b57\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u5355\u5143\uff08R1 + 0X100)\u4e2d STR R0, [R1], #8 @\u5c06R0\u4e2d\u7684\u5b57\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u5355\u5143\uff08R1\uff09\u4e2d\uff0cR1=R1+8 STRB \uff1a \u5b57\u8282\u6570\u636e\u5199\u5165\u6307\u4ee4 STRH \uff1a\u534a\u5b57\u6570\u636e\u5199\u5165\u6307\u4ee4 STRBT \uff1a \u7528\u6237\u6a21\u5f0f\u5b57\u6570\u636e\u5199\u5165\u6307\u4ee4 STRT \uff1a \u7528\u6237\u6a21\u5f0f\u5b57\u6570\u636e\u5199\u5165\u6307\u4ee4 7. \u6279\u91cfLoad/Store\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4 LDM(1)\uff1a\u6279\u91cf\u5185\u5b58\u5b57\u6570\u636e\u8bfb\u53d6 LDM { } {!} , ldr r0, =0x40000000 @\u4f2a\u6307\u4ee4 LDM r0, {r1,r2,r3} LDM(2) \uff1a\u5e26\u72b6\u6001\u5bc4\u5b58\u5668\u7684 LDM { } {!} , ^ STM\uff1a\u6279\u91cf\u5185\u5b58\u5b57\u6570\u636e\u6279\u91cf\u5199\u5165\u6307\u4ee4 STM { } ! , 8. \u4fe1\u53f7\u91cf\u64cd\u4f5c\u6307\u4ee4 SWP \uff1a\u4ea4\u6362\u6307\u4ee4 SWP { } , , [ ] swp r1, r2, [r3] @r3\u8bfb\u5230r1\u4e2d\uff0c\u540c\u65f6r2\u5199\u5165r3\u4e2d swp r1, r1, [r2] @r1\u4e0er2\u4e92\u6362 SWPB\uff1a\u5b57\u8282\u4ea4\u6362\u6307\u4ee4 9. \u5f02\u5e38\u4e2d\u65ad\u4ea7\u751f\u6307\u4ee4 SWI\uff1a\u8f6f\u4e2d\u65ad\u6307\u4ee4 \u7528\u4e8e\u4ea7\u751fSWI\u5f02\u5e38\u4e2d\u65ad\uff0cARM\u901a\u8fc7\u8fd9\u79cd\u673a\u5236\u5b9e\u73b0\u7528\u6237\u6a21\u5f0f\u5bf9\u7cfb\u7edf\u4e2d\u7279\u6743\u6a21\u5f0f\u7684\u7a0b\u5e8f\u8c03\u7528 SWI { } \u6307\u4ee4\u7684\u4f7f\u7528\uff1a \u6307\u4ee4\u4e2d24\u4f4d\u7acb\u5373\u6570\u5236\u5b9a\u4e86\u7528\u6237\u8bf7\u6c42\u7684\u670d\u52a1\u7c7b\u578b\uff0c\u53c2\u6570\u662f\u901a\u8fc7\u901a\u7528\u5bc4\u5b58\u5668\u4f20\u9012 \u6307\u4ee4\u768424\u4f4d\u7acb\u5373\u6570\u88ab\u5ffd\u7565\uff0c\u7528\u6237\u8bf7\u6c42\u7684\u670d\u52a1\u7c7b\u578b\u7531\u5bc4\u5b58\u5668R0\u6570\u503c\u51b3\u5b9a\uff0c\u53c2\u6570\u901a\u8fc7\u5176\u4ed6\u901a\u7528\u5bc4\u5b58\u5668\u4f20\u9012 SWI\u6307\u4ee4\u7531\u7cfb\u7edf\u5b8c\u6210\u4ee5\u4e0b\u5de5\u4f5c R14_svc = SWI\u6307\u4ee4\u7684\u4e0b\u9762\u4e00\u5957\u6307\u4ee4\u7684\u5730\u5740 SPSR_svc = CPSR //\u4fdd\u5b58\u5f53\u524d\u7684CPSR CPSR[4:0] = 0b10011 //\u4f7f\u5904\u7406\u5668\u5207\u6362\u5230\u7279\u6743\u6a21\u5f0f CPSR[5] = 0 // \u4f7f\u7528\u7a0b\u5e8f\u8fdb\u5165ARM\u72b6\u6001 CPSR[7] = 1 // \u7981\u6b62\u6b63\u5e38\u4e2d\u65ad\u54cd\u5e94 //\u7a0b\u5e8f\u8df3\u8f6c\u5230\u76f8\u5e94\u7684\u4e2d\u65ad\u5411\u91cf\u5904 if high vectors configured then PC = 0xffff0008 else pc= 0x00000008 BKPT \uff1a\u65ad\u70b9\u4e2d\u65ad\u6307\u4ee4 10. \u534f\u5904\u7406\u6307\u4ee4 \u534f\u5904\u7406\u5668\u6307\u4ee4\u5305\u62ec\u4ee5\u4e0b3\u7c7b\uff1a \u7528\u4e8eARM\u5904\u7406\u5668\u521d\u59cb\u5316ARM\u534f\u5904\u7406\u5668\u7684\u6570\u636e\u51fa\u5904\u64cd\u4f5c \u7528\u4e8eARM\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u548cARM\u534f\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u95f4\u7684\u6570\u636e\u4f20\u9001\u64cd\u4f5c \u7528\u4e8eARM\u534f\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u5355\u5143\u4e4b\u95f4\u4f20\u9001\u6570\u636e \u8fd9\u4e9b\u6307\u4ee4\u5305\u62ec\u4ee5\u4e0b5\u6761\uff1a CDP \u534f\u5904\u7406\u6570\u636e\u64cd\u4f5c LDC \u534f\u5904\u7406\u6570\u636e\u8bfb\u53d6 STC \u534f\u5904\u7406\u5668\u6570\u636e\u5199\u5165 MCR ARM\u5bc4\u5b58\u5668\u5230\u534f\u5904\u7406\u5668\u5bc4\u5b58\u5668\u7684\u6570\u636e\u4f20\u9001 MRC \u534f\u5904\u7406\u5668\u5bc4\u5b58\u5668\u5230ARM\u5bc4\u5b58\u5668\u7684\u6570\u636e\u4f20\u9001 \u6c47\u7f16\u7a0b\u5e8f\u8bbe\u8ba1 \u4f2a\u64cd\u4f5c 1. \u7b26\u53f7\u5b9a\u4e49\u4f2a\u64cd\u4f5c GBLA, GBLL GBLS \uff1a\u58f0\u660e\u5168\u5c40\u53d8\u91cf LCLA\uff0cLCLL LCLS \uff1a \u58f0\u660e\u5c40\u90e8\u53d8\u91cf SETA\uff0cSETL SETS \uff1a\u7ed9\u53d8\u91cf\u8d4b\u503c RLIST \uff1a\u4e3a\u901a\u7528\u5bc4\u5b58\u5668\u5217\u8868\u5b9a\u4e49\u540d\u79f0 CN \uff1a\u4e3a\u534f\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u5b9a\u4e49\u540d\u79f0 CP \uff1a \u4e3a\u534f\u5904\u7406\u5668\u5b9a\u4e49\u540d\u79f0 DN SN \uff1a\u4e3aVFP\u7684\u5bc4\u5b58\u5668\u5b9a\u4e49\u540d\u79f0 FN \uff1a\u4e3aFPA\u7684\u6d6e\u70b9\u5bc4\u5b58\u5668\u5b9a\u4e49\u540d\u79f0 2. \u6570\u636e\u5b9a\u4e49\u4f2a\u64cd\u4f5c LTORG \uff1a\u58f0\u660e\u4e00\u4e2a\u6570\u636e\u7f13\u51b2\u6c60\u7684\u5f00\u59cb MAP \uff1a\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u5185\u5b58\u8868\u7684\u9996\u5730\u5740 FIELD \uff1a\u5b9a\u4e49\u7ed3\u6784\u5316\u7684\u5185\u5b58\u8868\u4e2d\u7684\u4e00\u4e2a\u6570\u636e\u57df SPACE \uff1a\u5206\u914d\u4e00\u5757\u5185\u5b58\u5355\u5143 DCB \uff1a \u5206\u914d\u4e00\u6bb5\u5b57\u8282\u7684\u5185\u5b58\u5355\u5143\uff0c\u5e76\u6307\u5b9a\u6570\u636e\u521d\u59cb\u5316 DCD DCDU \uff1a\u5206\u914d\u4e00\u6bb5\u5b57\u7684\u5185\u5b58\u5355\u5143\uff0c\u5e76\u7528\u5b9a\u6570\u636e\u521d\u59cb\u5316 DCDO \uff1a \u5206\u914d\u4e00\u6bb5\u5b57\u7684\u5185\u5b58\u5355\u5143\uff0c\u5e76\u5c06\u6bcf\u4e2a\u5355\u5143\u7684\u5185\u5bb9\u521d\u59cb\u5316\u6210\u8be5\u5355\u5143\u76f8\u5bf9\u4e8e\u9759\u6001\u57fa\u503c\u5bc4\u5b58\u5668\u7684\u504f\u79fb\u91cf DCFD DCFDU\uff1a\u5206\u914d\u4e00\u6bb5\u53cc\u5b57\u5185\u5b58\u5355\u5143\uff0c\u5e76\u7528\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u636e\u521d\u59cb\u5316 DCFS DCFSU \uff1a \u5206\u914d\u4e00\u6bb5\u5b57\u7684\u5185\u5b58\u5355\u5143\uff0c\u5e76\u7528\u5355\u7cbe\u5ea6\u6570\u636e\u521d\u59cb\u5316 DCI \uff1a\u5206\u914d\u4e00\u6bb5\u5b57\u8282\u7684\u5185\u5b58\u5355\u5143\uff0c\u7528\u6307\u5b9a\u6570\u636e\u521d\u59cb\u5316\uff0c\u6307\u5b9a\u5185\u5b58\u5355\u5143\u4e2d\u5b58\u653e\u7684\u65f6\u4ee3\u7801\u4e0d\u662f\u6570\u636e DCQ DCQU \uff1a \u5206\u914d\u4e00\u6bb5\u534a\u5b57\u5185\u5b58\u5355\u5143\uff0c\u5e76\u752864\u4f4d\u6574\u6570\u521d\u59cb\u5316 DCW DCWU \uff1a\u5206\u914d\u4e00\u6bb5\u534a\u5b57\u7684\u5185\u5b58\u5355\u5143 \uff0c\u5e76\u7528\u6307\u4ee4\u6570\u636e\u521d\u59cb\u5316 DATA \uff1a\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u6570\u636e\uff0c\u73b0\u5728\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528 3. \u6c47\u7f16\u63a7\u5236\u4f2a\u64cd\u4f5c IF, ELSE ENDIF WHILE WEND MACRO MEND MEXIT 4. \u67b6\u6784\u63cf\u8ff0\u4f2a\u64cd\u4f5c 5. \u4fe1\u606f\u62a5\u544a\u4f2a\u64cd\u4f5c ASSERT INFO OPT TTL SUBT 6. \u5176\u4ed6\u4f2a\u64cd\u4f5c ALIGN AREA CODE16 CODE32 END ENTRY EQU EXPORT or GLOBAL \u4f2a\u6307\u4ee4 1. ADR(\u5c0f\u8303\u56f4\u7684\u5730\u5740\u8bfb\u53d6\u4f2a\u6307\u4ee4) \u8be5\u6307\u4ee4\u57fa\u4e8ePC\u503c\u6216\u8005\u57fa\u4e8e\u53ca\u5bc4\u5b58\u5668\u5730\u5740\u503c\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u7528\u4e00\u4e2aADD\u6216\u8005SUB\u6307\u4ee4\u6765\u5b9e\u73b0\u8be5\u6307\u4ee4\u3002 ADR {cond} register , expr start MOV r0 , #10; // pc\u503c\u4f4d\u5f53\u524d\u6307\u4ee4\u5730\u5740\u52a08\u5b57\u8282 ADR r4, start; // \u88ab\u7f16\u8bd1\u5668\u66ff\u6362\u4e3aSUB r4, pc , #0xc 2. ADRL(\u4e2d\u7b49\u8303\u56f4\u5730\u5740\u8bfb\u53d6\u4f2a\u6307\u4ee4) \u8be5\u6307\u4ee4\u57fa\u4e8ePC\u503c\u6216\u8005\u57fa\u4e8e\u53ca\u5bc4\u5b58\u5668\u5730\u5740\u503c\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u6bd4ADR\u53ef\u4ee5\u8bfb\u53d6\u66f4\u5927\u8303\u56f4\u5730\u5740\u3002\u7f16\u8bd1\u5668\u66ff\u6362\u6210\u4e24\u6761\u6307\u4ee4 ADRL {cond} register , expr 3. LDR \u5927\u8303\u56f4\u5730\u5740\u8bfb\u53d6\u4f2a\u6307\u4ee4 \u5c06\u4e00\u4e2a32\u4f4d\u5e38\u6570\u6216\u8005\u4e00\u4e2a\u5730\u5740\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668\u4e2d LDR {cond} register, =[expr] [label-expr] expr \u4e3a32\u4f4d\u5e38\u91cf \u5f53 expr \u8868\u793a\u7684\u5730\u5740\u6ca1\u6709\u8d85\u8fc7 mov \u6216 mvn \u6307\u4ee4\u7684\u5730\u5740\u53d6\u503c\u8303\u56f4\uff0c\u7f16\u8bd1\u5668\u4f1a\u7528 mov \u6216\u8005 mvn \u4ee3\u66ff \u5f53 expr \u8868\u793a\u7684\u5730\u5740\u8d85\u8fc7 mov \u6216 mvn \u6307\u4ee4\u7684\u5730\u5740\u53d6\u503c\u8303\u56f4\uff0c\u7f16\u8f91\u5668\u5c06\u8be5\u5e38\u6570\u653e\u5728\u6570\u636e\u7f13\u51b2\u533a\uff0c\u540c\u65f6\u7528\u4e00\u6761\u57fa\u4e8e PC \u7684 LDR \u6307\u4ee4\u8bfb\u53d6\u8be5\u5e38\u6570 ldr r1, =0xff5678; 4. NOP \u7a7a\u64cd\u4f5c\u4f2a\u6307\u4ee4 \u8be5\u4f2a\u6307\u4ee4\u5728\u6c47\u7f16\u65f6\u88ab\u66ff\u6362\u6210ARM\u7a7a\u64cd\u4f5c \u8bed\u53e5\u683c\u5f0f \u7a0b\u5e8f\u683c\u5f0f \u6c47\u7f16\u5b9e\u4f8b 1. \u5b50\u7a0b\u5e8f\u8df3\u8f6c ARM\u7f16\u8bd1\u5668\u547d\u4ee4\u683c\u5f0f \u7f16\u8bd1\u5668\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b complier [PCS-options] [source-language] [search-paths] [preprocessor-options] [output-format] [target-option] [debug-option] [code-generation-option] [warninf-option] [additional-checks] [error-option] [source] complier \u53ef\u4ee5\u662f armcc,tcc,armcpp PCS-options \u6307\u5b9a\u6240\u4f7f\u7528\u7684\u8fc7\u7a0b\u8c03\u7528\u6807\u51c6 source-language \u6307\u5b9a\u7f16\u8bd1\u5668\u63a5\u53d7\u7684\u6e90\u7a0b\u5e8f\u7c7b\u578b search-path \u6307\u5b9a\u641c\u7d22\u5934\u6587\u4ef6\u548c\u6e90\u6587\u4ef6\u7684\u8def\u5f84","title":"ARM\u6c47\u7f16"},{"location":"linux/arm\u6c47\u7f16/#arm","text":"","title":"ARM\u6c47\u7f16"},{"location":"linux/arm\u6c47\u7f16/#arm_1","text":"\u6a21\u5f0f\u8bf4\u660e: User : \u975e\u7279\u6743\u6a21\u5f0f\uff0c\u5927\u90e8\u5206\u4efb\u52a1\u6267\u884c\u5728\u8fd9\u79cd\u6a21\u5f0f FIQ : \u5f53\u4e00\u4e2a\u9ad8\u4f18\u5148\u7ea7\uff08fast) \u4e2d\u65ad\u4ea7\u751f\u65f6\u5c06\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f IRQ : \u5f53\u4e00\u4e2a\u4f4e\u4f18\u5148\u7ea7\uff08normal) \u4e2d\u65ad\u4ea7\u751f\u65f6\u5c06\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f Supervisor : \u5f53\u590d\u4f4d\u6216\u8f6f\u4e2d\u65ad\u6307\u4ee4\u6267\u884c\u65f6\u5c06\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f Abort : \u5f53\u5b58\u53d6\u5f02\u5e38\u65f6\u5c06\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f Undef : \u5f53\u6267\u884c\u672a\u5b9a\u4e49\u6307\u4ee4\u65f6\u4f1a\u8fdb\u5165\u8fd9\u79cd\u6a21\u5f0f System : \u4f7f\u7528\u548cUser\u6a21\u5f0f\u76f8\u540c\u5bc4\u5b58\u5668\u96c6\u7684\u7279\u6743\u6a21\u5f0f Monitor : \u662f\u4e3a\u4e86\u5b89\u5168\u800c\u6269\u5c55\u51fa\u7684\u7528\u4e8e\u6267\u884c\u5b89\u5168\u76d1\u63a7\u4ee3\u7801\u7684\u6a21\u5f0f(Cortex\u591a\u51fa\u6765\u6b64\u6a21\u5f0f)","title":"ARM\u5904\u7406\u5668\u7684\u5de5\u4f5c\u6a21\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#_1","text":"R13 (the stack pointer register) \u5e38\u4f5c\u4e3a\u6808\u6307\u9488\u5bc4\u5b58\u5668\uff0c\u7528\u6765\u4fdd\u5b58\u6808\u5b58\u50a8\u7a7a\u95f4\u9996\u5730\u5740\u3002\u6bcf\u79cd \u5f02\u5e38\u6a21\u5f0f\u62e5\u6709\u81ea\u5df1\u7684 R13 \u4f5c\u4e3a\u6808\u6307\u9488 R14 (the linker register) \u94fe\u63a5\u5bc4\u5b58\u5668\uff0c\u4fdd\u5b58\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u503c\u3002\u5728 ARM \u4f53\u7cfb\u4e2d\u5177\u6709\u4e0b\u9762\u4e24\u79cd\u7279\u6b8a\u4f5c\u7528\u3002 \u6bcf\u4e00\u79cd\u5904\u7406\u5668\u6a21\u5f0f\u81ea\u5df1\u7684\u7269\u7406 R14 \u4e2d\u5b58\u653e\u5f53\u524d\u5b50\u7a0b\u5e8f\u7684\u8fd4\u56de\u5730\u5740\u3002\u5f53\u901a\u8fc7 BL \u6216\u8005 BLX \u6307\u4ee4\u8c03\u7528\u5b50\u7a0b\u5e8f\u662f\uff0c R14 \u88ab\u8bbe\u7f6e\u4e3a\u5b50\u7a0b\u5e8f\u7684\u8fd4\u56de\u5730\u5740\u3002\u5728\u5b50\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u628a R14 \u7684\u503c\u8d4b\u503c\u5230\u7a0b\u5e8f\u8ba1\u6570\u5668 PC \u4e2d\u65f6\uff0c\u5b50\u7a0b\u5e8f\u8fd4\u56de\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0 \u6267\u884c\u4e0b\u9a6c\u4efb\u4f55\u4e00\u6761\u6307\u4ee4\uff1a assembly MOV PC,LR BX LR \u5728\u5b50\u7a0b\u5e8f\u5165\u53e3\u4f7f\u7528\u4e0b\u9762\u6307\u4ee4\u5c06PC\u4fdd\u5b58\u5230\u6808\u4e2d\uff1a assembly STMFD SP! , { register , LR} /*\u4e0b\u9762\u6307\u4ee4\u53ef\u4ee5\u5b9e\u73b0\u5b50\u7a0b\u5e8f\u8fd4\u56de*/ LDMFD SP!, { REGISTER, PC } \u5f53\u5f02\u5e38\u4e2d\u65ad\u53d1\u751f\u65f6\uff0c\u8be5\u5f02\u5e38\u6a21\u5f0f\u7279\u5b9a\u7684\u7269\u7406 R14 \u88ab\u8bbe\u7f6e\u6210\u8be5\u5f02\u5e38\u6a21\u5f0f\u5c06\u8981\u8fd4\u56de\u7684\u5730\u5740\uff0c\u5bf9\u4e8e\u6709\u4e9b\u5f02\u5e38\u6a21\u5f0f\uff0c R14 \u7684\u503c\u53ef\u80fd\u4e0e\u5c06\u8fd4\u56de\u7684\u5730\u5740\u6709\u4e00\u4e2a\u5e38\u6570\u7684\u504f\u79fb\u91cf \u200b NOTE\uff1aR14\u5bc4\u5b58\u5668\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u901a\u7528\u5bc4\u5b58\u5668\u4f7f\u7528 R15 (the current program counter register) \u5f53\u524d\u7a0b\u5e8f\u8ba1\u6570\u5bc4\u5b58\u5668\uff0c\u4fdd\u5b58\u5f53\u524d\u53d6\u6307\u6307\u4ee4\u7684\u5730\u5740\u503c cpsr (the current program status register) \u5f53\u524d\u7a0b\u5e8f\u72b6\u6001\u5bc4\u5b58\u5668\uff0c N[31]: \u5982\u679c\u7a0b\u5e8f\u8fd0\u7b97\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0cN[31] \u7f6e1\u5426\u5219 \u6e050 Z[30]: \u5982\u679c\u7ed3\u679c\u4e3a0 \u7684\u8bdd, Z\u4f4d \u88ab\u7f6e1 \u5426\u5219 \u6e050 C[29]: \u5982\u679c\u8fd0\u884c\u52a0\u6cd5\u6307\u4ee4 \u52a0\u5b8c\u7684\u7ed3\u679c\u752832\u4f4d\u6ca1\u529e\u6cd5\u8868\u793a\uff08\u6ea2\u51fa\u4e86\uff09C \u7f6e1 \u5426\u5219 \u6e050 \u5982\u679c\u662f\u51cf\u6cd5\u8fd0\u7b97\u4ea7\u751f\u501f\u4f4d\uff0cC\u4f4d \u6e050 \u6ca1\u6709\u4ea7\u751f\u501f\u4f4d\uff0c C\u4f4d \u7f6e1 V[28]: \u7b26\u53f7\u4f4d\u53d1\u751f\u53d8\u5316\uff0c \u90a3\u4e48 V\u4f4d\u7f6e1\uff0c\u5426\u5219\u6e05\u96f6 I[7]: \u662f\u5426\u7981\u6b62 IRQ \u4e2d\u65ad\u6e90 F[6]: \u662f\u5426\u7981\u6b62 FIQ \u4e2d\u65ad\u6e90 T[5]: \u7f6e1\uff0c CPU\u5904\u4e8e Thumb \u72b6\u6001 \u6e050\uff0c CPU\u5904\u4e8e ARM \u72b6\u6001 M[4:0]: \u6a21\u5f0f\u4f4d\uff0c 2^5 , \u53ea\u7528\u4e868\u4e2a 10000 User mode; 10001 FIQ mode; 10011 SVC mode; 10111 Abort mode; 11011 Undfined mode; 11111 System mode; 10110 Monitor mode; 10010 IRQ; SPSR\uff1a \u4fdd\u5b58\u7a0b\u5e8f\u72b6\u6001\u5bc4\u5b58\u5668 (the save progrem status register) \u7528\u6765\u4fdd\u5b58 CPSR \u503c","title":"\u5bc4\u5b58\u5668"},{"location":"linux/arm\u6c47\u7f16/#arm_2","text":"","title":"ARM\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#_2","text":"ARM\u6307\u4ee4\u96c6\u5206\u4e3a\u8df3\u8f6c\u6307\u4ee4\uff0c\u6570\u636e\u5904\u7406\u6307\u4ee4\uff0c\u7a0b\u5e8f\u72b6\u6001\u5bc4\u5b58\u5668\u4f20\u8f93\u6307\u4ee4\u3001Load/Store\u6307\u4ee4\u3001\u534f\u5904\u7406\u5668\u6307\u4ee4\u548c\u5f02\u5e38\u4e2d\u65ad\u6307\u4ee4","title":"\u5206\u7c7b"},{"location":"linux/arm\u6c47\u7f16/#_3","text":"\u8bed\u6cd5\u683c\u5f0f\u5982 opcode { cond }{S} Rd , Rn , shifter_operand 31 - 28 27 - 25 24- 21 20 19-16 15-12 11 - 0 cond 001 opcode S Rn Rd shifter_operand opcode : \u6307\u4ee4\u64cd\u4f5c\u7b26\u7f16\u7801 cond : \u6307\u4ee4\u6267\u884c\u7684\u6761\u4ef6\u7f16\u7801 S : \u51b3\u5b9a\u6307\u4ee4\u7684\u64cd\u4f5c\u662f\u5426\u5f71\u54cdCPSR\u7684\u503c Rd : \u76ee\u6807\u5bc4\u5b58\u5668\u7f16\u7801 Rn : \u5305\u542b\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u7684\u5bc4\u5b58\u5668\u7f16\u7801 shifter_operand :\u8868\u793a\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570","title":"\u6307\u4ee4\u7684\u4e00\u822c\u7f16\u7801\u683c\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#arm_3","text":"\u6761\u4ef6\u7801 \u52a9\u8bb0\u7b26 \u542b\u4e49 CPSR\u4e2d\u6761\u4ef6\u6807\u5fd7 0000 EQ \u76f8\u7b49 Z=1 0001 NE \u4e0d\u76f8\u7b49 Z=0 0010 CS/HS \u65e0\u7b26\u53f7\u6570\u5927\u4e8e\u7b49\u4e8e C=1 0011 CC/LO \u65e0\u7b26\u53f7\u6570\u5c0f\u4e8e C=0 0100 MI \u8d1f\u6570 N=1 0101 PL \u975e\u8d1f\u6570 N=0 0110 VS \u4e0a\u6ea2\u51fa V=1 0111 VC \u6ca1\u6709\u4e0a\u6ea2\u51fa V=0 1000 HI \u65e0\u7b26\u53f7\u6570\u5927\u4e8e C=1\u4e14Z=0 1001 LS \u65e0\u7b26\u53f7\u6570\u5c0f\u4e8e\u7b49\u4e8e C=0\u6216Z=1 1010 GE \u5e26\u7b26\u53f7\u6570\u5927\u4e8e\u7b49\u4e8e N=1\u4e14V=1\u6216 N=0\u4e14V=0 1011 LT \u5e26\u7b26\u53f7\u6570\u5c0f\u4e8e N=1\u4e14V=0\u6216 N=0\u4e14V=1 1100 GT \u5e26\u7b26\u53f7\u6570\u5927\u4e8e Z=0\u4e14N=V 1101 LE \u5e26\u7b26\u53f7\u6570\u5c0f\u4e8e\u7b49\u4e8e Z=1\u4e14N!=V 1110 AL \u65e0\u6761\u4ef6\u6267\u884c 1111 NV","title":"ARM\u6307\u4ee4\u7684\u6761\u4ef6\u7801\u57df"},{"location":"linux/arm\u6c47\u7f16/#arm_4","text":"\u6570\u636e\u5904\u7406\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u5bfb\u5740\u65b9\u5f0f \u5b57\u53ca\u65e0\u7b26\u53f7\u5b57\u8282\u7684 Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u6742\u7c7b Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u6279\u91cf Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f \u534f\u5904\u7406\u5668 Load/Store \u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f","title":"ARM\u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#1","text":"shifter_operand \u901a\u5e38\u6709\u4e0b\u97623\u4e2d\u683c\u5f0f\uff1a \u7acb\u5373\u6570\u65b9\u5f0f\u3002 \u6bcf\u4e2a\u7acb\u5373\u6570\u7531\u4e00\u4e2a8\u4f4d\u5e38\u6570\u5faa\u73af\u53f3\u79fb\u5076\u6570\u4f4d\u5f97\u5230\uff0c\u5176\u4e2d\u5faa\u73af\u53cb\u8c0a\u7684\u4f4d\u6570\u6709\u4e00\u4e2a4\u4f4d\u4e8c\u8fdb\u5236\u7684\u4e24\u500d\u8868\u793a\uff0c\u5982\u679c\u7acb\u5373\u6570\u8bb0\u505a immediate \uff0c8\u4f4d\u5e38\u6570\u8bb0\u505a immed_8 \uff0c4\u4f4d\u5faa\u73af\u53f3\u79fb\u503c\u8bb0\u4f5c rotate_imm immediate = immed \u5faa\u73af\u53f3\u79fb\uff082 * rotate_imm\uff09 \u5bc4\u5b58\u5668\u65b9\u5f0f \u3002 \u5728\u5bc4\u5b58\u5668\u5bfb\u5740\u65b9\u5f0f\u4e0b\uff0c\u64cd\u4f5c\u6570\u5373\u4e3a\u5bc4\u5b58\u5668\u7684\u6570\u503c\uff0c\u5982\u4e0b\uff1a assembly MOV R3, R2 ADD R0, R1, R2 \u5bc4\u5b58\u5668\u79fb\u4f4d\u65b9\u5f0f \u5bc4\u5b58\u5668\u79fb\u4f4d\u65b9\u5f0f\u7684\u64cd\u4f5c\u6570\u4e3a\u5bc4\u5b58\u5668\u7684\u6570\u503c\u505a\u76f8\u5e94\u7684\u79fb\u4f4d\u800c\u5f97\u5230\uff0c\u5177\u4f53\u7684\u79fb\u4f4d\u65b9\u5f0f\u6709\u4e0b\u9762\u51e0\u79cd\uff1a ASR \uff1a\u7b97\u6570\u53f3\u79fb LSL \uff1a\u903b\u8f91\u5de6\u79fb LSR \uff1a\u903b\u8f91\u53f3\u79fb ROR \uff1a\u5faa\u73af\u53f3\u79fb RRX \uff1a\u6269\u5c55\u7684\u5faa\u73af\u53f3\u79fb","title":"1. \u6570\u636e\u5904\u7406\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u5bfb\u5740\u65b9\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#2-loadstore","text":"","title":"2. \u5b57\u53ca\u65e0\u7b26\u53f7\u5b57\u8282\u7684Load/Store\u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#3-loadstore","text":"\u8fd9\u91cc\u8bf4\u7684\u6742\u7c7b Load/Store \u6307\u4ee4\u5305\u62ec\uff1a\u64cd\u4f5c\u6570\u4e3a\u534a\u5b57\uff08\u65e0\u7b26\u53f7\u6216\u8005\u5e26\u7b26\u53f7\u6570\uff09\u6570\u636e\uff1b\u64cd\u4f5c\u6570\u4e3a\u5e26\u7b26\u53f7\u7684\u5b57\u8282\u6570\u636e\uff1b\u53cc\u5b57\uff1b","title":"3. \u6742\u7c7bLoad/Store\u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#4-loadstore","text":"","title":"4.  \u6279\u91cfLoad/Store\u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#5-loadstore","text":"","title":"5. \u534f\u5904\u7406\u5668Load/Store\u6307\u4ee4\u7684\u5bfb\u5740\u65b9\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#_4","text":"","title":"\u6307\u4ee4\u96c6"},{"location":"linux/arm\u6c47\u7f16/#1_1","text":"ARM\u4e2d\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u7a0b\u5e8f\u8df3\u8f6c\uff1a\u4e00\u79cd\u662f\u8df3\u8f6c\u6307\u4ee4\uff1b\u53e6\u4e00\u79cd\u662f\u76f4\u63a5\u5411PC\u5bc4\u5b58\u5668\u5199\u5165\u76ee\u6807\u503c","title":"1. \u8df3\u8f6c\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#bbl","text":"\u4e24\u8005\u5747\u53ef\u4ee5\u8df3\u8f6c\u5230\u6307\u4ee4\u4e2d\u7684\u76ee\u6807\u5730\u5740\uff0c\u4e0d\u540c\u4e4b\u5904\u662f BL \u540c\u65f6\u8fd8\u5c06 PC \u5bc4\u5b58\u5668\u7684\u503c\u4fdd\u5b58\u5230 LR \u5bc4\u5b58\u5668\u4e2d \u8bed\u6cd5\u683c\u5f0f\uff1a B{L}{ cond } targer_address \u6307\u4ee4\u7684\u4f7f\u7528\uff1a BL\u6307\u4ee4\u7528\u4e8e\u5b9e\u73b0\u5b50\u7a0b\u5e8f\u7684\u8c03\u7528\uff08\u5982 BL lable \uff09\u3002\u5b50\u7a0b\u5e8f\u7684\u8fd4\u56de\u53ef\u4ee5\u901a\u8fc7\u5c06LR\u5bc4\u5b58\u5668\u7684\u503c\u590d\u5236\u5230PC\u5bc4\u5b58\u5668 BX R14 MOV PC , R14 \u5f53\u5b50\u7a0b\u5e8f\u5165\u53e3\u8c03\u7528\u4e86 STMFD R13! , { register , R14} , \u8fd4\u56de\u53ef\u4ee5\u7528 LDMFD R13!, { register ,PC}","title":"B\u548cBL:\u8df3\u8f6c\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#blx","text":"\u8df3\u8f6c\u5230\u76ee\u6807\u5730\u5740\uff0c\u5e76\u5c06\u7a0b\u5e8f\u72b6\u6001\u5207\u6362\u4e3a Thumb \u72b6\u6001 BLX","title":"BLX"},{"location":"linux/arm\u6c47\u7f16/#2","text":"\u5927\u81f4\u52063\u7c7b\uff1a\u6570\u636e\u4f20\u9001\uff0c\u7b97\u6570\u903b\u8f91\u8fd0\u7b97\uff0c\u6bd4\u8f83\u6307\u4ee4 \u6570\u636e\u4f20\u9001\u6307\u4ee4 \u7528\u4e8e\u5411\u5bc4\u5b58\u5668\u4f20\u5165\u4e00\u4e2a\u5e38\u6570\uff0c\u8be5\u6307\u4ee4\u5305\u62ec\u4e00\u4e2a\u76ee\u6807\u5bc4\u5b58\u5668\u548c\u4e00\u4e2a\u6e90\u64cd\u4f5c\u6570 \u7b97\u6570\u903b\u8f91\u8fd0\u7b97 \u5305\u62ec\u4e00\u4e2a\u76ee\u6807\u5bc4\u5b58\u5668\u548c\u4e24\u4e2a\u6e90\u64cd\u4f5c\u6570\uff0c\u8be5\u6307\u4ee4\u5c06\u8fd0\u7b97\u7ed3\u679c\u5b58\u5165\u76ee\u6807\u5bc4\u5b58\u5668\uff0c\u540c\u65f6\u66f4\u65b0 CPSR \u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d \u6bd4\u8f83\u6307\u4ee4 \u4e0d\u4fdd\u5b58\u8fd0\u7b97\u7ed3\u679c\uff0c\u53ea\u66f4\u65b0 CPSR \u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u4f4d","title":"2. \u6570\u636e\u5904\u7406\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#mov","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4f20\u9001\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d 31 - 28 27 - 25 24- 21 20 19-16 15-12 11 - 0 cond 001 1101 S \u5e94\u4e3a0 Rd shifter_operand MOV { } {S} ,","title":"MOV \uff1a\u6570\u636e\u4f20\u9001"},{"location":"linux/arm\u6c47\u7f16/#mvn","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u7684\u53cd\u7801\u4f20\u9001\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d \u683c\u5f0f\u540cMOV","title":"MVN"},{"location":"linux/arm\u6c47\u7f16/#add","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u76f8\u52a0\uff0c\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d 31 - 28 27 - 25 24- 21 20 19-16 15-12 11 - 0 cond 001 0100 S Rn Rd shifter_operand ADD { } {S} , , \u5178\u578b\u7528\u6cd5\uff1a add rx, rx, #1 add rd, rx,rx ,lsl #n add rs, pc, #offset","title":"ADD : \u52a0\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#adc","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u76f8\u52a0\uff0c\u5728\u52a0\u4e0a CPSR \u4e2d\u7684C\u6761\u4ef6\u6807\u5fd7\u4e3a\u7684\u503c\u3002\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d \u683c\u5f0f\u540c ADD \u5b9e\u73b064\u4f4d\u6570\u76f8\u52a0\uff1a adds r4, r0, r2 @r0,r1\u5206\u522b\u4e3a\u9ad832\u4f4d\u548c\u4f4e32\u4f4d ADC r5, r1, r3","title":"ADC \uff1a \u5e26\u8fdb\u4f4d\u7684\u52a0\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#sub","text":"\u4ece Rn \u4e2d\u51cf\u53bb shifter_opperand \u8868\u793a\u7684\u6570\u636e\uff0c\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d SUB { } {S} , , SUB Rx\uff0c Rx\uff0c #1 @Rx = Rx - 1","title":"SUB \uff1a\u51cf\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#sbc","text":"\u4ece Rn \u4e2d\u51cf\u53bb shifter_opperand \u8868\u793a\u7684\u6570\u636e\uff0c\u518d\u51cf\u53bb CPRS \u4e2dC\u6761\u4ef6\u6807\u5fd7\u4f4d\u7684\u53cd\u7801\uff0c\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d \u683c\u5f0f\u540cSUB","title":"SBC \uff1a\u5e26\u4f4d\u51cf\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#rsb","text":"\u4ece shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e2d\u51cf\u53bb Rn \uff0c\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d","title":"RSB \uff1a \u9006\u5411\u51cf\u6cd5"},{"location":"linux/arm\u6c47\u7f16/#rcs","text":"\u4ece shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e2d\u51cf\u53bb Rn \uff0c\u518d\u51cf\u53bb CPRS \u4e2dC\u6761\u4ef6\u6807\u5fd7\u4f4d\u7684\u53cd\u7801,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d","title":"RCS \uff1a \u5e26\u4f4d\u9006\u5411\u51cf\u6cd5"},{"location":"linux/arm\u6c47\u7f16/#and","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u4e0e\u64cd\u4f5c\uff0c,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d AND { } {S} \uff0c ,","title":"AND \uff1a \u903b\u8f91\u4e0e"},{"location":"linux/arm\u6c47\u7f16/#orr","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u6216\u64cd\u4f5c\uff0c,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d ORR { } {S} \uff0c , ORR R3, R0, R3, LSL #8 @ R3\u4e2d\u7684\u6570\u636e\u5de6\u79fb8\u4f4d\uff0cORR\u64cd\u4f5c\u5c06R0\u7684\u4f4e8\u4f4d\u6570\u636e\u83b7\u53d6\u5230","title":"ORR \uff1a\u903b\u8f91\u6216"},{"location":"linux/arm\u6c47\u7f16/#eor","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u5f02\u6216\u64cd\u4f5c\uff0c,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d EOR { } {S} \uff0c ,","title":"EOR \uff1a\u903b\u8f91\u5f02\u6216"},{"location":"linux/arm\u6c47\u7f16/#bic","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u7684\u53cd\u7801\uff0c\u6309\u4f4d\u4f5c\u903b\u8f91\u4e0e\u64cd\u4f5c\uff0c,\u628a\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5bc4\u5b58\u5668 Rd \u4e2d\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d BIC { } {S} \uff0c ,","title":"BIC \uff1a \u4f4d\u6e05\u9664\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#cmp","text":"\u5c06\u5bc4\u5b58\u5668 Rn \u7684\u503c\u51cf\u53bb shifter_opperand \u8868\u793a\u7684\u6570\u503c\uff0c\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\uff0c\u540e\u9762\u7684\u6307\u4ee4\u5c31\u53ef\u4ee5\u6839\u636e CPSR \u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\u6765\u5224\u65ad\u662f\u5426\u6267\u884c CMP { } , CMP \u4e0e SUBS \u7684\u533a\u522b\u5728\u4e8e CMP \u6307\u4ee4\u4e0d\u4fdd\u5b58\u64cd\u4f5c\u7ed3\u679c","title":"CMP \uff1a\u6bd4\u8f83\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#cmn","text":"\u5c06\u5bc4\u5b58\u5668 Rn \u7684\u503c\u52a0\u4e0a shifter_opperand \u8868\u793a\u7684\u6570\u503c\uff0c\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\uff0c\u540e\u9762\u7684\u6307\u4ee4\u5c31\u53ef\u4ee5\u6839\u636e CPSR \u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\u6765\u5224\u65ad\u662f\u5426\u6267\u884c CMN { } ,","title":"CMN \uff1a \u57fa\u4e8e\u76f8\u53cd\u6570\u7684\u6bd4\u8f83\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#tst","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u4e0e\u64cd\u4f5c\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d TST { } ,","title":"TST \uff1a \u6d4b\u8bd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#tsq","text":"\u5c06 shifter_opperand \u8868\u793a\u7684\u6570\u636e\u4e0e\u5bc4\u5b58\u5668 Rn \u7684\u503c\u6309\u4f4d\u4f5c\u903b\u8f91\u5f02\u6216\u64cd\u4f5c\uff0c\u5e76\u6839\u636e\u64cd\u4f5c\u6570\u7684\u7ed3\u679c\u66f4\u65b0 CPSR \u4e2d\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d TEQ { } ,","title":"TSQ \uff1a \u76f8\u7b49\u6d4b\u8bd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#3","text":"","title":"3. \u4e58\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#mul-32","text":"\u5b9e\u73b0\u4e24\u4e2a32\u4f4d\u6570\uff08\u6709\u6216\u65e0\u7b26\u53f7\uff09\u7684\u4e58\u79ef\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u653e\u5230\u4e00\u4e2a32\u4f4d\u5bc4\u5b58\u5668\u4e2d\uff0c\u540c\u65f6\u6839\u636e\u8fd0\u7b97\u7ed3\u679c\u8bbe\u7f6e CPSR \u5bc4\u5b58\u5668\u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\u3002 \u8003\u8651\u6307\u4ee4\u6267\u884c\u7684\u6548\u7387\uff0c\u6307\u4ee4\u4e2d\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u653e\u5728\u5bc4\u5b58\u5668\u4e2d MUL { }, {S}, , , MUL R0, R1, R2 @ R0 = R1 * R2","title":"MUL : 32\u4f4d\u4e58\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#mla-32","text":"\u5b9e\u73b0\u4e24\u4e2a32\u4f4d\u6570\uff08\u6709\u6216\u65e0\u7b26\u53f7\uff09\u7684\u4e58\u79ef\uff0c\u518d\u5c06\u4e58\u79ef\u52a0\u4e0a\u7b2c\u4e09\u4e2a\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u653e\u5230\u4e00\u4e2a32\u4f4d\u5bc4\u5b58\u5668\u4e2d\uff0c\u540c\u65f6\u6839\u636e\u8fd0\u7b97\u7ed3\u679c\u8bbe\u7f6e CPSR \u5bc4\u5b58\u5668\u4e2d\u76f8\u5e94\u7684\u6761\u4ef6\u6807\u5fd7\u4f4d\u3002 \u8003\u8651\u6307\u4ee4\u6267\u884c\u7684\u6548\u7387\uff0c\u6307\u4ee4\u4e2d\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u653e\u5728\u5bc4\u5b58\u5668\u4e2d MLA { }, {S}, , , \uff0c MUL R0, R1, R2, R3 @ R0 = R1 * R2 + R3","title":"MLA \uff1a32\u4f4d\u5e26\u52a0\u6570\u7684\u4e58\u6cd5"},{"location":"linux/arm\u6c47\u7f16/#smull-64","text":"","title":"SMULL\uff1a 64\u4f4d\u6709\u7b26\u53f7\u6570\u4e58\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#smlal-64","text":"","title":"SMLAL \uff1a64\u4f4d\u5e26\u52a0\u6570\u7684\u6709\u7b26\u53f7\u4e58\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#umull-64","text":"","title":"UMULL \uff1a64\u4f4d\u65e0\u7b26\u53f7\u4e58\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#umlal-64","text":"","title":"UMLAL \uff1a64\u4f4d\u5e26\u52a0\u6570\u7684\u65e0\u7b26\u53f7\u4e58\u6cd5\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#4","text":"CLZ : \u524d\u5bfc0\u4e2a\u6570\u8ba1\u6570\u6307\u4ee4 \u8ba1\u7b97\u5bc4\u5b58\u5668\u4e2d\u64cd\u4f5c\u6570\u6700\u9ad8\u7aef0\u4e2a\u6570 CLZ { } ,","title":"4. \u6742\u7c7b\u7684\u7b97\u6570\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#5","text":"","title":"5. \u72b6\u6001\u5bc4\u5b58\u5668\u7684\u8bbf\u95ee\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#mrs","text":"MRS { }, , CPSR MRS { }, , SPSR \u6307\u4ee4\u7684\u4f7f\u7528\uff1a \u4e3b\u8981\u7528\u4e8e\u4ee5\u4e0b3\u79cd\u573a\u5408\uff1a \u901a\u5e38\u901a\u8fc7 \u8bfb\u53d6 - \u4fee\u6539 - \u5199\u56de \u64cd\u4f5c\u5e8f\u5217\u4fee\u6539\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\uff0c MRS \u7528\u4e8e\u8bfb\u53d6 \u5f53\u5f02\u5e38\u4e2d\u65ad\u5141\u8bb8\u5d4c\u5957\u65f6\uff0c\u9700\u8981\u8fdb\u5165\u5f02\u5e38\u4e2d\u65ad\u4e4b\u540e\uff0c\u5d4c\u5957\u4e2d\u65ad\u53d1\u751f\u4e4b\u524d\u4fdd\u5b58\u5f53\u524d\u5904\u7406\u5668\u6a21\u5f0f\u5bf9\u5e94\u7684 SPSR \u5728\u8fdb\u7a0b\u5207\u6362\u65f6\u4e5f\u9700\u8981\u4fdd\u5b58\u5f53\u524d\u72b6\u6001\u5bc4\u5b58\u5668\u503c","title":"MRS \uff1a\u72b6\u6001\u5bc4\u5b58\u5668\u5230\u901a\u7528\u5bc4\u5b58\u5668\u7684\u4f20\u9001\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#msr","text":"MRS { }, CPSR_ , # MRS { }, CPSR_ , MSR CPSR_c, R0 @\u4ec5\u4ec5\u4fee\u6539\u63a7\u5236\u4f4d\u57df MSR CPSR\uff0cR1","title":"MSR \uff1a\u901a\u7528\u5bc4\u5b58\u5668\u5230\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u4f20\u9001\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#6-loadstore","text":"","title":"6. Load/Store\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#ldr","text":"\u4ece\u5185\u5b58\u5c06\u4e00\u4e2a32\u4f4d\u7684\u5b57\u8bfb\u53d6\u5230\u6307\u4ee4\u4e2d\u7684\u76ee\u6807\u5bc4\u5b58\u5668\u4e2d\uff0c\u5982\u679c\u6307\u4ee4\u4e2d\u7684\u5bfb\u5740\u65b9\u5f0f\u786e\u5b9a\u7684\u5730\u5740\u4e0d\u662f\u5b57\u5bf9\u9f50\uff0c\u5219\u4ece\u5185\u5b58\u72ec\u5904\u7684\u6570\u636e\u8981\u8fdb\u884c\u5faa\u73af\u53f3\u79fb\u64cd\u4f5c\uff0c\u79fb\u4f4d\u7684\u4f4d\u6570\u4e3a\u5bfb\u5740\u65b9\u5f0f\u786e\u5b9a\u5730\u5740\u7684bit[1:0]\u76848\u500d LDR { }, , \u6307\u4ee4\u7684\u4f7f\u7528 \u7528\u4e8e\u4ece\u5185\u5b58\u8bfb\u53d632\u4f4d\u5b57\u6570\u636e\u5230\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5728\u8be5\u5bc4\u5b58\u5668\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u5b9a\u64cd\u4f5c \u5f53PC\u4f5c\u4e3a\u6307\u4ee4\u4e2d\u7684\u76ee\u6807\u5bc4\u5b58\u5668\u65f6\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7a0b\u5e8f\u8df3\u8f6c LDR R0, [R1, #4] @\u5185\u5b58\u5355\u5143R1+4\u4e2d\u7684\u5b57\u8bfb\u53d6\u5230R0\u5bc4\u5b58\u5668 LDR R0, [R1, R2] @\u5185\u5b58\u5355\u5143R1+R2\u4e2d\u7684\u5b57\u8bfb\u53d6\u5230R0\u5bc4\u5b58\u5668 LDR R0, [R1], #4 @\u5185\u5b58\u5355\u5143R1\u4e2d\u7684\u5b57\u8bfb\u53d6\u5230R0\u5bc4\u5b58\u5668,\u7136\u540eR1=R1+4 LDR R0, [R1], R2 @\u5185\u5185\u5b58\u5355\u5143R1\u4e2d\u7684\u5b57\u8bfb\u53d6\u5230R0\u5bc4\u5b58\u5668,\u7136\u540eR1=R1+R2","title":"LDR \uff1a \u5b57\u6570\u636e\u8bfb\u53d6\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#ldrb","text":"","title":"LDRB \uff1a\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#ldrh","text":"","title":"LDRH \uff1a \u534a\u5b57\u6570\u636e\u8bfb\u53d6\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#ldrsb","text":"","title":"LDRSB \uff1a \u6709\u7b26\u53f7\u7684\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#ldrsh","text":"","title":"LDRSH \uff1a \u6709\u7b26\u53f7\u7684\u534a\u5b57\u6570\u636e\u8bfb\u53d6\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#ldrt","text":"","title":"LDRT \uff1a \u7528\u6237\u6a21\u5f0f\u7684\u5b57\u6570\u636e\u8bfb\u53d6\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#ldrbt","text":"","title":"LDRBT \uff1a \u7528\u6237\u6a21\u5f0f\u7684\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#str","text":"\u4ece\u5185\u5b58\u5c06\u4e00\u4e2a32\u4f4d\u7684\u5b57\u5199\u5165\u5230\u6307\u5b9a\u7684\u5185\u5b58\u5355\u5143 STR { }, , STR R0, [R1, #0X100] @\u5c06R0\u4e2d\u7684\u5b57\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u5355\u5143\uff08R1 + 0X100)\u4e2d STR R0, [R1], #8 @\u5c06R0\u4e2d\u7684\u5b57\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u5355\u5143\uff08R1\uff09\u4e2d\uff0cR1=R1+8","title":"STR \uff1a \u5b57\u6570\u636e\u5199\u5165\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#strb","text":"","title":"STRB \uff1a \u5b57\u8282\u6570\u636e\u5199\u5165\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#strh","text":"","title":"STRH \uff1a\u534a\u5b57\u6570\u636e\u5199\u5165\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#strbt","text":"","title":"STRBT \uff1a \u7528\u6237\u6a21\u5f0f\u5b57\u6570\u636e\u5199\u5165\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#strt","text":"","title":"STRT \uff1a \u7528\u6237\u6a21\u5f0f\u5b57\u6570\u636e\u5199\u5165\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#7-loadstore","text":"","title":"7. \u6279\u91cfLoad/Store\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#ldm1","text":"LDM { } {!} , ldr r0, =0x40000000 @\u4f2a\u6307\u4ee4 LDM r0, {r1,r2,r3}","title":"LDM(1)\uff1a\u6279\u91cf\u5185\u5b58\u5b57\u6570\u636e\u8bfb\u53d6"},{"location":"linux/arm\u6c47\u7f16/#ldm2","text":"LDM { } {!} , ^","title":"LDM(2) \uff1a\u5e26\u72b6\u6001\u5bc4\u5b58\u5668\u7684"},{"location":"linux/arm\u6c47\u7f16/#stm","text":"STM { } ! ,","title":"STM\uff1a\u6279\u91cf\u5185\u5b58\u5b57\u6570\u636e\u6279\u91cf\u5199\u5165\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#8","text":"","title":"8. \u4fe1\u53f7\u91cf\u64cd\u4f5c\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#swp","text":"SWP { } , , [ ] swp r1, r2, [r3] @r3\u8bfb\u5230r1\u4e2d\uff0c\u540c\u65f6r2\u5199\u5165r3\u4e2d swp r1, r1, [r2] @r1\u4e0er2\u4e92\u6362","title":"SWP \uff1a\u4ea4\u6362\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#swpb","text":"","title":"SWPB\uff1a\u5b57\u8282\u4ea4\u6362\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#9","text":"","title":"9. \u5f02\u5e38\u4e2d\u65ad\u4ea7\u751f\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#swi","text":"\u7528\u4e8e\u4ea7\u751fSWI\u5f02\u5e38\u4e2d\u65ad\uff0cARM\u901a\u8fc7\u8fd9\u79cd\u673a\u5236\u5b9e\u73b0\u7528\u6237\u6a21\u5f0f\u5bf9\u7cfb\u7edf\u4e2d\u7279\u6743\u6a21\u5f0f\u7684\u7a0b\u5e8f\u8c03\u7528 SWI { } \u6307\u4ee4\u7684\u4f7f\u7528\uff1a \u6307\u4ee4\u4e2d24\u4f4d\u7acb\u5373\u6570\u5236\u5b9a\u4e86\u7528\u6237\u8bf7\u6c42\u7684\u670d\u52a1\u7c7b\u578b\uff0c\u53c2\u6570\u662f\u901a\u8fc7\u901a\u7528\u5bc4\u5b58\u5668\u4f20\u9012 \u6307\u4ee4\u768424\u4f4d\u7acb\u5373\u6570\u88ab\u5ffd\u7565\uff0c\u7528\u6237\u8bf7\u6c42\u7684\u670d\u52a1\u7c7b\u578b\u7531\u5bc4\u5b58\u5668R0\u6570\u503c\u51b3\u5b9a\uff0c\u53c2\u6570\u901a\u8fc7\u5176\u4ed6\u901a\u7528\u5bc4\u5b58\u5668\u4f20\u9012 SWI\u6307\u4ee4\u7531\u7cfb\u7edf\u5b8c\u6210\u4ee5\u4e0b\u5de5\u4f5c R14_svc = SWI\u6307\u4ee4\u7684\u4e0b\u9762\u4e00\u5957\u6307\u4ee4\u7684\u5730\u5740 SPSR_svc = CPSR //\u4fdd\u5b58\u5f53\u524d\u7684CPSR CPSR[4:0] = 0b10011 //\u4f7f\u5904\u7406\u5668\u5207\u6362\u5230\u7279\u6743\u6a21\u5f0f CPSR[5] = 0 // \u4f7f\u7528\u7a0b\u5e8f\u8fdb\u5165ARM\u72b6\u6001 CPSR[7] = 1 // \u7981\u6b62\u6b63\u5e38\u4e2d\u65ad\u54cd\u5e94 //\u7a0b\u5e8f\u8df3\u8f6c\u5230\u76f8\u5e94\u7684\u4e2d\u65ad\u5411\u91cf\u5904 if high vectors configured then PC = 0xffff0008 else pc= 0x00000008","title":"SWI\uff1a\u8f6f\u4e2d\u65ad\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#bkpt","text":"","title":"BKPT \uff1a\u65ad\u70b9\u4e2d\u65ad\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#10","text":"\u534f\u5904\u7406\u5668\u6307\u4ee4\u5305\u62ec\u4ee5\u4e0b3\u7c7b\uff1a \u7528\u4e8eARM\u5904\u7406\u5668\u521d\u59cb\u5316ARM\u534f\u5904\u7406\u5668\u7684\u6570\u636e\u51fa\u5904\u64cd\u4f5c \u7528\u4e8eARM\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u548cARM\u534f\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u95f4\u7684\u6570\u636e\u4f20\u9001\u64cd\u4f5c \u7528\u4e8eARM\u534f\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u5355\u5143\u4e4b\u95f4\u4f20\u9001\u6570\u636e \u8fd9\u4e9b\u6307\u4ee4\u5305\u62ec\u4ee5\u4e0b5\u6761\uff1a CDP \u534f\u5904\u7406\u6570\u636e\u64cd\u4f5c LDC \u534f\u5904\u7406\u6570\u636e\u8bfb\u53d6 STC \u534f\u5904\u7406\u5668\u6570\u636e\u5199\u5165 MCR ARM\u5bc4\u5b58\u5668\u5230\u534f\u5904\u7406\u5668\u5bc4\u5b58\u5668\u7684\u6570\u636e\u4f20\u9001 MRC \u534f\u5904\u7406\u5668\u5bc4\u5b58\u5668\u5230ARM\u5bc4\u5b58\u5668\u7684\u6570\u636e\u4f20\u9001","title":"10. \u534f\u5904\u7406\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#_5","text":"","title":"\u6c47\u7f16\u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"linux/arm\u6c47\u7f16/#_6","text":"","title":"\u4f2a\u64cd\u4f5c"},{"location":"linux/arm\u6c47\u7f16/#1_2","text":"GBLA, GBLL GBLS \uff1a\u58f0\u660e\u5168\u5c40\u53d8\u91cf LCLA\uff0cLCLL LCLS \uff1a \u58f0\u660e\u5c40\u90e8\u53d8\u91cf SETA\uff0cSETL SETS \uff1a\u7ed9\u53d8\u91cf\u8d4b\u503c RLIST \uff1a\u4e3a\u901a\u7528\u5bc4\u5b58\u5668\u5217\u8868\u5b9a\u4e49\u540d\u79f0 CN \uff1a\u4e3a\u534f\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u5b9a\u4e49\u540d\u79f0 CP \uff1a \u4e3a\u534f\u5904\u7406\u5668\u5b9a\u4e49\u540d\u79f0 DN SN \uff1a\u4e3aVFP\u7684\u5bc4\u5b58\u5668\u5b9a\u4e49\u540d\u79f0 FN \uff1a\u4e3aFPA\u7684\u6d6e\u70b9\u5bc4\u5b58\u5668\u5b9a\u4e49\u540d\u79f0","title":"1. \u7b26\u53f7\u5b9a\u4e49\u4f2a\u64cd\u4f5c"},{"location":"linux/arm\u6c47\u7f16/#2_1","text":"LTORG \uff1a\u58f0\u660e\u4e00\u4e2a\u6570\u636e\u7f13\u51b2\u6c60\u7684\u5f00\u59cb MAP \uff1a\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u5185\u5b58\u8868\u7684\u9996\u5730\u5740 FIELD \uff1a\u5b9a\u4e49\u7ed3\u6784\u5316\u7684\u5185\u5b58\u8868\u4e2d\u7684\u4e00\u4e2a\u6570\u636e\u57df SPACE \uff1a\u5206\u914d\u4e00\u5757\u5185\u5b58\u5355\u5143 DCB \uff1a \u5206\u914d\u4e00\u6bb5\u5b57\u8282\u7684\u5185\u5b58\u5355\u5143\uff0c\u5e76\u6307\u5b9a\u6570\u636e\u521d\u59cb\u5316 DCD DCDU \uff1a\u5206\u914d\u4e00\u6bb5\u5b57\u7684\u5185\u5b58\u5355\u5143\uff0c\u5e76\u7528\u5b9a\u6570\u636e\u521d\u59cb\u5316 DCDO \uff1a \u5206\u914d\u4e00\u6bb5\u5b57\u7684\u5185\u5b58\u5355\u5143\uff0c\u5e76\u5c06\u6bcf\u4e2a\u5355\u5143\u7684\u5185\u5bb9\u521d\u59cb\u5316\u6210\u8be5\u5355\u5143\u76f8\u5bf9\u4e8e\u9759\u6001\u57fa\u503c\u5bc4\u5b58\u5668\u7684\u504f\u79fb\u91cf DCFD DCFDU\uff1a\u5206\u914d\u4e00\u6bb5\u53cc\u5b57\u5185\u5b58\u5355\u5143\uff0c\u5e76\u7528\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u636e\u521d\u59cb\u5316 DCFS DCFSU \uff1a \u5206\u914d\u4e00\u6bb5\u5b57\u7684\u5185\u5b58\u5355\u5143\uff0c\u5e76\u7528\u5355\u7cbe\u5ea6\u6570\u636e\u521d\u59cb\u5316 DCI \uff1a\u5206\u914d\u4e00\u6bb5\u5b57\u8282\u7684\u5185\u5b58\u5355\u5143\uff0c\u7528\u6307\u5b9a\u6570\u636e\u521d\u59cb\u5316\uff0c\u6307\u5b9a\u5185\u5b58\u5355\u5143\u4e2d\u5b58\u653e\u7684\u65f6\u4ee3\u7801\u4e0d\u662f\u6570\u636e DCQ DCQU \uff1a \u5206\u914d\u4e00\u6bb5\u534a\u5b57\u5185\u5b58\u5355\u5143\uff0c\u5e76\u752864\u4f4d\u6574\u6570\u521d\u59cb\u5316 DCW DCWU \uff1a\u5206\u914d\u4e00\u6bb5\u534a\u5b57\u7684\u5185\u5b58\u5355\u5143 \uff0c\u5e76\u7528\u6307\u4ee4\u6570\u636e\u521d\u59cb\u5316 DATA \uff1a\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u6570\u636e\uff0c\u73b0\u5728\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528","title":"2. \u6570\u636e\u5b9a\u4e49\u4f2a\u64cd\u4f5c"},{"location":"linux/arm\u6c47\u7f16/#3_1","text":"IF, ELSE ENDIF WHILE WEND MACRO MEND MEXIT","title":"3. \u6c47\u7f16\u63a7\u5236\u4f2a\u64cd\u4f5c"},{"location":"linux/arm\u6c47\u7f16/#4_1","text":"","title":"4. \u67b6\u6784\u63cf\u8ff0\u4f2a\u64cd\u4f5c"},{"location":"linux/arm\u6c47\u7f16/#5_1","text":"ASSERT INFO OPT TTL SUBT","title":"5. \u4fe1\u606f\u62a5\u544a\u4f2a\u64cd\u4f5c"},{"location":"linux/arm\u6c47\u7f16/#6","text":"ALIGN AREA CODE16 CODE32 END ENTRY EQU EXPORT or GLOBAL","title":"6. \u5176\u4ed6\u4f2a\u64cd\u4f5c"},{"location":"linux/arm\u6c47\u7f16/#_7","text":"","title":"\u4f2a\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#1-adr","text":"\u8be5\u6307\u4ee4\u57fa\u4e8ePC\u503c\u6216\u8005\u57fa\u4e8e\u53ca\u5bc4\u5b58\u5668\u5730\u5740\u503c\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u7528\u4e00\u4e2aADD\u6216\u8005SUB\u6307\u4ee4\u6765\u5b9e\u73b0\u8be5\u6307\u4ee4\u3002 ADR {cond} register , expr start MOV r0 , #10; // pc\u503c\u4f4d\u5f53\u524d\u6307\u4ee4\u5730\u5740\u52a08\u5b57\u8282 ADR r4, start; // \u88ab\u7f16\u8bd1\u5668\u66ff\u6362\u4e3aSUB r4, pc , #0xc","title":"1. ADR(\u5c0f\u8303\u56f4\u7684\u5730\u5740\u8bfb\u53d6\u4f2a\u6307\u4ee4)"},{"location":"linux/arm\u6c47\u7f16/#2-adrl","text":"\u8be5\u6307\u4ee4\u57fa\u4e8ePC\u503c\u6216\u8005\u57fa\u4e8e\u53ca\u5bc4\u5b58\u5668\u5730\u5740\u503c\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u6bd4ADR\u53ef\u4ee5\u8bfb\u53d6\u66f4\u5927\u8303\u56f4\u5730\u5740\u3002\u7f16\u8bd1\u5668\u66ff\u6362\u6210\u4e24\u6761\u6307\u4ee4 ADRL {cond} register , expr","title":"2. ADRL(\u4e2d\u7b49\u8303\u56f4\u5730\u5740\u8bfb\u53d6\u4f2a\u6307\u4ee4)"},{"location":"linux/arm\u6c47\u7f16/#3-ldr","text":"\u5c06\u4e00\u4e2a32\u4f4d\u5e38\u6570\u6216\u8005\u4e00\u4e2a\u5730\u5740\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668\u4e2d LDR {cond} register, =[expr] [label-expr] expr \u4e3a32\u4f4d\u5e38\u91cf \u5f53 expr \u8868\u793a\u7684\u5730\u5740\u6ca1\u6709\u8d85\u8fc7 mov \u6216 mvn \u6307\u4ee4\u7684\u5730\u5740\u53d6\u503c\u8303\u56f4\uff0c\u7f16\u8bd1\u5668\u4f1a\u7528 mov \u6216\u8005 mvn \u4ee3\u66ff \u5f53 expr \u8868\u793a\u7684\u5730\u5740\u8d85\u8fc7 mov \u6216 mvn \u6307\u4ee4\u7684\u5730\u5740\u53d6\u503c\u8303\u56f4\uff0c\u7f16\u8f91\u5668\u5c06\u8be5\u5e38\u6570\u653e\u5728\u6570\u636e\u7f13\u51b2\u533a\uff0c\u540c\u65f6\u7528\u4e00\u6761\u57fa\u4e8e PC \u7684 LDR \u6307\u4ee4\u8bfb\u53d6\u8be5\u5e38\u6570 ldr r1, =0xff5678;","title":"3. LDR \u5927\u8303\u56f4\u5730\u5740\u8bfb\u53d6\u4f2a\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#4-nop","text":"\u8be5\u4f2a\u6307\u4ee4\u5728\u6c47\u7f16\u65f6\u88ab\u66ff\u6362\u6210ARM\u7a7a\u64cd\u4f5c","title":"4. NOP \u7a7a\u64cd\u4f5c\u4f2a\u6307\u4ee4"},{"location":"linux/arm\u6c47\u7f16/#_8","text":"","title":"\u8bed\u53e5\u683c\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#_9","text":"","title":"\u7a0b\u5e8f\u683c\u5f0f"},{"location":"linux/arm\u6c47\u7f16/#_10","text":"","title":"\u6c47\u7f16\u5b9e\u4f8b"},{"location":"linux/arm\u6c47\u7f16/#1_3","text":"","title":"1. \u5b50\u7a0b\u5e8f\u8df3\u8f6c"},{"location":"linux/arm\u6c47\u7f16/#arm_5","text":"\u7f16\u8bd1\u5668\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b complier [PCS-options] [source-language] [search-paths] [preprocessor-options] [output-format] [target-option] [debug-option] [code-generation-option] [warninf-option] [additional-checks] [error-option] [source] complier \u53ef\u4ee5\u662f armcc,tcc,armcpp PCS-options \u6307\u5b9a\u6240\u4f7f\u7528\u7684\u8fc7\u7a0b\u8c03\u7528\u6807\u51c6 source-language \u6307\u5b9a\u7f16\u8bd1\u5668\u63a5\u53d7\u7684\u6e90\u7a0b\u5e8f\u7c7b\u578b search-path \u6307\u5b9a\u641c\u7d22\u5934\u6587\u4ef6\u548c\u6e90\u6587\u4ef6\u7684\u8def\u5f84","title":"ARM\u7f16\u8bd1\u5668\u547d\u4ee4\u683c\u5f0f"},{"location":"linux/cmake/","text":"CMake # CMake \u6700\u4f4e\u7248\u672c\u53f7\u8981\u6c42 cmake_minimum_required (VERSION 2.8) # \u9879\u76ee\u4fe1\u606f project (Demo2) # \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u6587\u4ef6 # \u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5230 DIR_SRCS \u53d8\u91cf aux_source_directory(. DIR_SRCS) # \u6307\u5b9a\u751f\u6210\u76ee\u6807 add_executable(Demo ${DIR_SRCS})`","title":"CMake"},{"location":"linux/cmake/#cmake","text":"# CMake \u6700\u4f4e\u7248\u672c\u53f7\u8981\u6c42 cmake_minimum_required (VERSION 2.8) # \u9879\u76ee\u4fe1\u606f project (Demo2) # \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u6587\u4ef6 # \u5e76\u5c06\u540d\u79f0\u4fdd\u5b58\u5230 DIR_SRCS \u53d8\u91cf aux_source_directory(. DIR_SRCS) # \u6307\u5b9a\u751f\u6210\u76ee\u6807 add_executable(Demo ${DIR_SRCS})`","title":"CMake"},{"location":"linux/link_list/","text":"\u94fe\u8868 \u5355\u94fe\u8868 \u5355\u94fe\u8868\u6570\u636e\u7ed3\u6784 typedef int elem_type; typedef struct s_list{ elem_type data; struct s_list *next; } s_list_node,*s_list_pt; \u5305\u542b\u6570\u636e\u548c\u8282\u70b9\u6307\u9488 \u5934\u63d2\u6cd5\u548c\u5c3e\u63d2\u6cd5 \u5934\u63d2\u6cd5 int s_list_head_insert(s_list_pt p_head, elem_type data) { if(NULL == p_head) { return -1; } s_list_pt p_node = s_list_node_create(); if(NULL == p_node) { return -2; } p_node- data = data; /*\u5934\u63d2\u6cd5*/ p_node- next = p_head- next; p_head- next = p_node; } \u4e0e\u94fe\u8868\u7684\u63d2\u5165\u4e00\u6837\uff0c\u5148\u83b7\u53d6\u63d2\u5165\u4f4d\u7f6e\u7684\u6307\u9488 p_node- next = p_head- next; \uff0c\u7136\u540e\u5c06\u6b64\u8282\u70b9\u6307\u9488\u8d4b\u7ed9\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684 next \u6307\u9488\uff0c p_head- next = p_node; \u5c3e\u63d2\u6cd5 int s_list_tail_insert(s_list_pt p_head, elem_type data) { s_list_pt p_index = NULL; s_list_pt p_node = NULL; if(p_head == NULL) { return -1; } p_index = p_head; while(p_index- next) { p_index = p_index- next; } /*\u627e\u5230\u94fe\u8868\u7684\u672b\u5c3e*/ p_node = s_list_node_create(); if(p_node == NULL){ return -1; } p_node- data = data; p_index- next = p_node; return 0; } \u5c3e\u63d2\u6cd5\u9700\u8981\u904d\u5386\u5230\u94fe\u8868\u7684\u672b\u7aef\uff0c\u5c06\u8282\u70b9\u63d2\u5165\u5373\u53ef \u94fe\u8868\u9006\u7f6e int s_list_reverse(s_list_pt p_head) { s_list_pt ptr = NULL, cur = NULL; ptr = p_head- next; p_head- next = NULL; while (ptr){ cur = ptr; ptr = ptr- next; /*\u5934\u63d2\u6cd5*/ cur- next = p_head- next; p_head- next = cur; } return 0; } \u9996\u5148\u65ad\u5f00\u5934\u8282\u70b9\u548c\u9996\u8282\u70b9\u7684\u94fe\u63a5\uff0c\u7136\u540e\u9700\u8981\u4e24\u4e2a\u6307\u9488\uff0c ptr \u4f5c\u4e3a\u6307\u9488\u7d22\u5f15\uff0c\u5411\u540e\u904d\u5386\u94fe\u8868\uff0c cur \u4fdd\u5b58\u5f53\u524d\u6307\u9488\uff0c\u6bcf\u6b21\u7d22\u5f15\u5c06 cur \u6307\u9488\u4f7f\u7528\u5934\u63d2\u6cd5 \u63d2\u5165\u5934\u7ed3\u70b9\u3002 \u6b64\u65b9\u6cd5\u5f15\u7533\u51fa \u94fe\u8868\u6392\u5e8f \u53cc\u94fe\u8868 \u94fe\u8868\u63d2\u5165 \u94fe\u8868\u63d2\u5165\u6ce8\u610f\uff0c\u5e94\u8be5\u5148\u586b\u5145\u65b0\u8282\u70b9\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u7136\u540e\u65ad\u5f00\u539f\u8282\u70b9\uff0c\u63d2\u5165\u65b0\u8282\u70b9 \u53c2\u8003linux\u7684 list.h \u4ee3\u7801 /** * list_add - add a new entry * @new: new entry to be added * @head: list head to add it after * * Insert a new entry after the specified head. * This is good for implementing stacks. */ static inline void list_add(struct list_head *new, struct list_head *head) { __list_add(new, head, head- next); } static inline void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next) { next- prev = new; //g:\u540e\u9762\u8282\u70b9\u7684\u524d\u9a71\u8bbe\u4e3a new new- next = next; //g:new\u8282\u70b9\u8bbe\u7f6e\u524d\u9a71\u540e\u7ee7 new- prev = prev; prev- next = new; //g:\u524d\u9762\u8282\u70b9\u7684\u540e\u7ee7\uff08\u5fc5\u987b\u653e\u5728 next- prev = new \u4e4b\u540e\uff09 } \u6808 \u6808\u7684\u7279\u6027\u4e3a\u5148\u8fdb\u540e\u51fa\uff0c\u5b9e\u73b0\u6808\u53ef\u4ee5\u7528\u987a\u5e8f\u8868\u548c\u94fe\u5f0f\u8868\u3002\u987a\u5e8f\u8868\u5b9e\u73b0\u6808\u9700\u8981\u6709\u6807\u8bb0\u6808\u9876\u7684\u6307\u9488\u3002\u94fe\u5f0f\u8868\u5b9e\u73b0\u6808\u7684\u601d\u8def\u662f\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u63d2\u5165\u53d6\u51fa\uff0c\u6bd4\u5982\u5934\u63d2\u6cd5\u63d2\u5165\u7136\u540e\u53d6\u51fa\uff0c\u4fbf\u5b9e\u73b0\u4e86\u5148\u8fdb\u540e\u51fa\u3002 \u961f\u5217 \u987a\u5e8f //\u5faa\u73af\u961f\u5217 typedef int elem_type; typedef struct queue{ elem_type queue[QUEUE_MAIX_SIZE]; unsigned int rear; unsigned int front; }seq_queue_t; \u5165\u961f\u79fb\u52a8rear\uff0c\u51fa\u961f\u79fb\u52a8front rear front \u7c7b\u578b\u4e3a unsigned int \u5f53\u6ea2\u51fa\u65f6\u56de\u5f520\uff0c\u4f9d\u7136\u6ee1\u8db3\u6761\u4ef6\uff0c\u5b9e\u9645\u8981\u7528\u7684\u6570\u7ec4\u7d22\u5f15 idnex = front % QUEUE_MAIX_SIZE rear = front \u4e3a\u7a7a\uff0c (rear + 1) % QUEUE_MAIX_SIZE= front % QUEUE_MAIX_SIZE \u4e3a\u6ee1 \u94fe\u5f0f typedef int elem_type; typedef struct node { elem_type data; struct node *next; } link_list_t; typedef struct queue{ link_list_t *front; link_list_t *rear; }link_queue_t; NOTE : front \u6307\u5411\u94fe\u8868\u7684\u5934\u7ed3\u70b9\uff0c\u51fa\u961f\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5 free \uff0c rear \u6307\u5411\u94fe\u8868\u7684\u5c3e\u8282\u70b9\uff0c\u5165\u961f\u65f6\u91c7\u7528\u5c3e\u63d2\u6cd5\u3002 int link_queue_input(link_queue_t *p_queue, elem_type data) { if(NULL == p_queue) { return -1; } link_list_t * p_node = (link_list_t*)malloc(sizeof(link_list_t)); if (p_node == NULL ){ return -1; } p_node- data = data; p_node- next = NULL; p_queue- rear- next = p_node; p_queue- rear = p_node; return 0; } int link_queue_output(link_queue_t *p_queue, elem_type *data) { link_list_t *p_temp = NULL; if(link_queue_is_empty(p_queue)) { return -1; } p_temp = p_queue- front- next; *data = p_temp- data; p_queue- front- next = p_temp- next; if (p_temp != NULL){ free(p_temp); p_temp = NULL; } return 0; } \u6811 \u5b8c\u5168\u4e8c\u53c9\u6811 \u521b\u5efa btree_t* binary_tree_create(int cur, int node_num) { btree_t *p_node = (btree_t*)malloc(sizeof(btree_t)); if(NULL == p_node) { return NULL; } p_node- data = cur; if (2 * cur = node_num) { p_node- lchild = binary_tree_create(2 * cur, node_num); } else { p_node- lchild = NULL; } if (2 * cur + 1 = node_num) { p_node- rchild = binary_tree_create(2 * cur + 1, node_num); } else { p_node- rchild = NULL; } return p_node; } \u904d\u5386 \u524d\u5e8f ```c void pre_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } printf(\"%d,\",p_node- data); pre_order_traverse(p_node- lchild); pre_order_traverse(p_node- rchild); } ``` \u4e2d\u5e8f c void in_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } pre_order_traverse(p_node- lchild); printf(\"%d,\",p_node- data); pre_order_traverse(p_node- rchild); } \u540e\u5e8f ```c void post_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } pre_order_traverse(p_node- lchild); pre_order_traverse(p_node- rchild); printf(\"%d,\",p_node- data); } ``` \u5c42\u5e8f ```c void lever_order_traverse(btree_t p_node) { //\u6309\u7167\u6839\u5de6\u53f3\u7684\u987a\u5e8f\u5165\u961f btree_t p_index = NULL; seq_queue_t *p_queue = seq_queue_create(); if(NULL != p_node) { seq_queue_input(p_queue, p_node); } while (!seq_queue_is_empty(p_queue)) { seq_queue_output(p_queue, p_index); if(p_index- lchild != NULL) { seq_queue_input(p_queue, p_index- lchild); } if(p_index- rchild != NULL) { seq_queue_input(p_queue,p_index- rchild); } printf(\"%d,\",p_index- data); } printf(\"\\n-----------\\n\"); } ``` \u4e8c\u53c9\u6811\u7684\u521b\u5efa\u548c\u904d\u5386\u4e3b\u8981\u4f7f\u7528\u4e86\u9012\u5f52\u7684\u601d\u60f3\u3002","title":"\u94fe\u8868"},{"location":"linux/link_list/#_1","text":"","title":"\u94fe\u8868"},{"location":"linux/link_list/#_2","text":"","title":"\u5355\u94fe\u8868"},{"location":"linux/link_list/#_3","text":"typedef int elem_type; typedef struct s_list{ elem_type data; struct s_list *next; } s_list_node,*s_list_pt; \u5305\u542b\u6570\u636e\u548c\u8282\u70b9\u6307\u9488","title":"\u5355\u94fe\u8868\u6570\u636e\u7ed3\u6784"},{"location":"linux/link_list/#_4","text":"","title":"\u5934\u63d2\u6cd5\u548c\u5c3e\u63d2\u6cd5"},{"location":"linux/link_list/#_5","text":"int s_list_head_insert(s_list_pt p_head, elem_type data) { if(NULL == p_head) { return -1; } s_list_pt p_node = s_list_node_create(); if(NULL == p_node) { return -2; } p_node- data = data; /*\u5934\u63d2\u6cd5*/ p_node- next = p_head- next; p_head- next = p_node; } \u4e0e\u94fe\u8868\u7684\u63d2\u5165\u4e00\u6837\uff0c\u5148\u83b7\u53d6\u63d2\u5165\u4f4d\u7f6e\u7684\u6307\u9488 p_node- next = p_head- next; \uff0c\u7136\u540e\u5c06\u6b64\u8282\u70b9\u6307\u9488\u8d4b\u7ed9\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684 next \u6307\u9488\uff0c p_head- next = p_node;","title":"\u5934\u63d2\u6cd5"},{"location":"linux/link_list/#_6","text":"int s_list_tail_insert(s_list_pt p_head, elem_type data) { s_list_pt p_index = NULL; s_list_pt p_node = NULL; if(p_head == NULL) { return -1; } p_index = p_head; while(p_index- next) { p_index = p_index- next; } /*\u627e\u5230\u94fe\u8868\u7684\u672b\u5c3e*/ p_node = s_list_node_create(); if(p_node == NULL){ return -1; } p_node- data = data; p_index- next = p_node; return 0; } \u5c3e\u63d2\u6cd5\u9700\u8981\u904d\u5386\u5230\u94fe\u8868\u7684\u672b\u7aef\uff0c\u5c06\u8282\u70b9\u63d2\u5165\u5373\u53ef","title":"\u5c3e\u63d2\u6cd5"},{"location":"linux/link_list/#_7","text":"int s_list_reverse(s_list_pt p_head) { s_list_pt ptr = NULL, cur = NULL; ptr = p_head- next; p_head- next = NULL; while (ptr){ cur = ptr; ptr = ptr- next; /*\u5934\u63d2\u6cd5*/ cur- next = p_head- next; p_head- next = cur; } return 0; } \u9996\u5148\u65ad\u5f00\u5934\u8282\u70b9\u548c\u9996\u8282\u70b9\u7684\u94fe\u63a5\uff0c\u7136\u540e\u9700\u8981\u4e24\u4e2a\u6307\u9488\uff0c ptr \u4f5c\u4e3a\u6307\u9488\u7d22\u5f15\uff0c\u5411\u540e\u904d\u5386\u94fe\u8868\uff0c cur \u4fdd\u5b58\u5f53\u524d\u6307\u9488\uff0c\u6bcf\u6b21\u7d22\u5f15\u5c06 cur \u6307\u9488\u4f7f\u7528\u5934\u63d2\u6cd5 \u63d2\u5165\u5934\u7ed3\u70b9\u3002 \u6b64\u65b9\u6cd5\u5f15\u7533\u51fa \u94fe\u8868\u6392\u5e8f","title":"\u94fe\u8868\u9006\u7f6e"},{"location":"linux/link_list/#_8","text":"","title":"\u53cc\u94fe\u8868"},{"location":"linux/link_list/#_9","text":"\u94fe\u8868\u63d2\u5165\u6ce8\u610f\uff0c\u5e94\u8be5\u5148\u586b\u5145\u65b0\u8282\u70b9\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u7136\u540e\u65ad\u5f00\u539f\u8282\u70b9\uff0c\u63d2\u5165\u65b0\u8282\u70b9 \u53c2\u8003linux\u7684 list.h \u4ee3\u7801 /** * list_add - add a new entry * @new: new entry to be added * @head: list head to add it after * * Insert a new entry after the specified head. * This is good for implementing stacks. */ static inline void list_add(struct list_head *new, struct list_head *head) { __list_add(new, head, head- next); } static inline void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next) { next- prev = new; //g:\u540e\u9762\u8282\u70b9\u7684\u524d\u9a71\u8bbe\u4e3a new new- next = next; //g:new\u8282\u70b9\u8bbe\u7f6e\u524d\u9a71\u540e\u7ee7 new- prev = prev; prev- next = new; //g:\u524d\u9762\u8282\u70b9\u7684\u540e\u7ee7\uff08\u5fc5\u987b\u653e\u5728 next- prev = new \u4e4b\u540e\uff09 }","title":"\u94fe\u8868\u63d2\u5165"},{"location":"linux/link_list/#_10","text":"\u6808\u7684\u7279\u6027\u4e3a\u5148\u8fdb\u540e\u51fa\uff0c\u5b9e\u73b0\u6808\u53ef\u4ee5\u7528\u987a\u5e8f\u8868\u548c\u94fe\u5f0f\u8868\u3002\u987a\u5e8f\u8868\u5b9e\u73b0\u6808\u9700\u8981\u6709\u6807\u8bb0\u6808\u9876\u7684\u6307\u9488\u3002\u94fe\u5f0f\u8868\u5b9e\u73b0\u6808\u7684\u601d\u8def\u662f\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u63d2\u5165\u53d6\u51fa\uff0c\u6bd4\u5982\u5934\u63d2\u6cd5\u63d2\u5165\u7136\u540e\u53d6\u51fa\uff0c\u4fbf\u5b9e\u73b0\u4e86\u5148\u8fdb\u540e\u51fa\u3002","title":"\u6808"},{"location":"linux/link_list/#_11","text":"","title":"\u961f\u5217"},{"location":"linux/link_list/#_12","text":"//\u5faa\u73af\u961f\u5217 typedef int elem_type; typedef struct queue{ elem_type queue[QUEUE_MAIX_SIZE]; unsigned int rear; unsigned int front; }seq_queue_t; \u5165\u961f\u79fb\u52a8rear\uff0c\u51fa\u961f\u79fb\u52a8front rear front \u7c7b\u578b\u4e3a unsigned int \u5f53\u6ea2\u51fa\u65f6\u56de\u5f520\uff0c\u4f9d\u7136\u6ee1\u8db3\u6761\u4ef6\uff0c\u5b9e\u9645\u8981\u7528\u7684\u6570\u7ec4\u7d22\u5f15 idnex = front % QUEUE_MAIX_SIZE rear = front \u4e3a\u7a7a\uff0c (rear + 1) % QUEUE_MAIX_SIZE= front % QUEUE_MAIX_SIZE \u4e3a\u6ee1","title":"\u987a\u5e8f"},{"location":"linux/link_list/#_13","text":"typedef int elem_type; typedef struct node { elem_type data; struct node *next; } link_list_t; typedef struct queue{ link_list_t *front; link_list_t *rear; }link_queue_t; NOTE : front \u6307\u5411\u94fe\u8868\u7684\u5934\u7ed3\u70b9\uff0c\u51fa\u961f\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5 free \uff0c rear \u6307\u5411\u94fe\u8868\u7684\u5c3e\u8282\u70b9\uff0c\u5165\u961f\u65f6\u91c7\u7528\u5c3e\u63d2\u6cd5\u3002 int link_queue_input(link_queue_t *p_queue, elem_type data) { if(NULL == p_queue) { return -1; } link_list_t * p_node = (link_list_t*)malloc(sizeof(link_list_t)); if (p_node == NULL ){ return -1; } p_node- data = data; p_node- next = NULL; p_queue- rear- next = p_node; p_queue- rear = p_node; return 0; } int link_queue_output(link_queue_t *p_queue, elem_type *data) { link_list_t *p_temp = NULL; if(link_queue_is_empty(p_queue)) { return -1; } p_temp = p_queue- front- next; *data = p_temp- data; p_queue- front- next = p_temp- next; if (p_temp != NULL){ free(p_temp); p_temp = NULL; } return 0; }","title":"\u94fe\u5f0f"},{"location":"linux/link_list/#_14","text":"","title":"\u6811"},{"location":"linux/link_list/#_15","text":"","title":"\u5b8c\u5168\u4e8c\u53c9\u6811"},{"location":"linux/link_list/#_16","text":"btree_t* binary_tree_create(int cur, int node_num) { btree_t *p_node = (btree_t*)malloc(sizeof(btree_t)); if(NULL == p_node) { return NULL; } p_node- data = cur; if (2 * cur = node_num) { p_node- lchild = binary_tree_create(2 * cur, node_num); } else { p_node- lchild = NULL; } if (2 * cur + 1 = node_num) { p_node- rchild = binary_tree_create(2 * cur + 1, node_num); } else { p_node- rchild = NULL; } return p_node; }","title":"\u521b\u5efa"},{"location":"linux/link_list/#_17","text":"\u524d\u5e8f ```c void pre_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } printf(\"%d,\",p_node- data); pre_order_traverse(p_node- lchild); pre_order_traverse(p_node- rchild); } ``` \u4e2d\u5e8f c void in_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } pre_order_traverse(p_node- lchild); printf(\"%d,\",p_node- data); pre_order_traverse(p_node- rchild); } \u540e\u5e8f ```c void post_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } pre_order_traverse(p_node- lchild); pre_order_traverse(p_node- rchild); printf(\"%d,\",p_node- data); } ``` \u5c42\u5e8f ```c void lever_order_traverse(btree_t p_node) { //\u6309\u7167\u6839\u5de6\u53f3\u7684\u987a\u5e8f\u5165\u961f btree_t p_index = NULL; seq_queue_t *p_queue = seq_queue_create(); if(NULL != p_node) { seq_queue_input(p_queue, p_node); } while (!seq_queue_is_empty(p_queue)) { seq_queue_output(p_queue, p_index); if(p_index- lchild != NULL) { seq_queue_input(p_queue, p_index- lchild); } if(p_index- rchild != NULL) { seq_queue_input(p_queue,p_index- rchild); } printf(\"%d,\",p_index- data); } printf(\"\\n-----------\\n\"); } ``` \u4e8c\u53c9\u6811\u7684\u521b\u5efa\u548c\u904d\u5386\u4e3b\u8981\u4f7f\u7528\u4e86\u9012\u5f52\u7684\u601d\u60f3\u3002","title":"\u904d\u5386"},{"location":"linux/linux_shell/","text":"linux base linux shell ubuntu system \u67e5\u770b\u7248\u672c\uff1a cat /etc/issue \u67e5\u770b\u67b6\u6784\uff1a uname -m \u67e5\u770b\u5185\u6838\u7248\u672c\uff1a uname -r terminal ctrl + alt + t : \u521b\u5efa\u65b0\u7ec8\u7aef ctrl + shift + n : \u5728\u76f8\u540c\u8def\u5f84\u4e0b\u518d\u5f00\u542f\u65b0\u7ec8\u7aef\uff08\u5fc5\u987b\u6709\u7ec8\u7aef\uff09 ctrl + shift + t : \u5de6\u53f3\u5206\u5c4f\u6253\u5f00\u540c\u8def\u5f84\u7ec8\u7aef\uff08\u5fc5\u987b\u6709\u7ec8\u7aef\uff09 \u5173\u95ed\u7ec8\u7aef\uff1a exit \u6216 ctrl + d linux@ubuntu\uff1a\uff5e$ :\u5982\u4e0b\u8868 linux @ubuntu: ~ $ \u7528\u6237\u540d \u4e3b\u673a\u540d \u8def\u5f84\uff1a \uff5e \u8868\u793a home/ \uff0c / \u8868\u793a root/ \u7528\u6237\u6743\u9650: $ \u666e\u901a\u7528\u6237\uff0c # \u7ba1\u7406\u5458 pack manager ubuntu \u652f\u6301Ded\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5e38\u7528\u5de5\u5177\u5305\u62ec dpkg \uff0c apt dpkg \u672c\u5730\u79bb\u7ebf\u5b89\u88c5 -i : \u5b89\u88c5debian\u8f6f\u4ef6\u5305 -r : \u79fb\u9664\u5df2\u5b89\u88c5\u8f6f\u4ef6\u5305 -P : \u79fb\u9664\u5df2\u5b89\u88c5\u8f6f\u4ef6\u5305\u548c\u914d\u7f6e\u6587\u4ef6 -L : \u5217\u51fa\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u6e05\u5355 apt etc/apt/source.list \u662fapt\u955c\u50cf\u7684\u5730\u5740\u6587\u4ef6 var/lib/apt/lists \u5b58\u653eapt\u672c\u5730\u8f6f\u4ef6\u5305\u7684\u7d22\u5f15\u6587\u4ef6 var/cache/apt/archives \u662fapt\u672c\u5730\u7f13\u5b58\u76ee\u5f55 update :\u4e0b\u8f7d\u66f4\u65b0\u8f6f\u4ef6\u5305\u5217\u8868\u4fe1\u606f upgrade :\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u8f6f\u4ef6\u5305\u5347\u7ea7\u5230\u6700\u65b0 install : \u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\u5e76\u8fdb\u884c\u5b89\u88c5 remove : \u5378\u8f7d clean \uff1a\u6e05\u695a\u4e0b\u8f7d\u7684\u8f6f\u4ef6\u5305 apt-get --reinstall install :\u91cd\u65b0\u5b89\u88c5 apt-get --purge remove :\u5b8c\u5168\u5378\u8f7d apt-get -f install : \u4fee\u590d\u8f6f\u4ef6\u5305\u7684\u4f9d\u8d56\u5173\u7cfb base command \u591a\u4e2a\u547d\u4ee4\u4e00\u884c\u4e66\u5199\u4f7f\u7528 \uff1a \u4e00\u6761\u547d\u4ee4\u591a\u884c\u4e66\u5199\u4f7f\u7528 \\ cd cd - : \u56de\u5230\u4e0a\u6b21\u5de5\u4f5c\u76ee\u5f55 mkdir -p :\u53ef\u4ee5\u4e00\u6b21\u5efa\u7acb\u591a\u4e2a\u76ee\u5f55 cp rm -r :\u9012\u5f52\u5220\u9664 rm -rf :\u5220\u9664\u76ee\u5f55\u540d ln -s :\u5efa\u7acb\u8fde\u63a5\u7b26\u53f7 tar -c : \u6253\u5305 -x \uff1a\u89e3\u5305 -f : \u666e\u901a\u6587\u4ef6 -C \uff1a\u6307\u5b9a\u8def\u5f84 grep grep \"string\" * -nR :\u5f53\u524d\u76ee\u5f55\u4e0b\u9012\u5f52\u641c\u7d22 -I \uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199 -n \uff1a\u663e\u793a\u5339\u914d\u884c\u4ee5\u53ca\u884c\u53f7 grep \"h\" ./ -r | less :\u914d\u5408\u7ba1\u9053\u5c06\u5176\u8f6c\u5230less\uff08\u5206\u9875\u5668\uff09 find find \u8def\u5f84 -name filename :\u4ece\u5f53\u524d\u76ee\u5f55\u5f00\u59cb\u5bfb\u627e\u6307\u5b9a\u6587\u4ef6 -name : \u652f\u6301\u901a\u914d\u7b26 * \u548c \uff1f \u5982 find ./ -name test*.c head \u4e0etail \u663e\u793a\u6587\u4ef6\u6307\u5b9a\u884c\uff1a head -line file | tail -1 more \u4e0e less q :\u9000\u51fa\uff0cless \u652f\u6301\u5b57\u7b26\u67e5\u627e\uff1a /str wc \u5bf9\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u7edf\u8ba1 -c : \u5b57\u7b26\u6570 -w :\u5355\u8bcd\u6570 -l : \u884c\u6570 cut \u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5206\u5272 -d :\u6307\u5b9a\u5206\u9694\u7b26 -f :\u6307\u5b9a\u9700\u8981\u7684\u533a\u57df \u5982\u622a\u53d6 /etc/passwd \u6587\u4ef6\u5185\u7684\u7528\u6237\u540d\uff1a cat /etc/passwd | cut -d \":\" -f 1 alias \u5b9a\u4e49\u522b\u540d alias listsoft = 'ls /var/cache/apt/archives' \u53d6\u6d88\u522b\u540d\u4f7f\u7528 unalias \u914d\u7f6e\u6587\u4ef6 : .bashrc \u3001 .profile shell \u57fa\u672c\u914d\u7f6e History \u4f7f\u7528 history \u547d\u4ee4\u53ef\u4ee5\u5c06\u5386\u53f2\u547d\u4ee4\u6253\u5370\u5230\u7ec8\u7aef\uff0clinux\u9ed8\u8ba4\u4fdd\u5b581000\u6761\u5386\u53f2\u8bb0\u5f55\uff0c\u53ef\u4ee5\u8bbe\u7f6e HISTSIZE \u6765\u4fee\u6539\u6761\u6570 \u6c38\u4e45\u4fee\u6539 : \u4fee\u6539 \u3001home/.bashrc \u7684 HISTSIZE \u5e76\u4f7f\u7528 source \u547d\u4ee4\u4f7f\u5176\u751f\u6548 \u73af\u5883\u53d8\u91cf \u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff1a /etc/profile \u4e2d\u6dfb\u52a0 export PATH=/home/guo:$PATH ,\u7136\u540e\u4f7f\u7528 source \u4f7f\u5176\u751f\u6548 \u67e5\u770b\u78c1\u76d8 \u5982\u4f7f\u7528 df -h \u67e5\u770b\u5404\u4e2a\u78c1\u76d8\uff0c\u627e\u5230\u4f18\u76d8\uff0c\u5c06\u5176\u6302\u8f7d\u5230 /mnt \u5982 mount -t vfat /dev/sdb4 /mnt \u7528\u6237\u4e0e\u7ec4 /etc/passwd \u53ef\u4ee5\u8bc6\u522b\u7528\u6237\u6e05\u5355\uff0c\u5f53\u7528\u6237\u767b\u5f55\u65f6\u7cfb\u7edf\u4f1a\u67e5\u8be2\u8fd9\u4e2a\u6587\u4ef6 root: x: 1: 1:root,,,:/root:/bin/bash root x 1 1 root,,, /root /binbash \u767b\u5f55\u540d \u5bc6\u7801\u53e3\u4ee4 UID GID \u4e2a\u4eba\u4fe1\u606f \u4e3b\u76ee\u5f55 shell /etc/shadow :\u52a0\u5bc6\u7684\u7528\u6237\u6e05\u5355 /etc/group :\u7ec4\u540d\u79f0\u548c\u6210\u5458 \u5305\u542b\uff1a\u7ec4\u540d\uff0c\u52a0\u5bc6\u53e3\u4ee4\uff0c GID\uff0c\u6210\u5458\u5217\u8868 \u5e38\u7528\u547d\u4ee4 : adduser , userdel , usermod , groupadd , groupdel \u7f51\u7edc\u914d\u7f6e /etc/network/interfaces \u6587\u4ef6\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\u4f7f\u7528 sudo /etc/init.d/networking restart \u547d\u4ee4\u4f7f\u5176\u751f\u6548 shell\u811a\u672c \u57fa\u672c\u8fc7\u7a0b \u5efa\u7acb .sh \u540e\u7f00\u7684\u6587\u4ef6 chmod \u4fee\u6539\u6587\u4ef6\u6743\u9650 \u811a\u672c\u7b2c\u4e00\u884c #\uff01/bin/bash \u53d8\u91cf \u7528\u6237\u81ea\u5b9a\u4e49\u53d8\u91cf \u53d8\u91cf\u540d=\u503c ( \u7b49\u53f7\u65e0\u7a7a\u683c ) \u4f4d\u7f6e\u53c2\u6570 $0 $1.... \u9884\u5b9a\u4e49\u53d8\u91cf $# :\u547d\u4ee4\u884c\u53c2\u6570\u7684\u4e2a\u6570 $@ :\u5305\u542b\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\uff1a`$1$2$3.. $? :\u5305\u542b\u524d\u4e00\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001 $* :\u5305\u542b\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\uff1a $1$2$3.. $$ :\u5305\u542b\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0bID\u53f7 \u73af\u5883\u53d8\u91cf HOME , PATH \u7b49\u7b49 \u8fd0\u7b97 \u8fd0\u7b97\u7b26 + \uff0c - \uff0c \\* , / , % \u8fd0\u7b97\u547d\u4ee4 expr \u4f8b\u5982 add=`expr $var1 + $var2` \u5224\u65ad \u5b57\u7b26\u4e32 = :\u76f8\u7b49 \uff01= \uff1a\u4e0d\u7b49 -z :\u957f\u5ea6\u662f\u5426\u4e3a0 -n \uff1a\u957f\u5ea6\u662f\u5426\u4e0d\u4e3a0 \u6570\u5b57 -eq \uff1a\u7b49\u4e8e equal -ne : \u4e0d\u7b49\u4e8e not equal -gt \uff1a\u5927\u4e8e greater than -ge \uff1a\u5927\u4e8e\u7b49\u4e8e greater equal -lt \uff1a\u5c0f\u4e8e less than -le : \u5c0f\u4e8e\u7b49\u4e8e less epual \u5e38\u89c1\u7b26\u53f7\u533a\u522b ${} :\u53d8\u91cf\u66ff\u6362 () \u547d\u4ee4\u7ec4\u3002\u62ec\u53f7\u4e2d\u7684\u547d\u4ee4\u5c06\u4f1a\u65b0\u5f00\u4e00\u4e2a\u5b50shell\u987a\u5e8f\u6267\u884c\uff0c\u6240\u4ee5\u62ec\u53f7\u4e2d\u7684\u53d8\u91cf\u4e0d\u80fd\u591f\u88ab\u811a\u672c\u4f59\u4e0b\u7684\u90e8\u5206\u4f7f\u7528\u3002\u62ec\u53f7\u4e2d\u591a\u4e2a\u547d\u4ee4\u4e4b\u95f4\u7528\u5206\u53f7\u9694\u5f00\uff0c\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u53ef\u4ee5\u6ca1\u6709\u5206\u53f7\uff0c\u5404\u547d\u4ee4\u548c\u62ec\u53f7\u4e4b\u95f4\u4e0d\u5fc5\u6709\u7a7a\u683c\u3002 \u547d\u4ee4\u66ff\u6362 \u7b49\u540c\u4e8e``\uff0cshell\u626b\u63cf\u4e00\u904d\u547d\u4ee4\u884c\uff0c\u53d1\u73b0\u4e86 $(cmd) \u7ed3\u6784\uff0c\u4fbf\u5c06$ (cmd) \u4e2d\u7684 cmd \u6267\u884c\u4e00\u6b21\uff0c\u5f97\u5230\u5176\u6807\u51c6\u8f93\u51fa\uff0c\u518d\u5c06\u6b64\u8f93\u51fa\u653e\u5230\u539f\u6765\u547d\u4ee4\u3002\u6709\u4e9bshell\u4e0d\u652f\u6301\uff0c\u5982 tcsh \u3002 \u7528\u4e8e\u521d\u59cb\u5316\u6570\u7ec4\u3002\u5982\uff1a array=(a b c d) (()) \u6574\u6570\u6269\u5c55\u3002\u8fd9\u79cd\u6269\u5c55\u8ba1\u7b97\u662f\u6574\u6570\u578b\u7684\u8ba1\u7b97\uff0c\u4e0d\u652f\u6301\u6d6e\u70b9\u578b\u3002((exp))\u7ed3\u6784\u6269\u5c55\u5e76\u8ba1\u7b97\u4e00\u4e2a\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u4e3a0\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u9000\u51fa\u72b6\u6001\u7801\u4e3a1\uff0c\u6216\u8005 \u662f\"\u5047\"\uff0c\u800c\u4e00\u4e2a\u975e\u96f6\u503c\u7684\u8868\u8fbe\u5f0f\u6240\u8fd4\u56de\u7684\u9000\u51fa\u72b6\u6001\u7801\u5c06\u4e3a0\uff0c\u6216\u8005\u662f\"true\"\u3002\u82e5\u662f\u903b\u8f91\u5224\u65ad\uff0c\u8868\u8fbe\u5f0fexp\u4e3a\u771f\u5219\u4e3a1,\u5047\u5219\u4e3a0\u3002\u5982 \uff08\uff082*3\uff09\uff09 \u53ea\u8981\u62ec\u53f7\u4e2d\u7684\u8fd0\u7b97\u7b26\u3001\u8868\u8fbe\u5f0f\u7b26\u5408C\u8bed\u8a00\u8fd0\u7b97\u89c4\u5219\uff0c\u90fd\u53ef\u7528\u5728 $((exp)) \u4e2d\uff0c\u751a\u81f3\u662f\u4e09\u76ee\u8fd0\u7b97\u7b26\u3002\u4f5c\u4e0d\u540c\u8fdb\u4f4d(\u5982\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236)\u8fd0\u7b97\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u5168\u90fd\u81ea\u52a8\u8f6c\u5316\u6210\u4e86\u5341\u8fdb\u5236\u3002\u5982\uff1a echo $((16#5f)) \u7ed3\u679c\u4e3a95 (16\u8fdb\u4f4d\u8f6c\u5341\u8fdb\u5236) \u5355\u7eaf\u7528 (( )) \u4e5f\u53ef\u91cd\u5b9a\u4e49\u53d8\u91cf\u503c\uff0c\u6bd4\u5982 a=5; ((a++)) \u53ef\u5c06 $a \u91cd\u5b9a\u4e49\u4e3a6 \u5e38\u7528\u4e8e\u7b97\u672f\u8fd0\u7b97\u6bd4\u8f83\uff0c\u53cc\u62ec\u53f7\u4e2d\u7684\u53d8\u91cf\u53ef\u4ee5\u4e0d\u4f7f\u7528$\u7b26\u53f7\u524d\u7f00\u3002\u62ec\u53f7\u5185\u652f\u6301\u591a\u4e2a\u8868\u8fbe\u5f0f\u7528\u9017\u53f7\u5206\u5f00\u3002 \u53ea\u8981\u62ec\u53f7\u4e2d\u7684\u8868\u8fbe\u5f0f\u7b26\u5408C\u8bed\u8a00\u8fd0\u7b97\u89c4\u5219,\u6bd4\u5982\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 for((i=0;i 5;i++)) [] bash \u7684\u5185\u90e8\u547d\u4ee4\uff0c[\u548ctest\u662f\u7b49\u540c\u7684\u3002\u5982\u679c\u6211\u4eec\u4e0d\u7528\u7edd\u5bf9\u8def\u5f84\u6307\u660e\uff0c\u901a\u5e38\u6211\u4eec\u7528\u7684\u90fd\u662fbash\u81ea\u5e26\u7684\u547d\u4ee4\u3002if/test\u7ed3\u6784\u4e2d\u7684\u5de6\u4e2d\u62ec\u53f7\u662f\u8c03\u7528test\u7684\u547d\u4ee4\u6807\u8bc6\uff0c\u53f3\u4e2d\u62ec\u53f7\u662f\u5173\u95ed\u6761\u4ef6\u5224\u65ad\u7684\u3002\u8fd9\u4e2a\u547d\u4ee4\u628a\u5b83\u7684\u53c2\u6570\u4f5c\u4e3a\u6bd4\u8f83\u8868\u8fbe\u5f0f\u6216\u8005\u4f5c\u4e3a\u6587\u4ef6\u6d4b\u8bd5\uff0c\u5e76\u4e14\u6839\u636e\u6bd4\u8f83\u7684\u7ed3\u679c\u6765\u8fd4\u56de\u4e00\u4e2a\u9000\u51fa\u72b6\u6001\u7801\u3002if/test\u7ed3\u6784\u4e2d\u5e76\u4e0d\u662f\u5fc5\u987b\u53f3\u4e2d\u62ec\u53f7\uff0c\u4f46\u662f\u65b0\u7248\u7684Bash\u4e2d\u8981\u6c42\u5fc5\u987b\u8fd9\u6837\u3002 Test\u548c[]\u4e2d\u53ef\u7528\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\u53ea\u6709==\u548c!=\uff0c\u4e24\u8005\u90fd\u662f\u7528\u4e8e\u5b57\u7b26\u4e32\u6bd4\u8f83\u7684\uff0c\u4e0d\u53ef\u7528\u4e8e\u6574\u6570\u6bd4\u8f83\uff0c\u6574\u6570\u6bd4\u8f83\u53ea\u80fd\u4f7f\u7528-eq\uff0c-gt\u8fd9\u79cd\u5f62\u5f0f\u3002\u65e0\u8bba\u662f\u5b57\u7b26\u4e32\u6bd4\u8f83\u8fd8\u662f\u6574\u6570\u6bd4\u8f83\u90fd\u4e0d\u652f\u6301\u5927\u4e8e\u53f7\u5c0f\u4e8e\u53f7\u3002\u5982\u679c\u5b9e\u5728\u60f3\u7528\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u6bd4\u8f83\u53ef\u4ee5\u4f7f\u7528\u8f6c\u4e49\u5f62\u5f0f\uff0c\u5982\u679c\u6bd4\u8f83\"ab\"\u548c\"bc\"\uff1a[ ab \\ bc ]\uff0c\u7ed3\u679c\u4e3a\u771f\uff0c\u4e5f\u5c31\u662f\u8fd4\u56de\u72b6\u6001\u4e3a0\u3002[ ]\u4e2d\u7684\u903b\u8f91\u4e0e\u548c\u903b\u8f91\u6216\u4f7f\u7528-a \u548c-o \u8868\u793a\u3002 \u5b57\u7b26\u8303\u56f4\u3002\u7528\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u63cf\u8ff0\u4e00\u4e2a\u5339\u914d\u7684\u5b57\u7b26\u8303\u56f4\u3002\u4f5c\u4e3atest\u7528\u9014\u7684\u4e2d\u62ec\u53f7\u5185\u4e0d\u80fd\u4f7f\u7528\u6b63\u5219\u3002 \u5728\u4e00\u4e2aarray \u7ed3\u6784\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4e2d\u62ec\u53f7\u7528\u6765\u5f15\u7528\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u7f16\u53f7\u3002 [[ ]] [[ \u662f bash \u7a0b\u5e8f\u8bed\u8a00\u7684\u5173\u952e\u5b57\u3002\u5e76\u4e0d\u662f\u4e00\u4e2a\u547d\u4ee4\uff0c [[ ]] \u7ed3\u6784\u6bd4 [ ] \u7ed3\u6784\u66f4\u52a0\u901a\u7528\u3002\u5728 [[ \u548c ]] \u4e4b\u95f4\u6240\u6709\u7684\u5b57\u7b26\u90fd\u4e0d\u4f1a\u53d1\u751f\u6587\u4ef6\u540d\u6269\u5c55\u6216\u8005\u5355\u8bcd\u5206\u5272\uff0c\u4f46\u662f\u4f1a\u53d1\u751f\u53c2\u6570\u6269\u5c55\u548c\u547d\u4ee4\u66ff\u6362\u3002 \u652f\u6301\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u5339\u914d\uff0c\u4f7f\u7528 =~ \u64cd\u4f5c\u7b26\u65f6\u751a\u81f3\u652f\u6301shell\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u5b57\u7b26\u4e32\u6bd4\u8f83\u65f6\u53ef\u4ee5\u628a\u53f3\u8fb9\u7684\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u5f0f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 [[ hello == hell? ]] \uff0c\u7ed3\u679c\u4e3a\u771f\u3002 [[ ]] \u4e2d\u5339\u914d\u5b57\u7b26\u4e32\u6216\u901a\u914d\u7b26\uff0c\u4e0d\u9700\u8981\u5f15\u53f7\u3002 \u4f7f\u7528 [[ ... ]] \u6761\u4ef6\u5224\u65ad\u7ed3\u6784\uff0c\u800c\u4e0d\u662f [ ... ] \uff0c\u80fd\u591f\u9632\u6b62\u811a\u672c\u4e2d\u7684\u8bb8\u591a\u903b\u8f91\u9519\u8bef\u3002\u6bd4\u5982\uff0c ,||, , \u64cd\u4f5c\u7b26\u80fd\u591f\u6b63\u5e38\u5b58\u5728\u4e8e [[ ]] \u6761\u4ef6\u5224\u65ad\u7ed3\u6784\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u51fa\u73b0\u5728 [ ] \u7ed3\u6784\u4e2d\u7684\u8bdd\uff0c\u4f1a\u62a5\u9519\u3002\u6bd4\u5982\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 if [[ $a != 1 $a != 2 ]] , \u5982\u679c\u4e0d\u9002\u7528\u53cc\u62ec\u53f7, \u5219\u4e3a if [ $a -ne 1] [ $a != 2 ] \u6216\u8005 if [ $a -ne 1 -a $a != 2 ] \u3002 bash\u628a\u53cc\u4e2d\u62ec\u53f7\u4e2d\u7684\u8868\u8fbe\u5f0f\u770b\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u9000\u51fa\u72b6\u6001\u7801\u3002","title":"Linux shell"},{"location":"linux/linux_shell/#linux-base","text":"","title":"linux base"},{"location":"linux/linux_shell/#linux-shell","text":"","title":"linux shell"},{"location":"linux/linux_shell/#ubuntu-system","text":"\u67e5\u770b\u7248\u672c\uff1a cat /etc/issue \u67e5\u770b\u67b6\u6784\uff1a uname -m \u67e5\u770b\u5185\u6838\u7248\u672c\uff1a uname -r","title":"ubuntu system"},{"location":"linux/linux_shell/#terminal","text":"ctrl + alt + t : \u521b\u5efa\u65b0\u7ec8\u7aef ctrl + shift + n : \u5728\u76f8\u540c\u8def\u5f84\u4e0b\u518d\u5f00\u542f\u65b0\u7ec8\u7aef\uff08\u5fc5\u987b\u6709\u7ec8\u7aef\uff09 ctrl + shift + t : \u5de6\u53f3\u5206\u5c4f\u6253\u5f00\u540c\u8def\u5f84\u7ec8\u7aef\uff08\u5fc5\u987b\u6709\u7ec8\u7aef\uff09 \u5173\u95ed\u7ec8\u7aef\uff1a exit \u6216 ctrl + d linux@ubuntu\uff1a\uff5e$ :\u5982\u4e0b\u8868 linux @ubuntu: ~ $ \u7528\u6237\u540d \u4e3b\u673a\u540d \u8def\u5f84\uff1a \uff5e \u8868\u793a home/ \uff0c / \u8868\u793a root/ \u7528\u6237\u6743\u9650: $ \u666e\u901a\u7528\u6237\uff0c # \u7ba1\u7406\u5458","title":"terminal"},{"location":"linux/linux_shell/#pack-manager","text":"ubuntu \u652f\u6301Ded\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5e38\u7528\u5de5\u5177\u5305\u62ec dpkg \uff0c apt","title":"pack  manager"},{"location":"linux/linux_shell/#dpkg","text":"\u672c\u5730\u79bb\u7ebf\u5b89\u88c5 -i : \u5b89\u88c5debian\u8f6f\u4ef6\u5305 -r : \u79fb\u9664\u5df2\u5b89\u88c5\u8f6f\u4ef6\u5305 -P : \u79fb\u9664\u5df2\u5b89\u88c5\u8f6f\u4ef6\u5305\u548c\u914d\u7f6e\u6587\u4ef6 -L : \u5217\u51fa\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u6e05\u5355","title":"dpkg"},{"location":"linux/linux_shell/#apt","text":"etc/apt/source.list \u662fapt\u955c\u50cf\u7684\u5730\u5740\u6587\u4ef6 var/lib/apt/lists \u5b58\u653eapt\u672c\u5730\u8f6f\u4ef6\u5305\u7684\u7d22\u5f15\u6587\u4ef6 var/cache/apt/archives \u662fapt\u672c\u5730\u7f13\u5b58\u76ee\u5f55 update :\u4e0b\u8f7d\u66f4\u65b0\u8f6f\u4ef6\u5305\u5217\u8868\u4fe1\u606f upgrade :\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u8f6f\u4ef6\u5305\u5347\u7ea7\u5230\u6700\u65b0 install : \u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\u5e76\u8fdb\u884c\u5b89\u88c5 remove : \u5378\u8f7d clean \uff1a\u6e05\u695a\u4e0b\u8f7d\u7684\u8f6f\u4ef6\u5305 apt-get --reinstall install :\u91cd\u65b0\u5b89\u88c5 apt-get --purge remove :\u5b8c\u5168\u5378\u8f7d apt-get -f install : \u4fee\u590d\u8f6f\u4ef6\u5305\u7684\u4f9d\u8d56\u5173\u7cfb","title":"apt"},{"location":"linux/linux_shell/#base-command","text":"\u591a\u4e2a\u547d\u4ee4\u4e00\u884c\u4e66\u5199\u4f7f\u7528 \uff1a \u4e00\u6761\u547d\u4ee4\u591a\u884c\u4e66\u5199\u4f7f\u7528 \\","title":"base command"},{"location":"linux/linux_shell/#cd","text":"cd - : \u56de\u5230\u4e0a\u6b21\u5de5\u4f5c\u76ee\u5f55","title":"cd"},{"location":"linux/linux_shell/#mkdir","text":"-p :\u53ef\u4ee5\u4e00\u6b21\u5efa\u7acb\u591a\u4e2a\u76ee\u5f55","title":"mkdir"},{"location":"linux/linux_shell/#cp-rm","text":"-r :\u9012\u5f52\u5220\u9664 rm -rf :\u5220\u9664\u76ee\u5f55\u540d","title":"cp  rm"},{"location":"linux/linux_shell/#ln","text":"-s :\u5efa\u7acb\u8fde\u63a5\u7b26\u53f7","title":"ln"},{"location":"linux/linux_shell/#tar","text":"-c : \u6253\u5305 -x \uff1a\u89e3\u5305 -f : \u666e\u901a\u6587\u4ef6 -C \uff1a\u6307\u5b9a\u8def\u5f84","title":"tar"},{"location":"linux/linux_shell/#grep","text":"grep \"string\" * -nR :\u5f53\u524d\u76ee\u5f55\u4e0b\u9012\u5f52\u641c\u7d22 -I \uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199 -n \uff1a\u663e\u793a\u5339\u914d\u884c\u4ee5\u53ca\u884c\u53f7 grep \"h\" ./ -r | less :\u914d\u5408\u7ba1\u9053\u5c06\u5176\u8f6c\u5230less\uff08\u5206\u9875\u5668\uff09","title":"grep"},{"location":"linux/linux_shell/#find","text":"find \u8def\u5f84 -name filename :\u4ece\u5f53\u524d\u76ee\u5f55\u5f00\u59cb\u5bfb\u627e\u6307\u5b9a\u6587\u4ef6 -name : \u652f\u6301\u901a\u914d\u7b26 * \u548c \uff1f \u5982 find ./ -name test*.c","title":"find"},{"location":"linux/linux_shell/#head-tail","text":"\u663e\u793a\u6587\u4ef6\u6307\u5b9a\u884c\uff1a head -line file | tail -1","title":"head \u4e0etail"},{"location":"linux/linux_shell/#more-less","text":"q :\u9000\u51fa\uff0cless \u652f\u6301\u5b57\u7b26\u67e5\u627e\uff1a /str","title":"more \u4e0e less"},{"location":"linux/linux_shell/#wc","text":"\u5bf9\u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u7edf\u8ba1 -c : \u5b57\u7b26\u6570 -w :\u5355\u8bcd\u6570 -l : \u884c\u6570","title":"wc"},{"location":"linux/linux_shell/#cut","text":"\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5206\u5272 -d :\u6307\u5b9a\u5206\u9694\u7b26 -f :\u6307\u5b9a\u9700\u8981\u7684\u533a\u57df \u5982\u622a\u53d6 /etc/passwd \u6587\u4ef6\u5185\u7684\u7528\u6237\u540d\uff1a cat /etc/passwd | cut -d \":\" -f 1","title":"cut"},{"location":"linux/linux_shell/#alias","text":"\u5b9a\u4e49\u522b\u540d alias listsoft = 'ls /var/cache/apt/archives' \u53d6\u6d88\u522b\u540d\u4f7f\u7528 unalias \u914d\u7f6e\u6587\u4ef6 : .bashrc \u3001 .profile","title":"alias"},{"location":"linux/linux_shell/#shell","text":"","title":"shell \u57fa\u672c\u914d\u7f6e"},{"location":"linux/linux_shell/#history","text":"\u4f7f\u7528 history \u547d\u4ee4\u53ef\u4ee5\u5c06\u5386\u53f2\u547d\u4ee4\u6253\u5370\u5230\u7ec8\u7aef\uff0clinux\u9ed8\u8ba4\u4fdd\u5b581000\u6761\u5386\u53f2\u8bb0\u5f55\uff0c\u53ef\u4ee5\u8bbe\u7f6e HISTSIZE \u6765\u4fee\u6539\u6761\u6570 \u6c38\u4e45\u4fee\u6539 : \u4fee\u6539 \u3001home/.bashrc \u7684 HISTSIZE \u5e76\u4f7f\u7528 source \u547d\u4ee4\u4f7f\u5176\u751f\u6548","title":"History"},{"location":"linux/linux_shell/#_1","text":"\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff1a /etc/profile \u4e2d\u6dfb\u52a0 export PATH=/home/guo:$PATH ,\u7136\u540e\u4f7f\u7528 source \u4f7f\u5176\u751f\u6548","title":"\u73af\u5883\u53d8\u91cf"},{"location":"linux/linux_shell/#_2","text":"\u5982\u4f7f\u7528 df -h \u67e5\u770b\u5404\u4e2a\u78c1\u76d8\uff0c\u627e\u5230\u4f18\u76d8\uff0c\u5c06\u5176\u6302\u8f7d\u5230 /mnt \u5982 mount -t vfat /dev/sdb4 /mnt","title":"\u67e5\u770b\u78c1\u76d8"},{"location":"linux/linux_shell/#_3","text":"/etc/passwd \u53ef\u4ee5\u8bc6\u522b\u7528\u6237\u6e05\u5355\uff0c\u5f53\u7528\u6237\u767b\u5f55\u65f6\u7cfb\u7edf\u4f1a\u67e5\u8be2\u8fd9\u4e2a\u6587\u4ef6 root: x: 1: 1:root,,,:/root:/bin/bash root x 1 1 root,,, /root /binbash \u767b\u5f55\u540d \u5bc6\u7801\u53e3\u4ee4 UID GID \u4e2a\u4eba\u4fe1\u606f \u4e3b\u76ee\u5f55 shell /etc/shadow :\u52a0\u5bc6\u7684\u7528\u6237\u6e05\u5355 /etc/group :\u7ec4\u540d\u79f0\u548c\u6210\u5458 \u5305\u542b\uff1a\u7ec4\u540d\uff0c\u52a0\u5bc6\u53e3\u4ee4\uff0c GID\uff0c\u6210\u5458\u5217\u8868 \u5e38\u7528\u547d\u4ee4 : adduser , userdel , usermod , groupadd , groupdel","title":"\u7528\u6237\u4e0e\u7ec4"},{"location":"linux/linux_shell/#_4","text":"/etc/network/interfaces \u6587\u4ef6\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\u4f7f\u7528 sudo /etc/init.d/networking restart \u547d\u4ee4\u4f7f\u5176\u751f\u6548","title":"\u7f51\u7edc\u914d\u7f6e"},{"location":"linux/linux_shell/#shell_1","text":"","title":"shell\u811a\u672c"},{"location":"linux/linux_shell/#_5","text":"\u5efa\u7acb .sh \u540e\u7f00\u7684\u6587\u4ef6 chmod \u4fee\u6539\u6587\u4ef6\u6743\u9650 \u811a\u672c\u7b2c\u4e00\u884c #\uff01/bin/bash","title":"\u57fa\u672c\u8fc7\u7a0b"},{"location":"linux/linux_shell/#_6","text":"\u7528\u6237\u81ea\u5b9a\u4e49\u53d8\u91cf \u53d8\u91cf\u540d=\u503c ( \u7b49\u53f7\u65e0\u7a7a\u683c ) \u4f4d\u7f6e\u53c2\u6570 $0 $1.... \u9884\u5b9a\u4e49\u53d8\u91cf $# :\u547d\u4ee4\u884c\u53c2\u6570\u7684\u4e2a\u6570 $@ :\u5305\u542b\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\uff1a`$1$2$3.. $? :\u5305\u542b\u524d\u4e00\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001 $* :\u5305\u542b\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\uff1a $1$2$3.. $$ :\u5305\u542b\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0bID\u53f7 \u73af\u5883\u53d8\u91cf HOME , PATH \u7b49\u7b49","title":"\u53d8\u91cf"},{"location":"linux/linux_shell/#_7","text":"","title":"\u8fd0\u7b97"},{"location":"linux/linux_shell/#_8","text":"+ \uff0c - \uff0c \\* , / , %","title":"\u8fd0\u7b97\u7b26"},{"location":"linux/linux_shell/#_9","text":"expr \u4f8b\u5982 add=`expr $var1 + $var2`","title":"\u8fd0\u7b97\u547d\u4ee4"},{"location":"linux/linux_shell/#_10","text":"\u5b57\u7b26\u4e32 = :\u76f8\u7b49 \uff01= \uff1a\u4e0d\u7b49 -z :\u957f\u5ea6\u662f\u5426\u4e3a0 -n \uff1a\u957f\u5ea6\u662f\u5426\u4e0d\u4e3a0 \u6570\u5b57 -eq \uff1a\u7b49\u4e8e equal -ne : \u4e0d\u7b49\u4e8e not equal -gt \uff1a\u5927\u4e8e greater than -ge \uff1a\u5927\u4e8e\u7b49\u4e8e greater equal -lt \uff1a\u5c0f\u4e8e less than -le : \u5c0f\u4e8e\u7b49\u4e8e less epual","title":"\u5224\u65ad"},{"location":"linux/linux_shell/#_11","text":"${} :\u53d8\u91cf\u66ff\u6362 () \u547d\u4ee4\u7ec4\u3002\u62ec\u53f7\u4e2d\u7684\u547d\u4ee4\u5c06\u4f1a\u65b0\u5f00\u4e00\u4e2a\u5b50shell\u987a\u5e8f\u6267\u884c\uff0c\u6240\u4ee5\u62ec\u53f7\u4e2d\u7684\u53d8\u91cf\u4e0d\u80fd\u591f\u88ab\u811a\u672c\u4f59\u4e0b\u7684\u90e8\u5206\u4f7f\u7528\u3002\u62ec\u53f7\u4e2d\u591a\u4e2a\u547d\u4ee4\u4e4b\u95f4\u7528\u5206\u53f7\u9694\u5f00\uff0c\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u53ef\u4ee5\u6ca1\u6709\u5206\u53f7\uff0c\u5404\u547d\u4ee4\u548c\u62ec\u53f7\u4e4b\u95f4\u4e0d\u5fc5\u6709\u7a7a\u683c\u3002 \u547d\u4ee4\u66ff\u6362 \u7b49\u540c\u4e8e``\uff0cshell\u626b\u63cf\u4e00\u904d\u547d\u4ee4\u884c\uff0c\u53d1\u73b0\u4e86 $(cmd) \u7ed3\u6784\uff0c\u4fbf\u5c06$ (cmd) \u4e2d\u7684 cmd \u6267\u884c\u4e00\u6b21\uff0c\u5f97\u5230\u5176\u6807\u51c6\u8f93\u51fa\uff0c\u518d\u5c06\u6b64\u8f93\u51fa\u653e\u5230\u539f\u6765\u547d\u4ee4\u3002\u6709\u4e9bshell\u4e0d\u652f\u6301\uff0c\u5982 tcsh \u3002 \u7528\u4e8e\u521d\u59cb\u5316\u6570\u7ec4\u3002\u5982\uff1a array=(a b c d) (()) \u6574\u6570\u6269\u5c55\u3002\u8fd9\u79cd\u6269\u5c55\u8ba1\u7b97\u662f\u6574\u6570\u578b\u7684\u8ba1\u7b97\uff0c\u4e0d\u652f\u6301\u6d6e\u70b9\u578b\u3002((exp))\u7ed3\u6784\u6269\u5c55\u5e76\u8ba1\u7b97\u4e00\u4e2a\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u4e3a0\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u9000\u51fa\u72b6\u6001\u7801\u4e3a1\uff0c\u6216\u8005 \u662f\"\u5047\"\uff0c\u800c\u4e00\u4e2a\u975e\u96f6\u503c\u7684\u8868\u8fbe\u5f0f\u6240\u8fd4\u56de\u7684\u9000\u51fa\u72b6\u6001\u7801\u5c06\u4e3a0\uff0c\u6216\u8005\u662f\"true\"\u3002\u82e5\u662f\u903b\u8f91\u5224\u65ad\uff0c\u8868\u8fbe\u5f0fexp\u4e3a\u771f\u5219\u4e3a1,\u5047\u5219\u4e3a0\u3002\u5982 \uff08\uff082*3\uff09\uff09 \u53ea\u8981\u62ec\u53f7\u4e2d\u7684\u8fd0\u7b97\u7b26\u3001\u8868\u8fbe\u5f0f\u7b26\u5408C\u8bed\u8a00\u8fd0\u7b97\u89c4\u5219\uff0c\u90fd\u53ef\u7528\u5728 $((exp)) \u4e2d\uff0c\u751a\u81f3\u662f\u4e09\u76ee\u8fd0\u7b97\u7b26\u3002\u4f5c\u4e0d\u540c\u8fdb\u4f4d(\u5982\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236)\u8fd0\u7b97\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u5168\u90fd\u81ea\u52a8\u8f6c\u5316\u6210\u4e86\u5341\u8fdb\u5236\u3002\u5982\uff1a echo $((16#5f)) \u7ed3\u679c\u4e3a95 (16\u8fdb\u4f4d\u8f6c\u5341\u8fdb\u5236) \u5355\u7eaf\u7528 (( )) \u4e5f\u53ef\u91cd\u5b9a\u4e49\u53d8\u91cf\u503c\uff0c\u6bd4\u5982 a=5; ((a++)) \u53ef\u5c06 $a \u91cd\u5b9a\u4e49\u4e3a6 \u5e38\u7528\u4e8e\u7b97\u672f\u8fd0\u7b97\u6bd4\u8f83\uff0c\u53cc\u62ec\u53f7\u4e2d\u7684\u53d8\u91cf\u53ef\u4ee5\u4e0d\u4f7f\u7528$\u7b26\u53f7\u524d\u7f00\u3002\u62ec\u53f7\u5185\u652f\u6301\u591a\u4e2a\u8868\u8fbe\u5f0f\u7528\u9017\u53f7\u5206\u5f00\u3002 \u53ea\u8981\u62ec\u53f7\u4e2d\u7684\u8868\u8fbe\u5f0f\u7b26\u5408C\u8bed\u8a00\u8fd0\u7b97\u89c4\u5219,\u6bd4\u5982\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 for((i=0;i 5;i++)) [] bash \u7684\u5185\u90e8\u547d\u4ee4\uff0c[\u548ctest\u662f\u7b49\u540c\u7684\u3002\u5982\u679c\u6211\u4eec\u4e0d\u7528\u7edd\u5bf9\u8def\u5f84\u6307\u660e\uff0c\u901a\u5e38\u6211\u4eec\u7528\u7684\u90fd\u662fbash\u81ea\u5e26\u7684\u547d\u4ee4\u3002if/test\u7ed3\u6784\u4e2d\u7684\u5de6\u4e2d\u62ec\u53f7\u662f\u8c03\u7528test\u7684\u547d\u4ee4\u6807\u8bc6\uff0c\u53f3\u4e2d\u62ec\u53f7\u662f\u5173\u95ed\u6761\u4ef6\u5224\u65ad\u7684\u3002\u8fd9\u4e2a\u547d\u4ee4\u628a\u5b83\u7684\u53c2\u6570\u4f5c\u4e3a\u6bd4\u8f83\u8868\u8fbe\u5f0f\u6216\u8005\u4f5c\u4e3a\u6587\u4ef6\u6d4b\u8bd5\uff0c\u5e76\u4e14\u6839\u636e\u6bd4\u8f83\u7684\u7ed3\u679c\u6765\u8fd4\u56de\u4e00\u4e2a\u9000\u51fa\u72b6\u6001\u7801\u3002if/test\u7ed3\u6784\u4e2d\u5e76\u4e0d\u662f\u5fc5\u987b\u53f3\u4e2d\u62ec\u53f7\uff0c\u4f46\u662f\u65b0\u7248\u7684Bash\u4e2d\u8981\u6c42\u5fc5\u987b\u8fd9\u6837\u3002 Test\u548c[]\u4e2d\u53ef\u7528\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\u53ea\u6709==\u548c!=\uff0c\u4e24\u8005\u90fd\u662f\u7528\u4e8e\u5b57\u7b26\u4e32\u6bd4\u8f83\u7684\uff0c\u4e0d\u53ef\u7528\u4e8e\u6574\u6570\u6bd4\u8f83\uff0c\u6574\u6570\u6bd4\u8f83\u53ea\u80fd\u4f7f\u7528-eq\uff0c-gt\u8fd9\u79cd\u5f62\u5f0f\u3002\u65e0\u8bba\u662f\u5b57\u7b26\u4e32\u6bd4\u8f83\u8fd8\u662f\u6574\u6570\u6bd4\u8f83\u90fd\u4e0d\u652f\u6301\u5927\u4e8e\u53f7\u5c0f\u4e8e\u53f7\u3002\u5982\u679c\u5b9e\u5728\u60f3\u7528\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u6bd4\u8f83\u53ef\u4ee5\u4f7f\u7528\u8f6c\u4e49\u5f62\u5f0f\uff0c\u5982\u679c\u6bd4\u8f83\"ab\"\u548c\"bc\"\uff1a[ ab \\ bc ]\uff0c\u7ed3\u679c\u4e3a\u771f\uff0c\u4e5f\u5c31\u662f\u8fd4\u56de\u72b6\u6001\u4e3a0\u3002[ ]\u4e2d\u7684\u903b\u8f91\u4e0e\u548c\u903b\u8f91\u6216\u4f7f\u7528-a \u548c-o \u8868\u793a\u3002 \u5b57\u7b26\u8303\u56f4\u3002\u7528\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u63cf\u8ff0\u4e00\u4e2a\u5339\u914d\u7684\u5b57\u7b26\u8303\u56f4\u3002\u4f5c\u4e3atest\u7528\u9014\u7684\u4e2d\u62ec\u53f7\u5185\u4e0d\u80fd\u4f7f\u7528\u6b63\u5219\u3002 \u5728\u4e00\u4e2aarray \u7ed3\u6784\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4e2d\u62ec\u53f7\u7528\u6765\u5f15\u7528\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u7f16\u53f7\u3002 [[ ]] [[ \u662f bash \u7a0b\u5e8f\u8bed\u8a00\u7684\u5173\u952e\u5b57\u3002\u5e76\u4e0d\u662f\u4e00\u4e2a\u547d\u4ee4\uff0c [[ ]] \u7ed3\u6784\u6bd4 [ ] \u7ed3\u6784\u66f4\u52a0\u901a\u7528\u3002\u5728 [[ \u548c ]] \u4e4b\u95f4\u6240\u6709\u7684\u5b57\u7b26\u90fd\u4e0d\u4f1a\u53d1\u751f\u6587\u4ef6\u540d\u6269\u5c55\u6216\u8005\u5355\u8bcd\u5206\u5272\uff0c\u4f46\u662f\u4f1a\u53d1\u751f\u53c2\u6570\u6269\u5c55\u548c\u547d\u4ee4\u66ff\u6362\u3002 \u652f\u6301\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u5339\u914d\uff0c\u4f7f\u7528 =~ \u64cd\u4f5c\u7b26\u65f6\u751a\u81f3\u652f\u6301shell\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u5b57\u7b26\u4e32\u6bd4\u8f83\u65f6\u53ef\u4ee5\u628a\u53f3\u8fb9\u7684\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u5f0f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 [[ hello == hell? ]] \uff0c\u7ed3\u679c\u4e3a\u771f\u3002 [[ ]] \u4e2d\u5339\u914d\u5b57\u7b26\u4e32\u6216\u901a\u914d\u7b26\uff0c\u4e0d\u9700\u8981\u5f15\u53f7\u3002 \u4f7f\u7528 [[ ... ]] \u6761\u4ef6\u5224\u65ad\u7ed3\u6784\uff0c\u800c\u4e0d\u662f [ ... ] \uff0c\u80fd\u591f\u9632\u6b62\u811a\u672c\u4e2d\u7684\u8bb8\u591a\u903b\u8f91\u9519\u8bef\u3002\u6bd4\u5982\uff0c ,||, , \u64cd\u4f5c\u7b26\u80fd\u591f\u6b63\u5e38\u5b58\u5728\u4e8e [[ ]] \u6761\u4ef6\u5224\u65ad\u7ed3\u6784\u4e2d\uff0c\u4f46\u662f\u5982\u679c\u51fa\u73b0\u5728 [ ] \u7ed3\u6784\u4e2d\u7684\u8bdd\uff0c\u4f1a\u62a5\u9519\u3002\u6bd4\u5982\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 if [[ $a != 1 $a != 2 ]] , \u5982\u679c\u4e0d\u9002\u7528\u53cc\u62ec\u53f7, \u5219\u4e3a if [ $a -ne 1] [ $a != 2 ] \u6216\u8005 if [ $a -ne 1 -a $a != 2 ] \u3002 bash\u628a\u53cc\u4e2d\u62ec\u53f7\u4e2d\u7684\u8868\u8fbe\u5f0f\u770b\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u9000\u51fa\u72b6\u6001\u7801\u3002","title":"\u5e38\u89c1\u7b26\u53f7\u533a\u522b"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/","text":"\u5f00\u53d1\u73af\u5883\u642d\u5efa \u7f16\u8bd1\u5de5\u5177 \u7f16\u8bd1\u7684\u4ee3\u7801\u9700\u8981\u5728\u5355\u677f\u4e0a\u8fd0\u884c\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u3002\u53ef\u4ee5\u4f7f\u7528 crosstool \u5236\u4f5c\u3002\u5236\u4f5c\u6b65\u9aa4 ^ 1 \u5f85\u7eed\u3002\u82e5\u5df2\u7ecf\u5236\u4f5c\u597d\u7f16\u8bd1\u5de5\u5177\uff0c\u5982 crosstool-gcc-4.9.4 ,\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf export PATH=$PATH:/opt/crosstool-gcc-4.9.4/bin ,\u7acb\u5373\u751f\u6548 \u4fee\u6539 ~/.bashrc , \u6dfb\u52a0 export PATH=$PATH:/opt/crosstool-gcc-4.9.4/bin ,\u91cd\u542f\u7ec8\u7aef\u6709\u6548 \u4fee\u6539 etc/profile ,\u6dfb\u52a0 export PATH=$PATH:/opt/crosstool-gcc-4.9.4/bin ,\u91cd\u65b0\u767b\u5f55\u6709\u6548 \u670d\u52a1\u5b89\u88c5 \u7f51\u7edc\u8bbe\u7f6e \u865a\u62df\u673a\u8bbe\u7f6e \u7f16\u8f91- \u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668- \u66f4\u6539\u8bbe\u7f6e- VMnet0- \u6865\u63a5\u5230\u4e0a\u7f51\u7684\u7f51\u5361 \u4ee5\u592a\u7f51\u5361\u8bbe\u7f6e\u4e3a100M\u5168\u53cc\u5de5\uff0c\u56e0\u4e3a\u5f00\u53d1\u677f\u652f\u6301\u7684\u4e3a100M linux \u8bbe\u7f6e \u901a\u8fc7\u4f7f\u7528\u754c\u9762\uff0c\u5728\u8bbe\u7f6e- \u7f51\u7edc\u8fde\u63a5\u4e2d\u8bbe\u7f6e\u7f51\u7edc\u6a21\u5f0f\u4ee5\u53caIP\u3002\u6216\u8005\u901a\u8fc7 /etc/network/interfaces \u8bbe\u7f6e\uff0c\u6700\u7ec8\u5e94\u8fbe\u5230\u53ef\u80fd\u4e0a\u7f51\u7684\u76ee\u7684 \u5f00\u53d1\u677f\u8bbe\u7f6e \u5f00\u53d1\u677f\u4e0elinux\u7684\u7f51\u7edcIP\u8bbe\u7f6e\u4e3a\u540c\u4e00\u7f51\u6bb5\uff0c\u5047\u5b9a\u90fd\u662f 192.168.1.X \u8bbe\u7f6e\u547d\u4ee4 print //\u67e5\u770b\u73af\u5883\u53d8\u91cf set gatewayip 192.168.1.1 set ipaddr 192.168.1.3 set netmark 255.255.255.0 set serverip 192.168.1.5 //\u670d\u52a1\u5668IP save //\u4fdd\u5b58 ---------------- ping 192.168.1.5 //\u82e5\u8fd4\u56de host 192.168.1.5 is alive \u5219\u8868\u660e\u6210\u529f\u8054\u901a TFTP\u670d\u52a1\u5668\u5b89\u88c5 \u5b89\u88c5\u8f6f\u4ef6 apt-get install tftpd-hpa #\u5b89\u88c5\u670d\u52a1\u5668 apt-get install tftp-hpa #\u5b89\u88c5\u5ba2\u6237\u7aef \u4fee\u6539\u914d\u7f6e 1 # /etc/default/tftpd-hpa 2 TFTP_USERNAME= tftp 3 TFTP_DIRECTORY= /tftpboot //\u6539\u6210\u4f60\u60f3\u8981\u7684\u90a3\u4e2a\u8def\u5f84 4 TFTP_ADDRESS= 0.0.0.0:69 5 TFTP_OPTIONS= -l -c -s //\u8fd9\u91cc\u662f\u9009\u9879 // \u91cd\u542f\u670d\u52a1 1 sudo /etc/init.d/xinetd reload 2 sudo /etc/init.d/xinetd restart \u6d4b\u8bd5 ```shell netstat -a|grep tftp # \u662f\u5426\u542f\u52a8 udp 0 0 :tftp :* #\u8868\u793a\u542f\u52a8 ``` \u6d4b\u8bd5\u4e0a\u4f20\u548c\u4e0b\u8f7d shell cd /home/guo/test # \u9009\u62e9\u4e00\u4e2a\u8def\u5f84\uff0c\u4e0d\u80fd\u4e3atftp\u670d\u52a1\u5668\u6839\u8def\u5f84 touch file.c # \u521b\u5efa\u4e00\u4e2a\u8981\u4e0a\u4f20\u7684\u6587\u4ef6 tftp 127.0.0.1 # \u5f00\u542f\u670d\u52a1 tftp put file.c # \u4e0a\u4f20\u6587\u4ef6\uff0c\u7136\u540e\u53bbtfp\u670d\u52a1\u5668\u7684\u8def\u5f84\u4e0b\u8f7d\u67e5\u770b\u662f\u5426\u6709\u6b64\u6587\u4ef6 NFS\u670d\u52a1\u5b89\u88c5 \u5b89\u88c5 shell sudo qpt-get install nfs-kernel-server # \u5b89\u88c5 mkdir /home/guo/rootfs # \u521b\u5efanfs\u670d\u52a1\u7684\u6839\u76ee\u5f55 \u914d\u7f6e shell sudo vi /etc/exports /home/guo/rootfs *(rw,sync,no_subtree_check,no_root_squash) # \u6dfb\u52a0\u6b64\u5185\u5bb9 # *:\u6240\u6709\u7528\u6237 # rw: \u53ef\u8bfb\u53ef\u5199 # sync: \u540c\u6b65 # no_subtree: \u4e0d\u68c0\u67e5\u5b50\u76ee\u5f55 # no_root_squash: \u5982\u679c\u5ba2\u6237\u7aef\u662froot\uff0c\u5bf9\u8be5\u76ee\u5f55\u5177\u6709root\u6743\u9650 sudo service nfs-kernel-server restart \u6d4b\u8bd5 shell sudo mount -t nfs 127.0.0.1:/home/guo/rootfs /mnt #\u6302\u8f7d\u5230/mnt ls /mnt # \u67e5\u770b\u662f\u5426\u4e0erootfs\u5185\u5bb9\u4e00\u81f4 umount /mnt #\u63a5\u89e6\u6302\u8f7d \u5f00\u53d1\u677f\u4f7f\u7528NFS uboot\u8bbe\u7f6e set bootargs root=/dev/nfs nfsroot=192.168.1.5:/home/guo/rootfs rw console=/dev/ttySAC0,115200 init=/linuxrc ip=192.168.1.3 # root=/dev/nfs \u4f7f\u7528nfs\u670d\u52a1 # nfsroot=192.168.1.5:/home/guo/rootfs \u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u8def\u5f84 IP \u662fUbuntu\u7684IP # rw \u53ef\u8bfb\u53ef\u5199 # console=/dev/ttySAC0,115200 \u5185\u6838\u542f\u52a8\u4f7f\u7528\u54ea\u4e2a\u4e32\u53e3\u4f5c\u4e3a\u8c03\u8bd5\u53e3 # init=/linuxrc \u5185\u6838\u542f\u52a8\u4e4b\u540e\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u5e94\u7684\u7a0b\u5e8f # ip=192.168.1.3 \u5185\u6838\u542f\u52a8\u4e4b\u540e\u7684ip\u5730\u5740 \u4e5f\u5c31\u662f\u5f00\u53d1\u677f\u7684IP\u5730\u5740","title":"\u5f00\u53d1\u73af\u5883\u642d\u5efa"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#_1","text":"","title":"\u5f00\u53d1\u73af\u5883\u642d\u5efa"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#_2","text":"\u7f16\u8bd1\u7684\u4ee3\u7801\u9700\u8981\u5728\u5355\u677f\u4e0a\u8fd0\u884c\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u3002\u53ef\u4ee5\u4f7f\u7528 crosstool \u5236\u4f5c\u3002\u5236\u4f5c\u6b65\u9aa4 ^ 1 \u5f85\u7eed\u3002\u82e5\u5df2\u7ecf\u5236\u4f5c\u597d\u7f16\u8bd1\u5de5\u5177\uff0c\u5982 crosstool-gcc-4.9.4 ,\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf export PATH=$PATH:/opt/crosstool-gcc-4.9.4/bin ,\u7acb\u5373\u751f\u6548 \u4fee\u6539 ~/.bashrc , \u6dfb\u52a0 export PATH=$PATH:/opt/crosstool-gcc-4.9.4/bin ,\u91cd\u542f\u7ec8\u7aef\u6709\u6548 \u4fee\u6539 etc/profile ,\u6dfb\u52a0 export PATH=$PATH:/opt/crosstool-gcc-4.9.4/bin ,\u91cd\u65b0\u767b\u5f55\u6709\u6548","title":"\u7f16\u8bd1\u5de5\u5177"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#_3","text":"","title":"\u670d\u52a1\u5b89\u88c5"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#_4","text":"","title":"\u7f51\u7edc\u8bbe\u7f6e"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#_5","text":"\u7f16\u8f91- \u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668- \u66f4\u6539\u8bbe\u7f6e- VMnet0- \u6865\u63a5\u5230\u4e0a\u7f51\u7684\u7f51\u5361 \u4ee5\u592a\u7f51\u5361\u8bbe\u7f6e\u4e3a100M\u5168\u53cc\u5de5\uff0c\u56e0\u4e3a\u5f00\u53d1\u677f\u652f\u6301\u7684\u4e3a100M","title":"\u865a\u62df\u673a\u8bbe\u7f6e"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#linux","text":"\u901a\u8fc7\u4f7f\u7528\u754c\u9762\uff0c\u5728\u8bbe\u7f6e- \u7f51\u7edc\u8fde\u63a5\u4e2d\u8bbe\u7f6e\u7f51\u7edc\u6a21\u5f0f\u4ee5\u53caIP\u3002\u6216\u8005\u901a\u8fc7 /etc/network/interfaces \u8bbe\u7f6e\uff0c\u6700\u7ec8\u5e94\u8fbe\u5230\u53ef\u80fd\u4e0a\u7f51\u7684\u76ee\u7684","title":"linux \u8bbe\u7f6e"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#_6","text":"\u5f00\u53d1\u677f\u4e0elinux\u7684\u7f51\u7edcIP\u8bbe\u7f6e\u4e3a\u540c\u4e00\u7f51\u6bb5\uff0c\u5047\u5b9a\u90fd\u662f 192.168.1.X \u8bbe\u7f6e\u547d\u4ee4 print //\u67e5\u770b\u73af\u5883\u53d8\u91cf set gatewayip 192.168.1.1 set ipaddr 192.168.1.3 set netmark 255.255.255.0 set serverip 192.168.1.5 //\u670d\u52a1\u5668IP save //\u4fdd\u5b58 ---------------- ping 192.168.1.5 //\u82e5\u8fd4\u56de host 192.168.1.5 is alive \u5219\u8868\u660e\u6210\u529f\u8054\u901a","title":"\u5f00\u53d1\u677f\u8bbe\u7f6e"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#tftp","text":"\u5b89\u88c5\u8f6f\u4ef6 apt-get install tftpd-hpa #\u5b89\u88c5\u670d\u52a1\u5668 apt-get install tftp-hpa #\u5b89\u88c5\u5ba2\u6237\u7aef \u4fee\u6539\u914d\u7f6e 1 # /etc/default/tftpd-hpa 2 TFTP_USERNAME= tftp 3 TFTP_DIRECTORY= /tftpboot //\u6539\u6210\u4f60\u60f3\u8981\u7684\u90a3\u4e2a\u8def\u5f84 4 TFTP_ADDRESS= 0.0.0.0:69 5 TFTP_OPTIONS= -l -c -s //\u8fd9\u91cc\u662f\u9009\u9879 // \u91cd\u542f\u670d\u52a1 1 sudo /etc/init.d/xinetd reload 2 sudo /etc/init.d/xinetd restart \u6d4b\u8bd5 ```shell netstat -a|grep tftp # \u662f\u5426\u542f\u52a8 udp 0 0 :tftp :* #\u8868\u793a\u542f\u52a8 ``` \u6d4b\u8bd5\u4e0a\u4f20\u548c\u4e0b\u8f7d shell cd /home/guo/test # \u9009\u62e9\u4e00\u4e2a\u8def\u5f84\uff0c\u4e0d\u80fd\u4e3atftp\u670d\u52a1\u5668\u6839\u8def\u5f84 touch file.c # \u521b\u5efa\u4e00\u4e2a\u8981\u4e0a\u4f20\u7684\u6587\u4ef6 tftp 127.0.0.1 # \u5f00\u542f\u670d\u52a1 tftp put file.c # \u4e0a\u4f20\u6587\u4ef6\uff0c\u7136\u540e\u53bbtfp\u670d\u52a1\u5668\u7684\u8def\u5f84\u4e0b\u8f7d\u67e5\u770b\u662f\u5426\u6709\u6b64\u6587\u4ef6","title":"TFTP\u670d\u52a1\u5668\u5b89\u88c5"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#nfs","text":"\u5b89\u88c5 shell sudo qpt-get install nfs-kernel-server # \u5b89\u88c5 mkdir /home/guo/rootfs # \u521b\u5efanfs\u670d\u52a1\u7684\u6839\u76ee\u5f55 \u914d\u7f6e shell sudo vi /etc/exports /home/guo/rootfs *(rw,sync,no_subtree_check,no_root_squash) # \u6dfb\u52a0\u6b64\u5185\u5bb9 # *:\u6240\u6709\u7528\u6237 # rw: \u53ef\u8bfb\u53ef\u5199 # sync: \u540c\u6b65 # no_subtree: \u4e0d\u68c0\u67e5\u5b50\u76ee\u5f55 # no_root_squash: \u5982\u679c\u5ba2\u6237\u7aef\u662froot\uff0c\u5bf9\u8be5\u76ee\u5f55\u5177\u6709root\u6743\u9650 sudo service nfs-kernel-server restart \u6d4b\u8bd5 shell sudo mount -t nfs 127.0.0.1:/home/guo/rootfs /mnt #\u6302\u8f7d\u5230/mnt ls /mnt # \u67e5\u770b\u662f\u5426\u4e0erootfs\u5185\u5bb9\u4e00\u81f4 umount /mnt #\u63a5\u89e6\u6302\u8f7d","title":"NFS\u670d\u52a1\u5b89\u88c5"},{"location":"linux/\u5f00\u53d1\u73af\u5883\u642d\u5efa/#nfs_1","text":"uboot\u8bbe\u7f6e set bootargs root=/dev/nfs nfsroot=192.168.1.5:/home/guo/rootfs rw console=/dev/ttySAC0,115200 init=/linuxrc ip=192.168.1.3 # root=/dev/nfs \u4f7f\u7528nfs\u670d\u52a1 # nfsroot=192.168.1.5:/home/guo/rootfs \u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u8def\u5f84 IP \u662fUbuntu\u7684IP # rw \u53ef\u8bfb\u53ef\u5199 # console=/dev/ttySAC0,115200 \u5185\u6838\u542f\u52a8\u4f7f\u7528\u54ea\u4e2a\u4e32\u53e3\u4f5c\u4e3a\u8c03\u8bd5\u53e3 # init=/linuxrc \u5185\u6838\u542f\u52a8\u4e4b\u540e\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u5e94\u7684\u7a0b\u5e8f # ip=192.168.1.3 \u5185\u6838\u542f\u52a8\u4e4b\u540e\u7684ip\u5730\u5740 \u4e5f\u5c31\u662f\u5f00\u53d1\u677f\u7684IP\u5730\u5740","title":"\u5f00\u53d1\u677f\u4f7f\u7528NFS"},{"location":"linux/\u6570\u636e\u7ed3\u6784/","text":"\u94fe\u8868 \u5355\u94fe\u8868 \u5355\u94fe\u8868\u6570\u636e\u7ed3\u6784 typedef int elem_type; typedef struct s_list{ elem_type data; struct s_list *next; } s_list_node,*s_list_pt; \u5305\u542b\u6570\u636e\u548c\u8282\u70b9\u6307\u9488 \u5934\u63d2\u6cd5\u548c\u5c3e\u63d2\u6cd5 \u5934\u63d2\u6cd5 int s_list_head_insert(s_list_pt p_head, elem_type data) { if(NULL == p_head) { return -1; } s_list_pt p_node = s_list_node_create(); if(NULL == p_node) { return -2; } p_node- data = data; /*\u5934\u63d2\u6cd5*/ p_node- next = p_head- next; p_head- next = p_node; } \u4e0e\u94fe\u8868\u7684\u63d2\u5165\u4e00\u6837\uff0c\u5148\u83b7\u53d6\u63d2\u5165\u4f4d\u7f6e\u7684\u6307\u9488 p_node- next = p_head- next; \uff0c\u7136\u540e\u5c06\u6b64\u8282\u70b9\u6307\u9488\u8d4b\u7ed9\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684 next \u6307\u9488\uff0c p_head- next = p_node; \u5c3e\u63d2\u6cd5 int s_list_tail_insert(s_list_pt p_head, elem_type data) { s_list_pt p_index = NULL; s_list_pt p_node = NULL; if(p_head == NULL) { return -1; } p_index = p_head; while(p_index- next) { p_index = p_index- next; } /*\u627e\u5230\u94fe\u8868\u7684\u672b\u5c3e*/ p_node = s_list_node_create(); if(p_node == NULL){ return -1; } p_node- data = data; p_index- next = p_node; return 0; } \u5c3e\u63d2\u6cd5\u9700\u8981\u904d\u5386\u5230\u94fe\u8868\u7684\u672b\u7aef\uff0c\u5c06\u8282\u70b9\u63d2\u5165\u5373\u53ef \u94fe\u8868\u9006\u7f6e int s_list_reverse(s_list_pt p_head) { s_list_pt ptr = NULL, cur = NULL; ptr = p_head- next; p_head- next = NULL; while (ptr){ cur = ptr; ptr = ptr- next; /*\u5934\u63d2\u6cd5*/ cur- next = p_head- next; p_head- next = cur; } return 0; } \u9996\u5148\u65ad\u5f00\u5934\u8282\u70b9\u548c\u9996\u8282\u70b9\u7684\u94fe\u63a5\uff0c\u7136\u540e\u9700\u8981\u4e24\u4e2a\u6307\u9488\uff0c ptr \u4f5c\u4e3a\u6307\u9488\u7d22\u5f15\uff0c\u5411\u540e\u904d\u5386\u94fe\u8868\uff0c cur \u4fdd\u5b58\u5f53\u524d\u6307\u9488\uff0c\u6bcf\u6b21\u7d22\u5f15\u5c06 cur \u6307\u9488\u4f7f\u7528\u5934\u63d2\u6cd5 \u63d2\u5165\u5934\u7ed3\u70b9\u3002 \u6b64\u65b9\u6cd5\u5f15\u7533\u51fa \u94fe\u8868\u6392\u5e8f \u53cc\u94fe\u8868 \u94fe\u8868\u63d2\u5165 \u94fe\u8868\u63d2\u5165\u6ce8\u610f\uff0c\u5e94\u8be5\u5148\u586b\u5145\u65b0\u8282\u70b9\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u7136\u540e\u65ad\u5f00\u539f\u8282\u70b9\uff0c\u63d2\u5165\u65b0\u8282\u70b9 \u53c2\u8003linux\u7684 list.h \u4ee3\u7801 /** * list_add - add a new entry * @new: new entry to be added * @head: list head to add it after * * Insert a new entry after the specified head. * This is good for implementing stacks. */ static inline void list_add(struct list_head *new, struct list_head *head) { __list_add(new, head, head- next); } static inline void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next) { next- prev = new; //g:\u540e\u9762\u8282\u70b9\u7684\u524d\u9a71\u8bbe\u4e3a new new- next = next; //g:new\u8282\u70b9\u8bbe\u7f6e\u524d\u9a71\u540e\u7ee7 new- prev = prev; prev- next = new; //g:\u524d\u9762\u8282\u70b9\u7684\u540e\u7ee7\uff08\u5fc5\u987b\u653e\u5728 next- prev = new \u4e4b\u540e\uff09 } \u6808 \u6808\u7684\u7279\u6027\u4e3a\u5148\u8fdb\u540e\u51fa\uff0c\u5b9e\u73b0\u6808\u53ef\u4ee5\u7528\u987a\u5e8f\u8868\u548c\u94fe\u5f0f\u8868\u3002\u987a\u5e8f\u8868\u5b9e\u73b0\u6808\u9700\u8981\u6709\u6807\u8bb0\u6808\u9876\u7684\u6307\u9488\u3002\u94fe\u5f0f\u8868\u5b9e\u73b0\u6808\u7684\u601d\u8def\u662f\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u63d2\u5165\u53d6\u51fa\uff0c\u6bd4\u5982\u5934\u63d2\u6cd5\u63d2\u5165\u7136\u540e\u53d6\u51fa\uff0c\u4fbf\u5b9e\u73b0\u4e86\u5148\u8fdb\u540e\u51fa\u3002 \u961f\u5217 \u987a\u5e8f //\u5faa\u73af\u961f\u5217 typedef int elem_type; typedef struct queue{ elem_type queue[QUEUE_MAIX_SIZE]; unsigned int rear; unsigned int front; }seq_queue_t; \u5165\u961f\u79fb\u52a8rear\uff0c\u51fa\u961f\u79fb\u52a8front rear front \u7c7b\u578b\u4e3a unsigned int \u5f53\u6ea2\u51fa\u65f6\u56de\u5f520\uff0c\u4f9d\u7136\u6ee1\u8db3\u6761\u4ef6\uff0c\u5b9e\u9645\u8981\u7528\u7684\u6570\u7ec4\u7d22\u5f15 idnex = front % QUEUE_MAIX_SIZE rear = front \u4e3a\u7a7a\uff0c (rear + 1) % QUEUE_MAIX_SIZE= front % QUEUE_MAIX_SIZE \u4e3a\u6ee1 \u94fe\u5f0f typedef int elem_type; typedef struct node { elem_type data; struct node *next; } link_list_t; typedef struct queue{ link_list_t *front; link_list_t *rear; }link_queue_t; NOTE : front \u6307\u5411\u94fe\u8868\u7684\u5934\u7ed3\u70b9\uff0c\u51fa\u961f\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5 free \uff0c rear \u6307\u5411\u94fe\u8868\u7684\u5c3e\u8282\u70b9\uff0c\u5165\u961f\u65f6\u91c7\u7528\u5c3e\u63d2\u6cd5\u3002 int link_queue_input(link_queue_t *p_queue, elem_type data) { if(NULL == p_queue) { return -1; } link_list_t * p_node = (link_list_t*)malloc(sizeof(link_list_t)); if (p_node == NULL ){ return -1; } p_node- data = data; p_node- next = NULL; p_queue- rear- next = p_node; p_queue- rear = p_node; return 0; } int link_queue_output(link_queue_t *p_queue, elem_type *data) { link_list_t *p_temp = NULL; if(link_queue_is_empty(p_queue)) { return -1; } p_temp = p_queue- front- next; *data = p_temp- data; p_queue- front- next = p_temp- next; if (p_temp != NULL){ free(p_temp); p_temp = NULL; } return 0; } \u6811 \u5b8c\u5168\u4e8c\u53c9\u6811 \u521b\u5efa btree_t* binary_tree_create(int cur, int node_num) { btree_t *p_node = (btree_t*)malloc(sizeof(btree_t)); if(NULL == p_node) { return NULL; } p_node- data = cur; if (2 * cur = node_num) { p_node- lchild = binary_tree_create(2 * cur, node_num); } else { p_node- lchild = NULL; } if (2 * cur + 1 = node_num) { p_node- rchild = binary_tree_create(2 * cur + 1, node_num); } else { p_node- rchild = NULL; } return p_node; } \u904d\u5386 \u524d\u5e8f ```c void pre_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } printf(\"%d,\",p_node- data); pre_order_traverse(p_node- lchild); pre_order_traverse(p_node- rchild); } ``` \u4e2d\u5e8f c void in_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } pre_order_traverse(p_node- lchild); printf(\"%d,\",p_node- data); pre_order_traverse(p_node- rchild); } \u540e\u5e8f ```c void post_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } pre_order_traverse(p_node- lchild); pre_order_traverse(p_node- rchild); printf(\"%d,\",p_node- data); } ``` \u5c42\u5e8f ```c void lever_order_traverse(btree_t p_node) { //\u6309\u7167\u6839\u5de6\u53f3\u7684\u987a\u5e8f\u5165\u961f btree_t p_index = NULL; seq_queue_t p_queue = seq_queue_create(); if(NULL != p_node) { seq_queue_input(p_queue, p_node); } while (!seq_queue_is_empty(p_queue)) { / \u51fa\u961f \u5f00\u59cb\u904d\u5386 */ seq_queue_output(p_queue, p_index); if(p_index- lchild != NULL) { seq_queue_input(p_queue, p_index- lchild); } if(p_index- rchild != NULL) { seq_queue_input(p_queue,p_index- rchild); } printf(\"%d,\",p_index- data); } printf(\"\\n-----------\\n\"); } ``` \u4e8c\u53c9\u6811\u7684\u521b\u5efa\u548c\u904d\u5386\u4e3b\u8981\u4f7f\u7528\u4e86\u9012\u5f52\u7684\u601d\u60f3\u3002","title":"\u94fe\u8868"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_1","text":"","title":"\u94fe\u8868"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_2","text":"","title":"\u5355\u94fe\u8868"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_3","text":"typedef int elem_type; typedef struct s_list{ elem_type data; struct s_list *next; } s_list_node,*s_list_pt; \u5305\u542b\u6570\u636e\u548c\u8282\u70b9\u6307\u9488","title":"\u5355\u94fe\u8868\u6570\u636e\u7ed3\u6784"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_4","text":"","title":"\u5934\u63d2\u6cd5\u548c\u5c3e\u63d2\u6cd5"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_5","text":"int s_list_head_insert(s_list_pt p_head, elem_type data) { if(NULL == p_head) { return -1; } s_list_pt p_node = s_list_node_create(); if(NULL == p_node) { return -2; } p_node- data = data; /*\u5934\u63d2\u6cd5*/ p_node- next = p_head- next; p_head- next = p_node; } \u4e0e\u94fe\u8868\u7684\u63d2\u5165\u4e00\u6837\uff0c\u5148\u83b7\u53d6\u63d2\u5165\u4f4d\u7f6e\u7684\u6307\u9488 p_node- next = p_head- next; \uff0c\u7136\u540e\u5c06\u6b64\u8282\u70b9\u6307\u9488\u8d4b\u7ed9\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684 next \u6307\u9488\uff0c p_head- next = p_node;","title":"\u5934\u63d2\u6cd5"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_6","text":"int s_list_tail_insert(s_list_pt p_head, elem_type data) { s_list_pt p_index = NULL; s_list_pt p_node = NULL; if(p_head == NULL) { return -1; } p_index = p_head; while(p_index- next) { p_index = p_index- next; } /*\u627e\u5230\u94fe\u8868\u7684\u672b\u5c3e*/ p_node = s_list_node_create(); if(p_node == NULL){ return -1; } p_node- data = data; p_index- next = p_node; return 0; } \u5c3e\u63d2\u6cd5\u9700\u8981\u904d\u5386\u5230\u94fe\u8868\u7684\u672b\u7aef\uff0c\u5c06\u8282\u70b9\u63d2\u5165\u5373\u53ef","title":"\u5c3e\u63d2\u6cd5"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_7","text":"int s_list_reverse(s_list_pt p_head) { s_list_pt ptr = NULL, cur = NULL; ptr = p_head- next; p_head- next = NULL; while (ptr){ cur = ptr; ptr = ptr- next; /*\u5934\u63d2\u6cd5*/ cur- next = p_head- next; p_head- next = cur; } return 0; } \u9996\u5148\u65ad\u5f00\u5934\u8282\u70b9\u548c\u9996\u8282\u70b9\u7684\u94fe\u63a5\uff0c\u7136\u540e\u9700\u8981\u4e24\u4e2a\u6307\u9488\uff0c ptr \u4f5c\u4e3a\u6307\u9488\u7d22\u5f15\uff0c\u5411\u540e\u904d\u5386\u94fe\u8868\uff0c cur \u4fdd\u5b58\u5f53\u524d\u6307\u9488\uff0c\u6bcf\u6b21\u7d22\u5f15\u5c06 cur \u6307\u9488\u4f7f\u7528\u5934\u63d2\u6cd5 \u63d2\u5165\u5934\u7ed3\u70b9\u3002 \u6b64\u65b9\u6cd5\u5f15\u7533\u51fa \u94fe\u8868\u6392\u5e8f","title":"\u94fe\u8868\u9006\u7f6e"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_8","text":"","title":"\u53cc\u94fe\u8868"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_9","text":"\u94fe\u8868\u63d2\u5165\u6ce8\u610f\uff0c\u5e94\u8be5\u5148\u586b\u5145\u65b0\u8282\u70b9\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u7136\u540e\u65ad\u5f00\u539f\u8282\u70b9\uff0c\u63d2\u5165\u65b0\u8282\u70b9 \u53c2\u8003linux\u7684 list.h \u4ee3\u7801 /** * list_add - add a new entry * @new: new entry to be added * @head: list head to add it after * * Insert a new entry after the specified head. * This is good for implementing stacks. */ static inline void list_add(struct list_head *new, struct list_head *head) { __list_add(new, head, head- next); } static inline void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next) { next- prev = new; //g:\u540e\u9762\u8282\u70b9\u7684\u524d\u9a71\u8bbe\u4e3a new new- next = next; //g:new\u8282\u70b9\u8bbe\u7f6e\u524d\u9a71\u540e\u7ee7 new- prev = prev; prev- next = new; //g:\u524d\u9762\u8282\u70b9\u7684\u540e\u7ee7\uff08\u5fc5\u987b\u653e\u5728 next- prev = new \u4e4b\u540e\uff09 }","title":"\u94fe\u8868\u63d2\u5165"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_10","text":"\u6808\u7684\u7279\u6027\u4e3a\u5148\u8fdb\u540e\u51fa\uff0c\u5b9e\u73b0\u6808\u53ef\u4ee5\u7528\u987a\u5e8f\u8868\u548c\u94fe\u5f0f\u8868\u3002\u987a\u5e8f\u8868\u5b9e\u73b0\u6808\u9700\u8981\u6709\u6807\u8bb0\u6808\u9876\u7684\u6307\u9488\u3002\u94fe\u5f0f\u8868\u5b9e\u73b0\u6808\u7684\u601d\u8def\u662f\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u63d2\u5165\u53d6\u51fa\uff0c\u6bd4\u5982\u5934\u63d2\u6cd5\u63d2\u5165\u7136\u540e\u53d6\u51fa\uff0c\u4fbf\u5b9e\u73b0\u4e86\u5148\u8fdb\u540e\u51fa\u3002","title":"\u6808"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_11","text":"","title":"\u961f\u5217"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_12","text":"//\u5faa\u73af\u961f\u5217 typedef int elem_type; typedef struct queue{ elem_type queue[QUEUE_MAIX_SIZE]; unsigned int rear; unsigned int front; }seq_queue_t; \u5165\u961f\u79fb\u52a8rear\uff0c\u51fa\u961f\u79fb\u52a8front rear front \u7c7b\u578b\u4e3a unsigned int \u5f53\u6ea2\u51fa\u65f6\u56de\u5f520\uff0c\u4f9d\u7136\u6ee1\u8db3\u6761\u4ef6\uff0c\u5b9e\u9645\u8981\u7528\u7684\u6570\u7ec4\u7d22\u5f15 idnex = front % QUEUE_MAIX_SIZE rear = front \u4e3a\u7a7a\uff0c (rear + 1) % QUEUE_MAIX_SIZE= front % QUEUE_MAIX_SIZE \u4e3a\u6ee1","title":"\u987a\u5e8f"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_13","text":"typedef int elem_type; typedef struct node { elem_type data; struct node *next; } link_list_t; typedef struct queue{ link_list_t *front; link_list_t *rear; }link_queue_t; NOTE : front \u6307\u5411\u94fe\u8868\u7684\u5934\u7ed3\u70b9\uff0c\u51fa\u961f\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5 free \uff0c rear \u6307\u5411\u94fe\u8868\u7684\u5c3e\u8282\u70b9\uff0c\u5165\u961f\u65f6\u91c7\u7528\u5c3e\u63d2\u6cd5\u3002 int link_queue_input(link_queue_t *p_queue, elem_type data) { if(NULL == p_queue) { return -1; } link_list_t * p_node = (link_list_t*)malloc(sizeof(link_list_t)); if (p_node == NULL ){ return -1; } p_node- data = data; p_node- next = NULL; p_queue- rear- next = p_node; p_queue- rear = p_node; return 0; } int link_queue_output(link_queue_t *p_queue, elem_type *data) { link_list_t *p_temp = NULL; if(link_queue_is_empty(p_queue)) { return -1; } p_temp = p_queue- front- next; *data = p_temp- data; p_queue- front- next = p_temp- next; if (p_temp != NULL){ free(p_temp); p_temp = NULL; } return 0; }","title":"\u94fe\u5f0f"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_14","text":"","title":"\u6811"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_15","text":"","title":"\u5b8c\u5168\u4e8c\u53c9\u6811"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_16","text":"btree_t* binary_tree_create(int cur, int node_num) { btree_t *p_node = (btree_t*)malloc(sizeof(btree_t)); if(NULL == p_node) { return NULL; } p_node- data = cur; if (2 * cur = node_num) { p_node- lchild = binary_tree_create(2 * cur, node_num); } else { p_node- lchild = NULL; } if (2 * cur + 1 = node_num) { p_node- rchild = binary_tree_create(2 * cur + 1, node_num); } else { p_node- rchild = NULL; } return p_node; }","title":"\u521b\u5efa"},{"location":"linux/\u6570\u636e\u7ed3\u6784/#_17","text":"\u524d\u5e8f ```c void pre_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } printf(\"%d,\",p_node- data); pre_order_traverse(p_node- lchild); pre_order_traverse(p_node- rchild); } ``` \u4e2d\u5e8f c void in_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } pre_order_traverse(p_node- lchild); printf(\"%d,\",p_node- data); pre_order_traverse(p_node- rchild); } \u540e\u5e8f ```c void post_order_traverse(btree_t *p_node) { if(NULL == p_node) { return; } pre_order_traverse(p_node- lchild); pre_order_traverse(p_node- rchild); printf(\"%d,\",p_node- data); } ``` \u5c42\u5e8f ```c void lever_order_traverse(btree_t p_node) { //\u6309\u7167\u6839\u5de6\u53f3\u7684\u987a\u5e8f\u5165\u961f btree_t p_index = NULL; seq_queue_t p_queue = seq_queue_create(); if(NULL != p_node) { seq_queue_input(p_queue, p_node); } while (!seq_queue_is_empty(p_queue)) { / \u51fa\u961f \u5f00\u59cb\u904d\u5386 */ seq_queue_output(p_queue, p_index); if(p_index- lchild != NULL) { seq_queue_input(p_queue, p_index- lchild); } if(p_index- rchild != NULL) { seq_queue_input(p_queue,p_index- rchild); } printf(\"%d,\",p_index- data); } printf(\"\\n-----------\\n\"); } ``` \u4e8c\u53c9\u6811\u7684\u521b\u5efa\u548c\u904d\u5386\u4e3b\u8981\u4f7f\u7528\u4e86\u9012\u5f52\u7684\u601d\u60f3\u3002","title":"\u904d\u5386"},{"location":"linux/\u7f16\u8bd1/","text":"\u7f16\u8bd1\u8fc7\u7a0b \u7b14\u8005\u4f7f\u7528 \u4f7f\u7528\u7f16\u8bd1\u5668\u4e3a GCC gcc \u4e00\u822c\u683c\u5f0f\u4e3a GCC [\u9009\u9879] \u8981\u7f16\u8bd1\u7684\u6587\u4ef6 [\u9009\u9879] \u76ee\u6807\u6587\u4ef6 1. \u9884\u5904\u7406 \u9884\u5904\u7406\u76f8\u5f53\u4e8e\u5c06\u9884\u5904\u7406\u6307\u4ee4\u7ec4\u88c5\u6210\u65b0\u7684\u7a0b\u5e8f\uff0c\u4f1a\u66ff\u6362\u5b8f\uff0c\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\u7b49\u5185\u5bb9\u3002\u540c\u539f\u6587\u4ef6\u65e0\u5f02\uff0c\u77e5\u8bc6\u5185\u5bb9\u6709\u6240\u4e0d\u540c\u3002 * \u5904\u7406\uff08#\u5f00\u5934\u7684\u6307\u4ee4\uff09\u4f2a\u6307\u4ee4 - \u5c06\u6240\u6709\u7684 #define \u5220\u9664\uff0c\u5e76\u5c55\u5f00\u6240\u6709\u7684\u5b8f\u5b9a\u4e49 - \u5904\u7406\u6240\u6709\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\uff0c\u5982 #if , #endif - \u5904\u7406\u9884\u7f16\u8bd1\u6307\u4ee4 #include \uff0c\u5c06\u5305\u542b\u7684\u6587\u4ef6\u63d2\u5165\u8be5\u4f4d\u7f6e * \u5220\u9664\u6240\u6709\u6ce8\u91ca * \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u540d\u6807\u8bc6 * \u4fdd\u7559\u6240\u6709\u7684 #pragma \u7f16\u8bd1\u5668\u6307\u4ee4 gcc -E file.c -o file.i cpp -- \u9884\u5904\u7406\u5668 .i \u662f\u7ecf\u8fc7\u9884\u5904\u7406\u7684C\u539f\u59cb\u7a0b\u5e8f 2. \u7f16\u8bd1 \u5c06\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u3002\u4ea7\u751f\u54cd\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 gcc -S file.i -o file.s cc -- \u7f16\u8bd1\u5668 3. \u6c47\u7f16 \u5c06\u7f16\u8bd1\u5b8c\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\u7ffb\u8bd1\u6210\u673a\u5668\u6307\u4ee4\u3002\u5e76\u751f\u6210\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u7a0b\u5e8f\u7684 .o \u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b57\u8282\u7f16\u7801\u662f\u673a\u5668\u6307\u4ee4\u3002 \u6c47\u7f16\u5668\u662f\u5c06\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u673a\u5668\u53ef\u4ee5\u6267\u884c\u7684\u6307\u4ee4\uff0c\u6bcf\u4e00\u4e2a\u6c47\u7f16\u8bed\u53e5\u51e0\u4e4e\u5bf9\u5e94\u4e00\u6761\u673a\u5668\u6307\u4ee4\u3002\u6240\u4ee5\u6c47\u7f16\u5668\u7684\u6c47\u7f16\u8fc7\u7a0b\u76f8\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6bd4\u8f83\u7b80\u5355\u3002 \u5b83\u6ca1\u6709\u590d\u6742\u7684\u8bed\u6cd5\uff0c\u4e5f\u6ca1\u6709\u8bed\u4e49\uff0c\u4e0d\u9700\u8981\u505a\u6307\u4ee4\u4f18\u5316\u3002\u77e5\u8bc6\u6839\u636e\u6c47\u7f16\u53ea\u770b\u548c\u673a\u5668\u6307\u4ee4\u7684\u5bf9\u7167\u8868\u4e00\u4e00\u7ffb\u8bd1\u5373\u53ef\u3002 gcc -c file.s -o file.o as -- \u6c47\u7f16\u5668 4. \u94fe\u63a5 \u901a\u8fc7\u94fe\u63a5\u5668\u5c06\u4e00\u4e2a\u4e2a\u76ee\u6807\u6587\u4ef6\uff08\u6216\u8bb8\u8fd8\u6709\u5e93\u6587\u4ef6\uff09\u94fe\u63a5\u5728\u4e00\u8d77\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u3002 \u7531\u6c47\u7f16\u5668\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\u5e76\u4e0d\u80fd\u7acb\u5373\u6267\u884c\uff0c\u5176\u4e2d\u8fd8\u6709\u8bb8\u591a\u6ca1\u6709\u89e3\u51b3\u7684\u95ee\u9898 \u4f8b\u5982\u67d0\u4e2a\u6e90\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u53ef\u80fd\u5f15\u7528\u4e86\u53e6\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u67d0\u4e2a\u7b26\u53f7\uff0c\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u8c03\u7528\u4e86\u67d0\u4e2a\u5e93\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\uff0c\u7b49\u7b49\u3002\u6240\u4ee5\u9700\u8981\u8fde\u63a5\u5668\u5904\u7406 \u94fe\u63a5\u7a0b\u5e8f\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u8bb2\u6709\u5173\u7684\u76ee\u6807\u6587\u4ef6\u5f7c\u6b64\u94fe\u63a5\uff0c\u4e5f\u5c31\u662f\u8bb2\u4e00\u4e2a\u6587\u4ef6\u5f15\u7528\u7684\u7b26\u53f7\u540c\u8be5\u7b26\u53f7\u5728\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\u94fe\u63a5\u8d77\u6765\u3002 \u4f7f\u5f97\u6240\u6709\u7684\u76ee\u6807\u6587\u4ef6\u6210\u4e3a\u4e00\u4e2a\u80fd\u591f\u88ab\u64cd\u4f5c\u7cfb\u7edf\u88c5\u5165\u6267\u884c\u7684\u7edf\u4e00\u6574\u4f53 gcc file.o -o file ld -- \u8fde\u63a5\u5668 5. GCC \u7f16\u8bd1\u9009\u9879 1. \u603b\u4f53\u9009\u9879 -E \uff1a\u4ec5\u4f5c\u9884\u5904\u7406\uff0c\u4e0d\u8fdb\u884c\u7f16\u8bd1\uff0c\u6c47\u7f16\u548c\u94fe\u63a5 -S \uff1a \u7f16\u8bd1\u5230\u6c47\u7f16\u8bed\u8a00\uff0c\u4e0d\u8fdb\u884c\u6c47\u7f16\u548c\u94fe\u63a5 -c \uff1a\u7f16\u8bd1\u5230\u76ee\u6807\u4ee3\u7801 -o \uff1a \u8f93\u51fa\u4e3a\u53ef\u6267\u884c\u7a0b\u5e8f -static \uff1a\u7981\u6b62\u4f7f\u7528\u52a8\u6001\u5e93 -share \uff1a\u5c3d\u91cf\u4f7f\u7528\u52a8\u6001\u5e93 -I dir \uff1a \u5728\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u6dfb\u52a0dir -L dir \uff1a\u5728\u5e93\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u6dfb\u52a0dir -llibrary \uff1a\u94fe\u63a5\u540d\u4e3a library \u7684\u5e93\u6587\u4ef6 2. \u8b66\u544a\u548c\u51fa\u9519 -Wall \uff1a\u6253\u5f00\u6240\u6709\u7c7b\u578b\u8bed\u6cd5\u8b66\u544a -Wcomment \uff1a\u5f53 /* \u51fa\u73b0\u5728 /*...*/ \u6ce8\u91ca\u4e2d\uff0c\u6216\u8005 \\ \u51fa\u73b0\u5728 //... \u6ce8\u91ca\u7ed3\u5c3e\u5904\u4f1a\u7ed9\u51fa\u8b66\u544a -fsyntax-only \uff1a\u68c0\u67e5\u8bed\u6cd5\u9519\u8bef -w \uff1a\u7981\u6b62\u6240\u6709\u8b66\u544a\u4fe1\u606f 6.GDB\u8c03\u8bd5 \u547d\u4ee4\uff1a gcc -g file.c -o file \u6ce8\u610f \uff1a\u4e00\u5b9a\u52a0\u4e0a\u53c2\u6570 -g 1.\u8bbe\u7f6e\u65ad\u70b9 break linenum break function break * address break \u4e5f\u53ef\u4ee5\u4f7f\u7528 b 2. \u67e5\u770b\u65ad\u70b9 info break[n] 3. \u8fd0\u884c\u4ee3\u7801 \u8f93\u5982 r \u5373\u53ef\uff0c\u9ed8\u8ba4\u662f\u4ece\u9996\u884c\u5f00\u59cb\u8fd0\u884c\uff0c\u82e5\u60f3\u6307\u5b9a\u884c\u5f00\u59cb\u8fd0\u884c\u53ef\u4ee5\u8f7d r \u540e\u9762\u52a0\u4e0a\u884c\u53f7\u3002 4. \u67e5\u770b\u53d8\u91cf\u503c p+\u53d8\u91cf \u6bb5\u9519\u8bef 1. \u8c03\u8bd5\u8bbe\u7f6e \u68c0\u67e5 ulimit $ulimit -c \u82e5\u662f0\uff1a\u8868\u793a\u7981\u6b62\u751f\u6210core\u6587\u4ef6\uff0c\u6b64\u65f6\u9700\u8981 ulimit -c unlimited \u4e34\u65f6\u751f\u6548 \u6216\u8005\u5728 .bashrc \u6dfb\u52a0 ulimit - c unlimitd \uff0c\u7136\u540e source .bashrc \u4f7f\u5176\u751f\u6548 2. \u6bb5\u9519\u8bef\u8c03\u8bd5 gdb ./file ./core :\u53ef\u4ee5\u67e5\u770b\u5177\u4f53\u6bb5\u9519\u8bef\u4fe1\u606f 7. C\u7a0b\u5e8f\u7684\u50a8\u5b58\u7a7a\u95f4\u5e03\u5c40 \u6b63\u6587\u6bb5 \uff0c\u8fd9\u662f\u6709CPU\u6267\u884c\u7684\u673a\u5668\u6307\u4ee4\u90e8\u5206\uff0c\u901a\u5e38\u6b63\u6587\u6bb5\u662f\u53ef\u4ee5\u5171\u4eab\u7684\uff0c\u53e6\u5916\u6b63\u6587\u6bb5\u5e38\u5e38\u662f\u53ea\u8bfb\u7684 \u521d\u59cb\u5316\u6570\u636e\u6bb5 \uff0c\u901a\u5e38\u6b64\u6bb5\u6210\u4e3a\u6570\u636e\u6bb5\uff0c\u5305\u542b\u4e86\u7a0b\u5e8f\u4e2d\u9700\u660e\u786e\u8d4b\u521d\u503c\u7684\u53d8\u91cf\uff0c\u5982\u51fd\u6570\u4e4b\u5916\u7684\u58f0\u660e int max = 99 \u672a\u521d\u59cb\u5316\u7684\u6570\u636e\u6bb5 \uff0c\u901a\u5e38\u6210\u4e3abss\u6bb5\uff0c\u6765\u6e90\u4e8e\u201c\u7531\u7b26\u53f7\u5f00\u59cb\u7684\u5757\u201d\uff08block started by symbol\uff09\uff0c\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4e4b\u524d\uff0c\u5185\u6838\u5c06\u6b64\u6bb5\u4e2d\u7684\u6570\u636e\u521d\u59cb\u5316\u4e3a0 \u6808 \u81ea\u52a8\u53d8\u91cf\u4ee5\u53ca\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u65f6\u6240\u9700\u4fdd\u5b58\u7684\u4fe1\u606f\u5b58\u4e8e\u6b64\u6bb5 \u5806 \u901a\u5e38\u5728\u5806\u4e2d\u8fdb\u884c\u52a8\u6001\u50a8\u5b58\u5206\u914d 8. \u5171\u4eab\u5e93 \u9759\u6001\u5e93\u6b65\u9aa4 \u628a\u6e90\u7801\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6\uff08*.o\uff09 gcc - c xxx.c \u7528 ar \u547d\u4ee4\u628a\u76ee\u6807\u6587\u4ef6\u751f\u6210lib\u6587\u4ef6 ar crs libxxx.a xxx.o \u751f\u6210\u7684lib\u6587\u4ef6\u4e0e\u4e3b\u7a0b\u5e8f\u4e00\u8d77\u7f16\u8bd1 \u200b gcc -o \u76ee\u6807\u6587\u4ef6 -L\u5e93\u8def\u5f84 -lxxx \u200b gcc -o \u76ee\u6807\u6587\u4ef6 -static -L\u5e93\u8def\u5f84 -lxxx \u52a8\u6001\u5e93\u6b65\u9aa4 \u7f16\u8bd1\u76ee\u6807\u6587\u4ef6 gcc -c -fPIC xxx.c \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u7801 \u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93 gcc -shared -o libxxx.so xxx.o \u7f16\u8bd1 \u200b gcc -o \u76ee\u6807\u6587\u4ef6 -L\u5e93\u8def\u5f84 -lxxx Q \uff1a\u6267\u884c\u65f6\u5019\u627e\u4e0d\u5230\u5e93\u6587\u4ef6\uff1f \u52a8\u6001\u5e93\u6dfb\u52a0\u5230\u7cfb\u7edf\u7684\u5e93\u6587\u4ef6\u76ee\u5f55 export LD_LIBRARY=$LD_LIBRARY_PATH:\u4f60\u7684\u52a8\u6001\u8def\u5f84 \u6dfb\u52a0 /etc/ld.so.conf.d/*conf \u6587\u4ef6\uff0c\u6267\u884c ldconfig \u5237\u65b0 \u5176\u4ed6\u5de5\u5177 \u90e8\u5206\u5de5\u5177\u7684\u4f7f\u7528\uff0c \u9700\u8981\u7f16\u8bd1\u65f6\u52a0 -g \u9009\u9879 1. readelf elf\u6587\u4ef6\u5934\u63cf\u8ff0elf\u6587\u4ef6\u7684\u603b\u4f53\u4fe1\u606f\u3002\u5305\u62ec\uff1a\u7cfb\u7edf\u76f8\u5173\uff0c\u7c7b\u578b\u76f8\u5173\uff0c\u52a0\u8f7d\u76f8\u5173\uff0c\u94fe\u63a5\u76f8\u5173\u3002 \u7cfb\u7edf\u76f8\u5173\u8868\u793a\uff1aelf\u6587\u4ef6\u6807\u8bc6\u7684\u9b54\u672f\u6570\uff0c\u4ee5\u53ca\u786c\u4ef6\u548c\u5e73\u53f0\u7b49\u76f8\u5173\u4fe1\u606f\uff0c\u589e\u52a0\u4e86elf\u6587\u4ef6\u7684\u79fb\u690d\u6027,\u4f7f\u4ea4\u53c9\u7f16\u8bd1\u6210\u4e3a\u53ef\u80fd\u3002 \u7c7b\u578b\u76f8\u5173\u5c31\u662f\u524d\u9762\u8bf4\u7684\u90a3\u4e2a\u7c7b\u578b\u3002 \u52a0\u8f7d\u76f8\u5173\uff1a\u5305\u62ec\u7a0b\u5e8f\u5934\u8868\u76f8\u5173\u4fe1\u606f\u3002 \u94fe\u63a5\u76f8\u5173\uff1a\u8282\u5934\u8868\u76f8\u5173\u4fe1\u606f\u3002 $ readelf -h a.out ELF Header: Magic: 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 Class: ELF64 Data: 2's complement, little endian Version: 1 (current) OS/ABI: UNIX - System V ABI Version: 0 Type: EXEC (Executable file) Machine: Advanced Micro Devices X86-64 Version: 0x1 Entry point address: 0x400430 Start of program headers: 64 (bytes into file) Start of section headers: 6688 (bytes into file) Flags: 0x0 Size of this header: 64 (bytes) Size of program headers: 56 (bytes) Number of program headers: 9 Size of section headers: 64 (bytes) Number of section headers: 31 Section header string table index: 28 2. size \u8bfb\u53d6\u5404\u4e2a\u6bb5\u5927\u5c0f $size a.out text data bss dec hex filename 1286 552 8 1846 736 file_io 3. objcopy \u5c06\u76ee\u6807\u6587\u4ef6\u7684\u4e00\u90e8\u5206\u6216\u8005\u5168\u90e8\u62f7\u8d1d\u5230\u53e6\u4e00\u76ee\u6807\u6587\u4ef6\uff0c\u6216\u8005\u5b9e\u73b0\u76ee\u6807\u6587\u4ef6\u7c7b\u578b\u8f6c\u6362 $objcopy -O binary a.out a.bin 4. objdump \u67e5\u770b\u76ee\u6807\u6587\u4ef6\u6216\u8005\u53ef\u6267\u884c\u7684\u76ee\u6807\u6587\u4ef6\u7684\u6784\u6210 -D \uff1a\u53cd\u6c47\u7f16\u6240\u6709\u7684section -S \uff1a\u5c3d\u53ef\u80fd\u53cd\u6c47\u7f16\u51fa\u6e90\u4ee3\u7801\uff0c\u5c24\u5176\u662f\u5f53\u7f16\u8bd1\u7684\u65f6\u5019\u6307\u5b9a\u4e86 -g \u8fd9\u79cd\u8c03\u8bd5\u53c2\u6570\u65f6\uff0c\u6548\u679c\u6bd4\u8f83\u660e\u663e\uff0c\u9690\u542b\u4e86 -d \u53c2\u6570 $objdump -DS a.out a.dis 5.nm \u7528\u4e8e\u663e\u793a\u4e8c\u8fdb\u5236\u76ee\u6807\u6587\u4ef6\u7684\u7b26\u53f7\u8868\uff0c\u7f16\u8bd1\u65f6\u9700\u8981\u52a0\u4e0a -g \u9009\u9879 $nm a.out a.map # T/t \u4ee3\u7801\u6bb5 # D/d \u6570\u636e\u6bb5 # B/b bss \u6bb5 # R/r \u53ea\u8bfb\u6570\u636e\u6bb5 # \u5927\u5199\u8868\u793a\u975e\u9759\u6001 # \u5c0f\u5199\u8868\u793a\u9759\u6001 static 6. addr2line \u5c06\u5730\u5740\u8f6c\u6362\u6210\u6587\u4ef6\u540d\u548c\u884c\u53f7\uff0c\u7ed9\u5b9a\u4e86\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u7684\u5730\u5740\u6216\u8005\u91cd\u5b9a\u5411\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u6bb5\u7684\u504f\u79fb\u5730\u5740\uff0c\u53ef\u4ee5\u8ba1\u7b97\u51fa\u76f8\u5173\u7684\u6587\u4ef6\u540d\u5b57\u548c\u884c\u53f7 $addr2line -e test1 400506 /home/hanfoo/code/test/addr2line/test1.c:5 7. strip \u53bb\u6389\u6587\u4ef6\u8c03\u8bd5\u4fe1\u606f\uff0c\u53ef\u4ee5\u7ed9\u53ef\u6267\u884c\u6587\u4ef6\u7626\u8eab","title":"\u7f16\u8bd1"},{"location":"linux/\u7f16\u8bd1/#_1","text":"\u7b14\u8005\u4f7f\u7528 \u4f7f\u7528\u7f16\u8bd1\u5668\u4e3a GCC gcc \u4e00\u822c\u683c\u5f0f\u4e3a GCC [\u9009\u9879] \u8981\u7f16\u8bd1\u7684\u6587\u4ef6 [\u9009\u9879] \u76ee\u6807\u6587\u4ef6","title":"\u7f16\u8bd1\u8fc7\u7a0b"},{"location":"linux/\u7f16\u8bd1/#1","text":"\u9884\u5904\u7406\u76f8\u5f53\u4e8e\u5c06\u9884\u5904\u7406\u6307\u4ee4\u7ec4\u88c5\u6210\u65b0\u7684\u7a0b\u5e8f\uff0c\u4f1a\u66ff\u6362\u5b8f\uff0c\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\u7b49\u5185\u5bb9\u3002\u540c\u539f\u6587\u4ef6\u65e0\u5f02\uff0c\u77e5\u8bc6\u5185\u5bb9\u6709\u6240\u4e0d\u540c\u3002 * \u5904\u7406\uff08#\u5f00\u5934\u7684\u6307\u4ee4\uff09\u4f2a\u6307\u4ee4 - \u5c06\u6240\u6709\u7684 #define \u5220\u9664\uff0c\u5e76\u5c55\u5f00\u6240\u6709\u7684\u5b8f\u5b9a\u4e49 - \u5904\u7406\u6240\u6709\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\uff0c\u5982 #if , #endif - \u5904\u7406\u9884\u7f16\u8bd1\u6307\u4ee4 #include \uff0c\u5c06\u5305\u542b\u7684\u6587\u4ef6\u63d2\u5165\u8be5\u4f4d\u7f6e * \u5220\u9664\u6240\u6709\u6ce8\u91ca * \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u540d\u6807\u8bc6 * \u4fdd\u7559\u6240\u6709\u7684 #pragma \u7f16\u8bd1\u5668\u6307\u4ee4 gcc -E file.c -o file.i cpp -- \u9884\u5904\u7406\u5668 .i \u662f\u7ecf\u8fc7\u9884\u5904\u7406\u7684C\u539f\u59cb\u7a0b\u5e8f","title":"1. \u9884\u5904\u7406"},{"location":"linux/\u7f16\u8bd1/#2","text":"\u5c06\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u3002\u4ea7\u751f\u54cd\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 gcc -S file.i -o file.s cc -- \u7f16\u8bd1\u5668","title":"2. \u7f16\u8bd1"},{"location":"linux/\u7f16\u8bd1/#3","text":"\u5c06\u7f16\u8bd1\u5b8c\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\u7ffb\u8bd1\u6210\u673a\u5668\u6307\u4ee4\u3002\u5e76\u751f\u6210\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u7a0b\u5e8f\u7684 .o \u6587\u4ef6\u3002\u8be5\u6587\u4ef6\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b57\u8282\u7f16\u7801\u662f\u673a\u5668\u6307\u4ee4\u3002 \u6c47\u7f16\u5668\u662f\u5c06\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u673a\u5668\u53ef\u4ee5\u6267\u884c\u7684\u6307\u4ee4\uff0c\u6bcf\u4e00\u4e2a\u6c47\u7f16\u8bed\u53e5\u51e0\u4e4e\u5bf9\u5e94\u4e00\u6761\u673a\u5668\u6307\u4ee4\u3002\u6240\u4ee5\u6c47\u7f16\u5668\u7684\u6c47\u7f16\u8fc7\u7a0b\u76f8\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6bd4\u8f83\u7b80\u5355\u3002 \u5b83\u6ca1\u6709\u590d\u6742\u7684\u8bed\u6cd5\uff0c\u4e5f\u6ca1\u6709\u8bed\u4e49\uff0c\u4e0d\u9700\u8981\u505a\u6307\u4ee4\u4f18\u5316\u3002\u77e5\u8bc6\u6839\u636e\u6c47\u7f16\u53ea\u770b\u548c\u673a\u5668\u6307\u4ee4\u7684\u5bf9\u7167\u8868\u4e00\u4e00\u7ffb\u8bd1\u5373\u53ef\u3002 gcc -c file.s -o file.o as -- \u6c47\u7f16\u5668","title":"3. \u6c47\u7f16"},{"location":"linux/\u7f16\u8bd1/#4","text":"\u901a\u8fc7\u94fe\u63a5\u5668\u5c06\u4e00\u4e2a\u4e2a\u76ee\u6807\u6587\u4ef6\uff08\u6216\u8bb8\u8fd8\u6709\u5e93\u6587\u4ef6\uff09\u94fe\u63a5\u5728\u4e00\u8d77\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u3002 \u7531\u6c47\u7f16\u5668\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\u5e76\u4e0d\u80fd\u7acb\u5373\u6267\u884c\uff0c\u5176\u4e2d\u8fd8\u6709\u8bb8\u591a\u6ca1\u6709\u89e3\u51b3\u7684\u95ee\u9898 \u4f8b\u5982\u67d0\u4e2a\u6e90\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u53ef\u80fd\u5f15\u7528\u4e86\u53e6\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u67d0\u4e2a\u7b26\u53f7\uff0c\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u8c03\u7528\u4e86\u67d0\u4e2a\u5e93\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\uff0c\u7b49\u7b49\u3002\u6240\u4ee5\u9700\u8981\u8fde\u63a5\u5668\u5904\u7406 \u94fe\u63a5\u7a0b\u5e8f\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u8bb2\u6709\u5173\u7684\u76ee\u6807\u6587\u4ef6\u5f7c\u6b64\u94fe\u63a5\uff0c\u4e5f\u5c31\u662f\u8bb2\u4e00\u4e2a\u6587\u4ef6\u5f15\u7528\u7684\u7b26\u53f7\u540c\u8be5\u7b26\u53f7\u5728\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\u94fe\u63a5\u8d77\u6765\u3002 \u4f7f\u5f97\u6240\u6709\u7684\u76ee\u6807\u6587\u4ef6\u6210\u4e3a\u4e00\u4e2a\u80fd\u591f\u88ab\u64cd\u4f5c\u7cfb\u7edf\u88c5\u5165\u6267\u884c\u7684\u7edf\u4e00\u6574\u4f53 gcc file.o -o file ld -- \u8fde\u63a5\u5668","title":"4. \u94fe\u63a5"},{"location":"linux/\u7f16\u8bd1/#5-gcc","text":"","title":"5. GCC \u7f16\u8bd1\u9009\u9879"},{"location":"linux/\u7f16\u8bd1/#1_1","text":"-E \uff1a\u4ec5\u4f5c\u9884\u5904\u7406\uff0c\u4e0d\u8fdb\u884c\u7f16\u8bd1\uff0c\u6c47\u7f16\u548c\u94fe\u63a5 -S \uff1a \u7f16\u8bd1\u5230\u6c47\u7f16\u8bed\u8a00\uff0c\u4e0d\u8fdb\u884c\u6c47\u7f16\u548c\u94fe\u63a5 -c \uff1a\u7f16\u8bd1\u5230\u76ee\u6807\u4ee3\u7801 -o \uff1a \u8f93\u51fa\u4e3a\u53ef\u6267\u884c\u7a0b\u5e8f -static \uff1a\u7981\u6b62\u4f7f\u7528\u52a8\u6001\u5e93 -share \uff1a\u5c3d\u91cf\u4f7f\u7528\u52a8\u6001\u5e93 -I dir \uff1a \u5728\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u6dfb\u52a0dir -L dir \uff1a\u5728\u5e93\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u6dfb\u52a0dir -llibrary \uff1a\u94fe\u63a5\u540d\u4e3a library \u7684\u5e93\u6587\u4ef6","title":"1. \u603b\u4f53\u9009\u9879"},{"location":"linux/\u7f16\u8bd1/#2_1","text":"-Wall \uff1a\u6253\u5f00\u6240\u6709\u7c7b\u578b\u8bed\u6cd5\u8b66\u544a -Wcomment \uff1a\u5f53 /* \u51fa\u73b0\u5728 /*...*/ \u6ce8\u91ca\u4e2d\uff0c\u6216\u8005 \\ \u51fa\u73b0\u5728 //... \u6ce8\u91ca\u7ed3\u5c3e\u5904\u4f1a\u7ed9\u51fa\u8b66\u544a -fsyntax-only \uff1a\u68c0\u67e5\u8bed\u6cd5\u9519\u8bef -w \uff1a\u7981\u6b62\u6240\u6709\u8b66\u544a\u4fe1\u606f","title":"2. \u8b66\u544a\u548c\u51fa\u9519"},{"location":"linux/\u7f16\u8bd1/#6gdb","text":"\u547d\u4ee4\uff1a gcc -g file.c -o file \u6ce8\u610f \uff1a\u4e00\u5b9a\u52a0\u4e0a\u53c2\u6570 -g","title":"6.GDB\u8c03\u8bd5"},{"location":"linux/\u7f16\u8bd1/#1_2","text":"break linenum break function break * address break \u4e5f\u53ef\u4ee5\u4f7f\u7528 b","title":"1.\u8bbe\u7f6e\u65ad\u70b9"},{"location":"linux/\u7f16\u8bd1/#2_2","text":"info break[n]","title":"2. \u67e5\u770b\u65ad\u70b9"},{"location":"linux/\u7f16\u8bd1/#3_1","text":"\u8f93\u5982 r \u5373\u53ef\uff0c\u9ed8\u8ba4\u662f\u4ece\u9996\u884c\u5f00\u59cb\u8fd0\u884c\uff0c\u82e5\u60f3\u6307\u5b9a\u884c\u5f00\u59cb\u8fd0\u884c\u53ef\u4ee5\u8f7d r \u540e\u9762\u52a0\u4e0a\u884c\u53f7\u3002","title":"3. \u8fd0\u884c\u4ee3\u7801"},{"location":"linux/\u7f16\u8bd1/#4_1","text":"p+\u53d8\u91cf","title":"4. \u67e5\u770b\u53d8\u91cf\u503c"},{"location":"linux/\u7f16\u8bd1/#_2","text":"","title":"\u6bb5\u9519\u8bef"},{"location":"linux/\u7f16\u8bd1/#1_3","text":"\u68c0\u67e5 ulimit $ulimit -c \u82e5\u662f0\uff1a\u8868\u793a\u7981\u6b62\u751f\u6210core\u6587\u4ef6\uff0c\u6b64\u65f6\u9700\u8981 ulimit -c unlimited \u4e34\u65f6\u751f\u6548 \u6216\u8005\u5728 .bashrc \u6dfb\u52a0 ulimit - c unlimitd \uff0c\u7136\u540e source .bashrc \u4f7f\u5176\u751f\u6548","title":"1. \u8c03\u8bd5\u8bbe\u7f6e"},{"location":"linux/\u7f16\u8bd1/#2_3","text":"gdb ./file ./core :\u53ef\u4ee5\u67e5\u770b\u5177\u4f53\u6bb5\u9519\u8bef\u4fe1\u606f","title":"2. \u6bb5\u9519\u8bef\u8c03\u8bd5"},{"location":"linux/\u7f16\u8bd1/#7-c","text":"\u6b63\u6587\u6bb5 \uff0c\u8fd9\u662f\u6709CPU\u6267\u884c\u7684\u673a\u5668\u6307\u4ee4\u90e8\u5206\uff0c\u901a\u5e38\u6b63\u6587\u6bb5\u662f\u53ef\u4ee5\u5171\u4eab\u7684\uff0c\u53e6\u5916\u6b63\u6587\u6bb5\u5e38\u5e38\u662f\u53ea\u8bfb\u7684 \u521d\u59cb\u5316\u6570\u636e\u6bb5 \uff0c\u901a\u5e38\u6b64\u6bb5\u6210\u4e3a\u6570\u636e\u6bb5\uff0c\u5305\u542b\u4e86\u7a0b\u5e8f\u4e2d\u9700\u660e\u786e\u8d4b\u521d\u503c\u7684\u53d8\u91cf\uff0c\u5982\u51fd\u6570\u4e4b\u5916\u7684\u58f0\u660e int max = 99 \u672a\u521d\u59cb\u5316\u7684\u6570\u636e\u6bb5 \uff0c\u901a\u5e38\u6210\u4e3abss\u6bb5\uff0c\u6765\u6e90\u4e8e\u201c\u7531\u7b26\u53f7\u5f00\u59cb\u7684\u5757\u201d\uff08block started by symbol\uff09\uff0c\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4e4b\u524d\uff0c\u5185\u6838\u5c06\u6b64\u6bb5\u4e2d\u7684\u6570\u636e\u521d\u59cb\u5316\u4e3a0 \u6808 \u81ea\u52a8\u53d8\u91cf\u4ee5\u53ca\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u65f6\u6240\u9700\u4fdd\u5b58\u7684\u4fe1\u606f\u5b58\u4e8e\u6b64\u6bb5 \u5806 \u901a\u5e38\u5728\u5806\u4e2d\u8fdb\u884c\u52a8\u6001\u50a8\u5b58\u5206\u914d","title":"7. C\u7a0b\u5e8f\u7684\u50a8\u5b58\u7a7a\u95f4\u5e03\u5c40"},{"location":"linux/\u7f16\u8bd1/#8","text":"","title":"8. \u5171\u4eab\u5e93"},{"location":"linux/\u7f16\u8bd1/#_3","text":"\u628a\u6e90\u7801\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6\uff08*.o\uff09 gcc - c xxx.c \u7528 ar \u547d\u4ee4\u628a\u76ee\u6807\u6587\u4ef6\u751f\u6210lib\u6587\u4ef6 ar crs libxxx.a xxx.o \u751f\u6210\u7684lib\u6587\u4ef6\u4e0e\u4e3b\u7a0b\u5e8f\u4e00\u8d77\u7f16\u8bd1 \u200b gcc -o \u76ee\u6807\u6587\u4ef6 -L\u5e93\u8def\u5f84 -lxxx \u200b gcc -o \u76ee\u6807\u6587\u4ef6 -static -L\u5e93\u8def\u5f84 -lxxx","title":"\u9759\u6001\u5e93\u6b65\u9aa4"},{"location":"linux/\u7f16\u8bd1/#_4","text":"\u7f16\u8bd1\u76ee\u6807\u6587\u4ef6 gcc -c -fPIC xxx.c \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u7801 \u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93 gcc -shared -o libxxx.so xxx.o \u7f16\u8bd1 \u200b gcc -o \u76ee\u6807\u6587\u4ef6 -L\u5e93\u8def\u5f84 -lxxx Q \uff1a\u6267\u884c\u65f6\u5019\u627e\u4e0d\u5230\u5e93\u6587\u4ef6\uff1f \u52a8\u6001\u5e93\u6dfb\u52a0\u5230\u7cfb\u7edf\u7684\u5e93\u6587\u4ef6\u76ee\u5f55 export LD_LIBRARY=$LD_LIBRARY_PATH:\u4f60\u7684\u52a8\u6001\u8def\u5f84 \u6dfb\u52a0 /etc/ld.so.conf.d/*conf \u6587\u4ef6\uff0c\u6267\u884c ldconfig \u5237\u65b0","title":"\u52a8\u6001\u5e93\u6b65\u9aa4"},{"location":"linux/\u7f16\u8bd1/#_5","text":"\u90e8\u5206\u5de5\u5177\u7684\u4f7f\u7528\uff0c \u9700\u8981\u7f16\u8bd1\u65f6\u52a0 -g \u9009\u9879","title":"\u5176\u4ed6\u5de5\u5177"},{"location":"linux/\u7f16\u8bd1/#1-readelf","text":"elf\u6587\u4ef6\u5934\u63cf\u8ff0elf\u6587\u4ef6\u7684\u603b\u4f53\u4fe1\u606f\u3002\u5305\u62ec\uff1a\u7cfb\u7edf\u76f8\u5173\uff0c\u7c7b\u578b\u76f8\u5173\uff0c\u52a0\u8f7d\u76f8\u5173\uff0c\u94fe\u63a5\u76f8\u5173\u3002 \u7cfb\u7edf\u76f8\u5173\u8868\u793a\uff1aelf\u6587\u4ef6\u6807\u8bc6\u7684\u9b54\u672f\u6570\uff0c\u4ee5\u53ca\u786c\u4ef6\u548c\u5e73\u53f0\u7b49\u76f8\u5173\u4fe1\u606f\uff0c\u589e\u52a0\u4e86elf\u6587\u4ef6\u7684\u79fb\u690d\u6027,\u4f7f\u4ea4\u53c9\u7f16\u8bd1\u6210\u4e3a\u53ef\u80fd\u3002 \u7c7b\u578b\u76f8\u5173\u5c31\u662f\u524d\u9762\u8bf4\u7684\u90a3\u4e2a\u7c7b\u578b\u3002 \u52a0\u8f7d\u76f8\u5173\uff1a\u5305\u62ec\u7a0b\u5e8f\u5934\u8868\u76f8\u5173\u4fe1\u606f\u3002 \u94fe\u63a5\u76f8\u5173\uff1a\u8282\u5934\u8868\u76f8\u5173\u4fe1\u606f\u3002 $ readelf -h a.out ELF Header: Magic: 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 Class: ELF64 Data: 2's complement, little endian Version: 1 (current) OS/ABI: UNIX - System V ABI Version: 0 Type: EXEC (Executable file) Machine: Advanced Micro Devices X86-64 Version: 0x1 Entry point address: 0x400430 Start of program headers: 64 (bytes into file) Start of section headers: 6688 (bytes into file) Flags: 0x0 Size of this header: 64 (bytes) Size of program headers: 56 (bytes) Number of program headers: 9 Size of section headers: 64 (bytes) Number of section headers: 31 Section header string table index: 28","title":"1. readelf"},{"location":"linux/\u7f16\u8bd1/#2-size","text":"\u8bfb\u53d6\u5404\u4e2a\u6bb5\u5927\u5c0f $size a.out text data bss dec hex filename 1286 552 8 1846 736 file_io","title":"2. size"},{"location":"linux/\u7f16\u8bd1/#3-objcopy","text":"\u5c06\u76ee\u6807\u6587\u4ef6\u7684\u4e00\u90e8\u5206\u6216\u8005\u5168\u90e8\u62f7\u8d1d\u5230\u53e6\u4e00\u76ee\u6807\u6587\u4ef6\uff0c\u6216\u8005\u5b9e\u73b0\u76ee\u6807\u6587\u4ef6\u7c7b\u578b\u8f6c\u6362 $objcopy -O binary a.out a.bin","title":"3. objcopy"},{"location":"linux/\u7f16\u8bd1/#4-objdump","text":"\u67e5\u770b\u76ee\u6807\u6587\u4ef6\u6216\u8005\u53ef\u6267\u884c\u7684\u76ee\u6807\u6587\u4ef6\u7684\u6784\u6210 -D \uff1a\u53cd\u6c47\u7f16\u6240\u6709\u7684section -S \uff1a\u5c3d\u53ef\u80fd\u53cd\u6c47\u7f16\u51fa\u6e90\u4ee3\u7801\uff0c\u5c24\u5176\u662f\u5f53\u7f16\u8bd1\u7684\u65f6\u5019\u6307\u5b9a\u4e86 -g \u8fd9\u79cd\u8c03\u8bd5\u53c2\u6570\u65f6\uff0c\u6548\u679c\u6bd4\u8f83\u660e\u663e\uff0c\u9690\u542b\u4e86 -d \u53c2\u6570 $objdump -DS a.out a.dis","title":"4. objdump"},{"location":"linux/\u7f16\u8bd1/#5nm","text":"\u7528\u4e8e\u663e\u793a\u4e8c\u8fdb\u5236\u76ee\u6807\u6587\u4ef6\u7684\u7b26\u53f7\u8868\uff0c\u7f16\u8bd1\u65f6\u9700\u8981\u52a0\u4e0a -g \u9009\u9879 $nm a.out a.map # T/t \u4ee3\u7801\u6bb5 # D/d \u6570\u636e\u6bb5 # B/b bss \u6bb5 # R/r \u53ea\u8bfb\u6570\u636e\u6bb5 # \u5927\u5199\u8868\u793a\u975e\u9759\u6001 # \u5c0f\u5199\u8868\u793a\u9759\u6001 static","title":"5.nm"},{"location":"linux/\u7f16\u8bd1/#6-addr2line","text":"\u5c06\u5730\u5740\u8f6c\u6362\u6210\u6587\u4ef6\u540d\u548c\u884c\u53f7\uff0c\u7ed9\u5b9a\u4e86\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u7684\u5730\u5740\u6216\u8005\u91cd\u5b9a\u5411\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u6bb5\u7684\u504f\u79fb\u5730\u5740\uff0c\u53ef\u4ee5\u8ba1\u7b97\u51fa\u76f8\u5173\u7684\u6587\u4ef6\u540d\u5b57\u548c\u884c\u53f7 $addr2line -e test1 400506 /home/hanfoo/code/test/addr2line/test1.c:5","title":"6. addr2line"},{"location":"linux/\u7f16\u8bd1/#7-strip","text":"\u53bb\u6389\u6587\u4ef6\u8c03\u8bd5\u4fe1\u606f\uff0c\u53ef\u4ee5\u7ed9\u53ef\u6267\u884c\u6587\u4ef6\u7626\u8eab","title":"7. strip"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/","text":"\u7f51\u7edc\u7f16\u7a0b \u7f51\u7edc\u57fa\u672c\u77e5\u8bc6 | A\u7c7b | B\u7c7b | C\u7c7b | D\u7c7b \u5b50\u7f51\u63a9\u7801 OSI\u6a21\u578b TCP/IP \u5957\u63a5\u5b57\u7f16\u7a0b \u521b\u5efa\u5957\u63a5\u5b57 #include sys/socket.h int socket(int domain, int type, int flag); /* \u6210\u529f\u8fd4\u56de\u63cf\u8ff0\u7b26\uff0c\u51fa\u9519\u8fd4\u56de-1 */ \u53c2\u6570 domain \u786e\u5b9a\u901a\u4fe1\u7684\u7279\u6027\uff0c\u5305\u62ec\u5730\u5740\u683c\u5f0f\uff0c\u4ee5 AF_ \u5f00\u5934\uff0c\u610f\u6307\u5730\u5740\u65cf\uff08 address family \uff09 domain \u63cf\u8ff0 AF_INET IPv4\u56e0\u7279\u7f51\u57df AF_INET6 IPv4\u56e0\u7279\u7f51\u57df AF_UNIX UNIX\u57df AF_UPSPEC \u672a\u6307\u5b9a \u53c2\u6570 type \u786e\u5b9a\u5957\u63a5\u5b57\u7684\u7c7b\u578b type \u63cf\u8ff0 SOCK_DGRAM \u56fa\u5b9a\u957f\u5ea6\uff0c\u65e0\u8fde\u63a5\u7684\uff0c\u4e0d\u53ef\u9760\u62a5\u6587\u4f20\u9012 SOCK_RAM IP\u534f\u8bae\u7684\u6570\u636e\u62a5\u63a5\u53e3 SOCK_SEQPACKET \u56fa\u5b9a\u957f\u5ea6\uff0c\u6709\u5e8f\uff0c\u53ef\u9760\u7684\uff0c\u9762\u5411\u8fde\u63a5\u7684\u62a5\u6587\u4f20\u9012 SOCK_STREAM \u6709\u5e8f\uff0c\u53ef\u9760\uff0c\u53cc\u5411\uff0c\u9762\u5411\u8fde\u63a5\u7684\u5b57\u8282\u6d41 \u53c2\u6570 protocol \u901a\u5e38\u662f0\uff0c\u8868\u793a\u4e3a\u7ed9\u5b9a\u7684\u57df\u548c\u5957\u63a5\u5b57\u7c7b\u578b\u9009\u62e9\u9ed8\u8ba4\u534f\u8bae protocol \u63cf\u8ff0 IPPROTO_IP IPv4\u7f51\u9645\u534f\u8bae IPPROTO_IPV6 IPv6\u7f51\u9645\u534f\u8bae IPPROTO_ICMP \u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae IPPROTO_RAW \u539f\u59cbIP\u6570\u636e\u5305\u534f\u8bae IPPROTO_TCP \u4f20\u8f93\u63a7\u5236\u534f\u8bae IPPROTO_UDP \u7528\u6237\u6570\u636e\u62a5\u534f\u8bae \u5b57\u8282\u5e8f #include arpa/inet.h uint32_t htonl (uint32_t hostint32); /* host to net \u8fd4\u56de\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a\u768432\u4f4d\u6574\u6570 */ uint16_t htons (uint32_t hostint16); /* host to net \u8fd4\u56de\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a\u768416\u4f4d\u6574\u6570 */ uint32_t ntohl (uint32_t netint32); /* net to host \u8fd4\u56de\u4e3b\u673a\u5b57\u8282\u5e8f\u8868\u793a\u768432\u4f4d\u6574\u6570 */ uint16_t ntohs (uint16_t netint16); /* net to host \u8fd4\u56de\u4e3b\u673a\u5b57\u8282\u5e8f\u8868\u793a\u768416\u4f4d\u6574\u6570 */ \u5730\u5740 linux\u4e2d\u5730\u5740\u7ed3\u6784\u4f53\u5b9a\u4e49\u5982\u4e0b struct sockaddr { sa_family_t sa_family; /* address family */ char sa_data[14]; /* variable-length address */ }; IPv4\u56e0\u7279\u7f51\u57df\uff08 AF_INET \uff09\u4e2d\u5730\u5740\u7ed3\u6784\u8868\u793a\u5982\u4e0b #include netinet/in.h struct in_addr { in_addr_t s_addr; }; struct scokaddr_in { sa_family_t sin_family; in_port_t sin_port; struct in_addr sin_addr; } IPv6\u56e0\u7279\u7f51\u57df\uff08 AF_INET6 \uff09\u4e2d\u5730\u5740\u7ed3\u6784\u8868\u793a\u5982\u4e0b struct in6_addr { uint8_t s6_addr[16]; }; struct sockaddr_in6 { sa_family_t sin6_family; in_port_t sin6_port; uint32_t sin6_flowinfo; struct in6_addr sin6_addr; uint32_t sin6_scope_id; /* set of interfaces for scope */ } \u5b83\u4eec\u4f1a\u88ab\u5f3a\u5236\u8f6c\u6362\u6210 sockaddr \u8f93\u5165\u5230\u5957\u63a5\u5b57\u7684\u5386\u7a0b\u4e2d \u5957\u63a5\u5b57\u4e0e\u5730\u5740\u5173\u8054 #include sys/socket/h int bind(int sockfd, const struct sockaddr *addr, socklen_t len); \u8fde\u63a5 int connect (int sockfd, const struct sockaddr *addr, socklen_t len); \u8fd9\u91cc\u7684\u5730\u5740\u662f\u60f3\u4e0e\u4e4b\u901a\u4fe1\u7684\u670d\u52a1\u5668\u5730\u5740 int listen(int sockfd, int backlog); \u670d\u52a1\u5668\u8c03\u7528 listen \u6765\u5ba3\u544a\u4ed6\u613f\u610f\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42\uff0c listen \u505a\u4e24\u4ef6\u4e8b\uff0c \u5f53 socket \u521b\u5efa\u5957\u63a5\u5b57\u65f6\uff0c\u5b83\u88ab\u5047\u8bbe\u4e3a\u4e00\u4e2a\u4e3b\u52a8\u5957\u63a5\u5b57\uff0c listen \u51fd\u6570\u5c06\u4e3b\u52a8\u5957\u63a5\u5b57\u6362\u6210\u88ab\u52a8\u5957\u63a5\u5b57 \u672c\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u89c4\u5b9a\u4e86\u5185\u6838\u5e94\u8be5\u4e3a\u76f8\u5e94\u5957\u63a5\u5b57\u6392\u961f\u7684\u6700\u5927\u8fde\u63a5\u6570 int accept(int sockfd, struct sockaddr *cliaddr, socklen_t *addrlen); accept \u7531\u670d\u52a1\u5668\u8c03\u7528\uff0c\u7528\u4e8e\u4ece\u5df2\u5b8c\u6210\u8fde\u63a5\u7684\u961f\u5217\u5bf9\u5934\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5df2\u5b8c\u6210\u8fde\u63a5\uff0c\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fdb\u7a0b\u7761\u7720\uff08\u9ed8\u8ba4\uff09\u3002\u5982\u679c accpet \u6210\u529f\uff0c\u8fd4\u56de\u503c\u662f\u5185\u6838\u81ea\u52a8\u751f\u6210\u7684\u5168\u65b0\u63cf\u8ff0\u7b26 \u6570\u636e\u4f20\u8f93 ssize_t send(int sockfd, const void *buf, size_t nbytes, int flags); ssize_t recv(int sockfd, void * buf, size_t nbytes, int flags); /* \u9762\u5411\u65e0\u8fde\u63a5 \u6307\u5b9a\u76ee\u6807\u5730\u5740 */ ssize_t sendto(int socked, const void *buf, size_t n_bytes, int flags, const struct sockaddr *destaddr, socklen_t destlen); ssize_t recvfrom(int socked, const void *buf, size_t len, int flags, const struct sockaddr *srcaddr, socklen_t *srclen); flag \u63cf\u8ff0 MSG_CMSG_CLOEXEC \u4e3aUNIX\u57df\u5957\u63a5\u5b57\u4e0a\u63a5\u6536\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bbe\u7f6e\u6267\u884c\u65f6\u5173\u95ed\u6807\u5fd7 MSG_DONTWAIT \u542f\u7528\u975e\u963b\u585e\u64cd\u4f5c\uff08\u76f8\u5f53\u4e8e\u4f7f\u7528O_NONBLOCK\uff09 MSG_ERRQUEUE \u63a5\u6536\u9519\u8bef\u4fe1\u606f\u4f5c\u4e3a\u8f85\u52a9\u6570\u636e MSG_OOB \u5982\u679c\u534f\u8bae\u652f\u6301\uff0c\u83b7\u53d6\u5e26\u5916\u6570\u636e MSG_PEEK \u8fd4\u56de\u6570\u636e\u5305\u5185\u5bb9\u800c\u4e0d\u771f\u6b63\u53d6\u8d70\u6570\u636e\u5305 MSG_TRUNC \u5373\u4f7f\u6570\u636e\u5305\u88ab\u622a\u65ad\uff0c\u4e5f\u8fd4\u56de\u6570\u636e\u5305\u7684\u5b9e\u9645\u957f\u5ea6 MSG_WAITALL \u7b49\u5f85\u76f4\u5230\u6240\u6709\u7684\u6570\u636e\u53ef\u7528\uff08\u4ec5SOCK_STREAM\uff09 \u5957\u63a5\u5b57\u9009\u9879 \u5957\u63a5\u5b57\u673a\u5236\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5957\u63a5\u5b57\u9009\u9879\u63a5\u53e3\u6765\u63a7\u5236\u5957\u63a5\u5b57\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u83b7\u53d6\u6216\u8bbe\u7f6e\u4e00\u4e0b3\u79cd \u901a\u7528\u9009\u9879\uff0c\u5de5\u4f5c\u5728\u6240\u6709\u7684\u5957\u63a5\u5b57\u7c7b\u578b\u4e0a \u5728\u5957\u63a5\u5b57\u5c42\u6b21\u7ba1\u7406\u7684\u9009\u9879\uff0c\u4f46\u662f\u4f9d\u8d56\u4e8e\u4e0b\u5c42\u534f\u8bae\u7684\u652f\u6301 \u7279\u5b9a\u4e8e\u67d0\u534f\u8bae\u7684\u9009\u9879\uff0c\u6bcf\u4e2a\u534f\u8bae\u72ec\u6709\u7684 #include sys/scoket.h int socksetopt(int sockfd, int level, int option, const void *val, socklen_t len); int getsockopt (int sockfd, int level, int option, void *val, socklen_t *lenp); SOL_SOCKET \u5e94\u7528\u5c42 \u9009\u9879\u540d\u79f0 \u8bf4\u660e \u6570\u636e\u7c7b\u578b SO_BROADCAST \u5141\u8bb8\u53d1\u9001\u5e7f\u64ad\u6570\u636e int SO_DEBUG \u5141\u8bb8\u8c03\u8bd5 int SO_DONTROUTE \u4e0d\u67e5\u627e\u8def\u7531 int SO_ERROR \u83b7\u5f97\u5957\u63a5\u5b57\u9519\u8bef int SO_KEEPALIVE \u4fdd\u6301\u8fde\u63a5 int SO_LINGER \u5ef6\u8fdf\u5173\u95ed\u8fde\u63a5 struct linger SO_OOBINLINE \u5e26\u5916\u6570\u636e\u653e\u5165\u6b63\u5e38\u6570\u636e\u6d41 int SO_RCVBUF \u63a5\u6536\u7f13\u51b2\u533a\u5927\u5c0f int SO_SNDBUF \u53d1\u9001\u7f13\u51b2\u533a\u5927\u5c0f int SO_RCVLOWAT \u63a5\u6536\u7f13\u51b2\u533a\u4e0b\u9650 int SO_SNDLOWAT \u53d1\u9001\u7f13\u51b2\u533a\u4e0b\u9650 int SO_RCVTIMEO \u63a5\u6536\u8d85\u65f6 struct timeval SO_SNDTIMEO \u53d1\u9001\u8d85\u65f6 struct timeval SO_REUSEADDR \u5141\u8bb8\u91cd\u7528\u672c\u5730\u5730\u5740\u548c\u7aef\u53e3 int SO_TYPE \u83b7\u5f97\u5957\u63a5\u5b57\u7c7b\u578b int SO_BSDCOMPAT \u4e0eBSD\u7cfb\u7edf\u517c\u5bb9 int IPPROTO_IP IP\u5c42/\u7f51\u7edc\u5c42 \u9009\u9879\u540d\u79f0 \u8bf4\u660e \u6570\u636e\u7c7b\u578b IP_HDRINCL \u5728\u6570\u636e\u5305\u4e2d\u5305\u542bIP\u9996\u90e8 int IP_OPTINOS IP\u9996\u90e8\u9009\u9879 int IP_TOS \u670d\u52a1\u7c7b\u578b IP_TTL \u751f\u5b58\u65f6\u95f4 int IP_ADD_MEMBERSHIP \u5c06\u6307\u5b9a\u7684IP\u52a0\u5165\u591a\u64ad\u7ec4 struct ip_mreq IPPRO_TCP \u4f20\u8f93\u5c42 \u9009\u9879\u540d\u79f0 \u8bf4\u660e \u6570\u636e\u7c7b\u578b TCP_MAXSEG TCP\u6700\u5927\u6570\u636e\u6bb5\u7684\u5927\u5c0f int TCP_NODELAY \u4e0d\u4f7f\u7528Nagle\u7b97\u6cd5 int \u9762\u5411\u8fde\u63a5\u7684\u7f16\u7a0b \u9762\u5411\u65e0\u8fde\u63a5\u7684\u7f16\u7a0b \u5e76\u53d1\u670d\u52a1\u5668 IO\u591a\u8def\u590d\u7528 \u591a\u7ebf\u7a0b \u5e7f\u64ad\u4e0e\u7ec4\u64ad","title":"\u7f51\u7edc\u7f16\u7a0b"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_1","text":"","title":"\u7f51\u7edc\u7f16\u7a0b"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_2","text":"| A\u7c7b | B\u7c7b | C\u7c7b | D\u7c7b \u5b50\u7f51\u63a9\u7801","title":"\u7f51\u7edc\u57fa\u672c\u77e5\u8bc6"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#osi","text":"","title":"OSI\u6a21\u578b"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#tcpip","text":"","title":"TCP/IP"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_3","text":"","title":"\u5957\u63a5\u5b57\u7f16\u7a0b"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_4","text":"#include sys/socket.h int socket(int domain, int type, int flag); /* \u6210\u529f\u8fd4\u56de\u63cf\u8ff0\u7b26\uff0c\u51fa\u9519\u8fd4\u56de-1 */ \u53c2\u6570 domain \u786e\u5b9a\u901a\u4fe1\u7684\u7279\u6027\uff0c\u5305\u62ec\u5730\u5740\u683c\u5f0f\uff0c\u4ee5 AF_ \u5f00\u5934\uff0c\u610f\u6307\u5730\u5740\u65cf\uff08 address family \uff09 domain \u63cf\u8ff0 AF_INET IPv4\u56e0\u7279\u7f51\u57df AF_INET6 IPv4\u56e0\u7279\u7f51\u57df AF_UNIX UNIX\u57df AF_UPSPEC \u672a\u6307\u5b9a \u53c2\u6570 type \u786e\u5b9a\u5957\u63a5\u5b57\u7684\u7c7b\u578b type \u63cf\u8ff0 SOCK_DGRAM \u56fa\u5b9a\u957f\u5ea6\uff0c\u65e0\u8fde\u63a5\u7684\uff0c\u4e0d\u53ef\u9760\u62a5\u6587\u4f20\u9012 SOCK_RAM IP\u534f\u8bae\u7684\u6570\u636e\u62a5\u63a5\u53e3 SOCK_SEQPACKET \u56fa\u5b9a\u957f\u5ea6\uff0c\u6709\u5e8f\uff0c\u53ef\u9760\u7684\uff0c\u9762\u5411\u8fde\u63a5\u7684\u62a5\u6587\u4f20\u9012 SOCK_STREAM \u6709\u5e8f\uff0c\u53ef\u9760\uff0c\u53cc\u5411\uff0c\u9762\u5411\u8fde\u63a5\u7684\u5b57\u8282\u6d41 \u53c2\u6570 protocol \u901a\u5e38\u662f0\uff0c\u8868\u793a\u4e3a\u7ed9\u5b9a\u7684\u57df\u548c\u5957\u63a5\u5b57\u7c7b\u578b\u9009\u62e9\u9ed8\u8ba4\u534f\u8bae protocol \u63cf\u8ff0 IPPROTO_IP IPv4\u7f51\u9645\u534f\u8bae IPPROTO_IPV6 IPv6\u7f51\u9645\u534f\u8bae IPPROTO_ICMP \u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae IPPROTO_RAW \u539f\u59cbIP\u6570\u636e\u5305\u534f\u8bae IPPROTO_TCP \u4f20\u8f93\u63a7\u5236\u534f\u8bae IPPROTO_UDP \u7528\u6237\u6570\u636e\u62a5\u534f\u8bae","title":"\u521b\u5efa\u5957\u63a5\u5b57"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_5","text":"#include arpa/inet.h uint32_t htonl (uint32_t hostint32); /* host to net \u8fd4\u56de\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a\u768432\u4f4d\u6574\u6570 */ uint16_t htons (uint32_t hostint16); /* host to net \u8fd4\u56de\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a\u768416\u4f4d\u6574\u6570 */ uint32_t ntohl (uint32_t netint32); /* net to host \u8fd4\u56de\u4e3b\u673a\u5b57\u8282\u5e8f\u8868\u793a\u768432\u4f4d\u6574\u6570 */ uint16_t ntohs (uint16_t netint16); /* net to host \u8fd4\u56de\u4e3b\u673a\u5b57\u8282\u5e8f\u8868\u793a\u768416\u4f4d\u6574\u6570 */","title":"\u5b57\u8282\u5e8f"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_6","text":"linux\u4e2d\u5730\u5740\u7ed3\u6784\u4f53\u5b9a\u4e49\u5982\u4e0b struct sockaddr { sa_family_t sa_family; /* address family */ char sa_data[14]; /* variable-length address */ }; IPv4\u56e0\u7279\u7f51\u57df\uff08 AF_INET \uff09\u4e2d\u5730\u5740\u7ed3\u6784\u8868\u793a\u5982\u4e0b #include netinet/in.h struct in_addr { in_addr_t s_addr; }; struct scokaddr_in { sa_family_t sin_family; in_port_t sin_port; struct in_addr sin_addr; } IPv6\u56e0\u7279\u7f51\u57df\uff08 AF_INET6 \uff09\u4e2d\u5730\u5740\u7ed3\u6784\u8868\u793a\u5982\u4e0b struct in6_addr { uint8_t s6_addr[16]; }; struct sockaddr_in6 { sa_family_t sin6_family; in_port_t sin6_port; uint32_t sin6_flowinfo; struct in6_addr sin6_addr; uint32_t sin6_scope_id; /* set of interfaces for scope */ } \u5b83\u4eec\u4f1a\u88ab\u5f3a\u5236\u8f6c\u6362\u6210 sockaddr \u8f93\u5165\u5230\u5957\u63a5\u5b57\u7684\u5386\u7a0b\u4e2d","title":"\u5730\u5740"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_7","text":"#include sys/socket/h int bind(int sockfd, const struct sockaddr *addr, socklen_t len);","title":"\u5957\u63a5\u5b57\u4e0e\u5730\u5740\u5173\u8054"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_8","text":"int connect (int sockfd, const struct sockaddr *addr, socklen_t len); \u8fd9\u91cc\u7684\u5730\u5740\u662f\u60f3\u4e0e\u4e4b\u901a\u4fe1\u7684\u670d\u52a1\u5668\u5730\u5740 int listen(int sockfd, int backlog); \u670d\u52a1\u5668\u8c03\u7528 listen \u6765\u5ba3\u544a\u4ed6\u613f\u610f\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42\uff0c listen \u505a\u4e24\u4ef6\u4e8b\uff0c \u5f53 socket \u521b\u5efa\u5957\u63a5\u5b57\u65f6\uff0c\u5b83\u88ab\u5047\u8bbe\u4e3a\u4e00\u4e2a\u4e3b\u52a8\u5957\u63a5\u5b57\uff0c listen \u51fd\u6570\u5c06\u4e3b\u52a8\u5957\u63a5\u5b57\u6362\u6210\u88ab\u52a8\u5957\u63a5\u5b57 \u672c\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u89c4\u5b9a\u4e86\u5185\u6838\u5e94\u8be5\u4e3a\u76f8\u5e94\u5957\u63a5\u5b57\u6392\u961f\u7684\u6700\u5927\u8fde\u63a5\u6570 int accept(int sockfd, struct sockaddr *cliaddr, socklen_t *addrlen); accept \u7531\u670d\u52a1\u5668\u8c03\u7528\uff0c\u7528\u4e8e\u4ece\u5df2\u5b8c\u6210\u8fde\u63a5\u7684\u961f\u5217\u5bf9\u5934\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5df2\u5b8c\u6210\u8fde\u63a5\uff0c\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fdb\u7a0b\u7761\u7720\uff08\u9ed8\u8ba4\uff09\u3002\u5982\u679c accpet \u6210\u529f\uff0c\u8fd4\u56de\u503c\u662f\u5185\u6838\u81ea\u52a8\u751f\u6210\u7684\u5168\u65b0\u63cf\u8ff0\u7b26","title":"\u8fde\u63a5"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_9","text":"ssize_t send(int sockfd, const void *buf, size_t nbytes, int flags); ssize_t recv(int sockfd, void * buf, size_t nbytes, int flags); /* \u9762\u5411\u65e0\u8fde\u63a5 \u6307\u5b9a\u76ee\u6807\u5730\u5740 */ ssize_t sendto(int socked, const void *buf, size_t n_bytes, int flags, const struct sockaddr *destaddr, socklen_t destlen); ssize_t recvfrom(int socked, const void *buf, size_t len, int flags, const struct sockaddr *srcaddr, socklen_t *srclen); flag \u63cf\u8ff0 MSG_CMSG_CLOEXEC \u4e3aUNIX\u57df\u5957\u63a5\u5b57\u4e0a\u63a5\u6536\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bbe\u7f6e\u6267\u884c\u65f6\u5173\u95ed\u6807\u5fd7 MSG_DONTWAIT \u542f\u7528\u975e\u963b\u585e\u64cd\u4f5c\uff08\u76f8\u5f53\u4e8e\u4f7f\u7528O_NONBLOCK\uff09 MSG_ERRQUEUE \u63a5\u6536\u9519\u8bef\u4fe1\u606f\u4f5c\u4e3a\u8f85\u52a9\u6570\u636e MSG_OOB \u5982\u679c\u534f\u8bae\u652f\u6301\uff0c\u83b7\u53d6\u5e26\u5916\u6570\u636e MSG_PEEK \u8fd4\u56de\u6570\u636e\u5305\u5185\u5bb9\u800c\u4e0d\u771f\u6b63\u53d6\u8d70\u6570\u636e\u5305 MSG_TRUNC \u5373\u4f7f\u6570\u636e\u5305\u88ab\u622a\u65ad\uff0c\u4e5f\u8fd4\u56de\u6570\u636e\u5305\u7684\u5b9e\u9645\u957f\u5ea6 MSG_WAITALL \u7b49\u5f85\u76f4\u5230\u6240\u6709\u7684\u6570\u636e\u53ef\u7528\uff08\u4ec5SOCK_STREAM\uff09","title":"\u6570\u636e\u4f20\u8f93"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_10","text":"\u5957\u63a5\u5b57\u673a\u5236\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5957\u63a5\u5b57\u9009\u9879\u63a5\u53e3\u6765\u63a7\u5236\u5957\u63a5\u5b57\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u83b7\u53d6\u6216\u8bbe\u7f6e\u4e00\u4e0b3\u79cd \u901a\u7528\u9009\u9879\uff0c\u5de5\u4f5c\u5728\u6240\u6709\u7684\u5957\u63a5\u5b57\u7c7b\u578b\u4e0a \u5728\u5957\u63a5\u5b57\u5c42\u6b21\u7ba1\u7406\u7684\u9009\u9879\uff0c\u4f46\u662f\u4f9d\u8d56\u4e8e\u4e0b\u5c42\u534f\u8bae\u7684\u652f\u6301 \u7279\u5b9a\u4e8e\u67d0\u534f\u8bae\u7684\u9009\u9879\uff0c\u6bcf\u4e2a\u534f\u8bae\u72ec\u6709\u7684 #include sys/scoket.h int socksetopt(int sockfd, int level, int option, const void *val, socklen_t len); int getsockopt (int sockfd, int level, int option, void *val, socklen_t *lenp); SOL_SOCKET \u5e94\u7528\u5c42 \u9009\u9879\u540d\u79f0 \u8bf4\u660e \u6570\u636e\u7c7b\u578b SO_BROADCAST \u5141\u8bb8\u53d1\u9001\u5e7f\u64ad\u6570\u636e int SO_DEBUG \u5141\u8bb8\u8c03\u8bd5 int SO_DONTROUTE \u4e0d\u67e5\u627e\u8def\u7531 int SO_ERROR \u83b7\u5f97\u5957\u63a5\u5b57\u9519\u8bef int SO_KEEPALIVE \u4fdd\u6301\u8fde\u63a5 int SO_LINGER \u5ef6\u8fdf\u5173\u95ed\u8fde\u63a5 struct linger SO_OOBINLINE \u5e26\u5916\u6570\u636e\u653e\u5165\u6b63\u5e38\u6570\u636e\u6d41 int SO_RCVBUF \u63a5\u6536\u7f13\u51b2\u533a\u5927\u5c0f int SO_SNDBUF \u53d1\u9001\u7f13\u51b2\u533a\u5927\u5c0f int SO_RCVLOWAT \u63a5\u6536\u7f13\u51b2\u533a\u4e0b\u9650 int SO_SNDLOWAT \u53d1\u9001\u7f13\u51b2\u533a\u4e0b\u9650 int SO_RCVTIMEO \u63a5\u6536\u8d85\u65f6 struct timeval SO_SNDTIMEO \u53d1\u9001\u8d85\u65f6 struct timeval SO_REUSEADDR \u5141\u8bb8\u91cd\u7528\u672c\u5730\u5730\u5740\u548c\u7aef\u53e3 int SO_TYPE \u83b7\u5f97\u5957\u63a5\u5b57\u7c7b\u578b int SO_BSDCOMPAT \u4e0eBSD\u7cfb\u7edf\u517c\u5bb9 int IPPROTO_IP IP\u5c42/\u7f51\u7edc\u5c42 \u9009\u9879\u540d\u79f0 \u8bf4\u660e \u6570\u636e\u7c7b\u578b IP_HDRINCL \u5728\u6570\u636e\u5305\u4e2d\u5305\u542bIP\u9996\u90e8 int IP_OPTINOS IP\u9996\u90e8\u9009\u9879 int IP_TOS \u670d\u52a1\u7c7b\u578b IP_TTL \u751f\u5b58\u65f6\u95f4 int IP_ADD_MEMBERSHIP \u5c06\u6307\u5b9a\u7684IP\u52a0\u5165\u591a\u64ad\u7ec4 struct ip_mreq IPPRO_TCP \u4f20\u8f93\u5c42 \u9009\u9879\u540d\u79f0 \u8bf4\u660e \u6570\u636e\u7c7b\u578b TCP_MAXSEG TCP\u6700\u5927\u6570\u636e\u6bb5\u7684\u5927\u5c0f int TCP_NODELAY \u4e0d\u4f7f\u7528Nagle\u7b97\u6cd5 int","title":"\u5957\u63a5\u5b57\u9009\u9879"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_11","text":"","title":"\u9762\u5411\u8fde\u63a5\u7684\u7f16\u7a0b"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_12","text":"","title":"\u9762\u5411\u65e0\u8fde\u63a5\u7684\u7f16\u7a0b"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_13","text":"","title":"\u5e76\u53d1\u670d\u52a1\u5668"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#io","text":"","title":"IO\u591a\u8def\u590d\u7528"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_14","text":"","title":"\u591a\u7ebf\u7a0b"},{"location":"linux/\u7f51\u7edc\u7f16\u7a0b/#_15","text":"","title":"\u5e7f\u64ad\u4e0e\u7ec4\u64ad"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/","text":"\u8fdb\u7a0b \u8fdb\u7a0b\u57fa\u672c \u56db\u8981\u7d20 \u6709\u4e00\u6bb5\u7a0b\u5e8f\u4f9b\u5176\u6267\u884c\u3002\u4e0d\u4e00\u5b9a\u662f\u8fdb\u7a0b\u6240\u4e13\u6709\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6\u8fdb\u7a0b\u5171\u7528 \u6709\u8d77\u7801\u7684 \u201c\u79c1\u6709\u8d22\u4ea7\u201d \uff0c\u8fd9\u5c31\u662f\u8fdb\u7a0b\u7684\u4e13\u7528\u7684\u7cfb\u7edf\u5806\u6808\u7a7a\u95f4 \u6709 \u201c\u6237\u53e3\u201d \uff0c\u8fd9\u5c31\u662f\u5728\u5185\u6838\u4e2d\u6709\u4e00\u4e2a task_struct \u7684\u6570\u636e\u7ed3\u6784\uff0c\u6216\u6210\u4e3a \u201c\u8fdb\u7a0b\u63a7\u5236\u5757\u201d \uff0c\u6709\u4e86\u8fd9\u4e2a\u80fd\u6210\u4e3a\u5185\u6838\u8c03\u5ea6\u7684\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d\u63a5\u53d7\u5185\u6838\u7684\u8c03\u5ea6\u3002 \u6709\u72ec\u7acb\u7684\u50a8\u5b58\u7a7a\u95f4\uff0c\u610f\u5473\u7740\u6709\u4e13\u6709\u7684\u7528\u6237\u7a7a\u95f4\u3002\u8fdb\u4e00\u6b65\u610f\u5473\u7740\u51fa\u6765\u524d\u8ff0\u7684\u7cfb\u7edf\u7a7a\u95f4\u5806\u6808\u8fd8\u6709\u4e13\u7528\u7684\u7528\u6237\u7a7a\u95f4\u5806\u6808 \u8fd9\u56db\u6761\u662f\u5fc5\u8981\u7684\u3002\u5982\u679c\u53ea\u5177\u5907\u524d\u9762\u4e24\u6761\u800c\u7f3a\u4e86\u7b2c\u56db\u6761\uff0c\u90a3\u5c31\u6210\u4e3a \u201c\u7ebf\u7a0b\u201d , \u5982\u679c\u6ca1\u6709\u7528\u6237\u7a7a\u95f4\u5c31\u79f0\u4e3a \u201c\u5185\u6838\u7ebf\u7a0b\u201d \u3002\u5982\u679c\u5171\u4eab\u7528\u6237\u7a7a\u95f4\u5c31\u79f0\u4e3a \u201c\u7528\u6237\u7a7a\u95f4\u201d \u8fdb\u7a0b\u7ec8\u6b62 8\u79cd\u65b9\u5f0f\u662f\u8fdb\u7a0b\u7ec8\u6b62\uff0c\u5176\u4e2d5\u79cd\u662f\u6b63\u5e38\u65b9\u5f0f\uff1a \u4ecemain \u8fd4\u56de \u8c03\u7528 exit \u8c03\u7528 _exit \u6216 _Exit \u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u4ece\u5176\u542f\u52a8\u4f8b\u7a0b\u8fd4\u56de \u4ece\u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528 pthread_exit \u5f02\u5e38\u7ec8\u6b62 \u8c03\u7528 abort \u63a5\u6536\u5230\u4e00\u4e2a\u4fe1\u53f7 \u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u53d6\u6d88\u8bf7\u6c42\u4f5c\u51fa\u54cd\u5e94 \u8fdb\u7a0b\u63a7\u5236 \u51fd\u6570fork fork \u51fd\u6570\u88ab\u8c03\u7528\u4e00\u6b21\u8fd4\u56de\u4e24\u6b21\uff0c\u5b50\u8fdb\u7a0b\u8fd4\u56de\u503c\u662f0\uff0c\u7236\u8fdb\u7a0b\u8fd4\u56de\u503c\u662f\u5b50\u8fdb\u7a0b\u7684ID vfork vfork \u548c fork \u533a\u522b\u662f\uff1avfork\u4fdd\u8bc1\u5b50\u8fdb\u7a0b\u5148\u8fd0\u884c\uff0c\u5728\u5b83\u8c03\u7528 exec \u6216 exit \u4e4b\u540e\u7236\u8fdb\u7a0b\u624d\u53ef\u80fd\u88ab\u8c03\u5ea6\u8fd0\u884c\u3002\u5f53\u5b50\u8fdb\u7a0b\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u4efb\u610f\u4e00\u4e2a\u65f6\uff0c\u7236\u8fdb\u7a0b\u4f1a\u6062\u590d\u8fd0\u884c\u3002\uff08\u5982\u679c\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e4b\u524d\u5b50\u8fdb\u7a0b\u4f9d\u8d56\u7236\u8fdb\u7a0b\u7684\u8fdb\u4e00\u6b65\u52a8\u4f5c\uff0c\u5219\u4f1a\u6b7b\u9501\uff09 exit 3\u4e2a\u7ec8\u6b62\u51fd\u6570\uff08 exit , _exit , _Exit \uff09\u5c06\u5176 \u9000\u51fa\u72b6\u6001 \u4f5c\u4e3a\u53c2\u6570\u4f20\u9001\u7ed9\u51fd\u6570\u3002\u5728\u5f02\u5e38\u7ec8\u6b62\u60c5\u51b5\uff0c\u5185\u6838\u4ea7\u751f\u4e00\u4e2a\u6307\u793a\u5f02\u5e38\u7ec8\u6b62\u539f\u56e0\u7684\u4e2d\u6b62\u72b6\u6001\uff0c\u7236\u8fdb\u7a0b\u7528 wait \u548c waitpid \u83b7\u53d6\u5176\u72b6\u6001 wait\u548cwaitpid \u8fdb\u7a0b\u7ec8\u6b62\u65f6\uff0c\u5185\u6838\u5c31\u50cf\u5176\u7236\u8fdb\u7a0b\u53d1\u9001 SIGCHLD \u4fe1\u53f7\uff0c\u8fd9\u662f\u4e2a\u5f02\u6b65\u4e8b\u4ef6\uff0c\u7236\u8fdb\u7a0b\u53ef\u4ee5\u9009\u62e9\u5ffd\u7565\u8be5\u4fe1\u53f7\uff0c\u6216\u8005\u63d0\u4f9b\u5904\u7406\u51fd\u6570\u3002 #include sys/wait.h pid_t wait(int *static); pid_t wait_pid(pit_t pid, int *static, int options) \u5982\u679c\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62\uff0c wait \u7acb\u5373\u8fd4\u56de\u5e76\u53d6\u5f97\u5b50\u8fdb\u7a0b\u7684\u72b6\u6001\uff0c\u5426\u5219\u963b\u585e\uff0c\u76f4\u5230\u5b50\u8fdb\u7a0b\u7ed3\u675f wait_pid \u4e2d\u7684 pid \u53c2\u6570\u4f5c\u7528\u5982\u4e0b; pid == -1 : \u7b49\u5f85\u4efb\u4e00\u5b50\u8fdb\u7a0b pid 0 : \u7b49\u5f85\u8fdb\u7a0bID\u4e0epid\u76f8\u7b49\u7684\u5b50\u8fdb\u7a0b pid == 0 : \u7b49\u5f85\u7ec4ID\u7b49\u4e8e\u8c03\u7528\u8fdb\u7a0b\u7ec4ID\u7684\u4efb\u4e00\u5b50\u8fdb\u7a0b pid -1 : \u7b49\u5f85\u7ec4ID\u7b49\u4e8epid\u7edd\u5bf9\u503c\u7684\u4efb\u4e00\u5b50\u8fdb\u7a0b options \u53c2\u6570\uff1a \u5e38\u91cf \u8bf4\u660e WCONTINUED \u82e5\u5b9e\u73b0\u652f\u6301\u4f5c\u4e1a\u63a7\u5236\uff0c\u7531pid\u6307\u5b9a\u7684\u4efb\u4e00\u5b50\u8fdb\u7a0b\u5728\u505c\u6b62\u540e\u5df2\u7ecf\u7ee7\u7eed\uff0c\u4f46\u5176\u72b6\u6001\u5c1a\u672a\u62a5\u544a\uff0c\u5219\u8fd4\u56de\u5176\u72b6\u6001 WNOHANG \u82e5\u7531pid\u6307\u5b9a\u7684\u5b50\u8fdb\u7a0b\u5e76\u4e0d\u662f\u7acb\u5373\u53ef\u7528\u7684\uff0c\u5219waitpid\u4e0d\u963b\u585e\uff0c\u6b64\u65f6\u8fd4\u56de\u503c\u662f0 WUNTRACED \u82e5\u5b9e\u73b0\u652f\u6301\u4f5c\u4e1a\u63a7\u5236\uff0c\u7531pid\u6307\u5b9a\u7684\u4efb\u4e00\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u505c\u6b62\u72b6\u6001\uff0c\u5e76\u4e14\u5176\u72b6\u6001\u5c1a\u672a\u62a5\u544a\uff0c\u5219\u8fd4\u56de\u5176\u72b6\u6001 exec #include unistd.h int execl(const char *pathname, const char * arg0, ... /* (char *) 0 */); int execv(const char *pathname, char *const argv[] ); int execle(const char *pathname, const char * arg0, ... /* (char *)0, char *const envp[] */); int execve(const char *pathname, char *const argv[], char *constenvp[] ); int execlp(const char *filename, const char * arg0, ... /* (char *) 0 */); int execvp(const char *filename, char *const argv[] ); \u516d\u4e2a\u51fd\u6570\u8fd4\u56de\uff1a\u82e5\u51fa\u9519\u5219\u4e3a- 1\uff0c\u82e5\u6210\u529f\u5219\u4e0d\u8fd4\u56de system \u8fdb\u7a0b\u5173\u7cfb \u5b64\u513f\u8fdb\u7a0b \u7236\u8fdb\u7a0b\u5148\u9000\u51fa \u50f5\u5c38\u8fdb\u7a0b \u5b88\u62a4\u8fdb\u7a0b ps\u547d\u4ee4 \u6253\u5370\u7cfb\u7edf\u5404\u4e2a\u8fdb\u7a0b\u7684\u72b6\u6001 ps -axj -a : \u663e\u793a\u6709\u5176\u4ed6\u7528\u6237\u6240\u62e5\u6709\u7684\u8fdb\u7a0b\u7684\u72b6\u6001 -x :\u663e\u793a\u6ca1\u6709\u63a7\u5236\u7ec8\u7aef\u7684\u8fdb\u7a0b\u72b6\u6001 -j :\u663e\u793a\u4e0e\u4f5c\u4e1a\u76f8\u5173\u7684\u4fe1\u606f \u7f16\u7a0b\u89c4\u5219 \u8c03\u7528 umask \u5c06\u6587\u4ef6\u6a21\u5f0f\u521b\u5efa\u5c4f\u853d\u5b57\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5df2\u77e5\u503c \u8c03\u7528fork \uff0c\u7136\u540e\u4f7f\u7236\u8fdb\u7a0bexit\u3002 \u8c03\u7528 setsid \u521b\u5efa\u65b0\u4f1a\u8bdd\uff0c \u4f7f\u8c03\u7528\u8fdb\u7a0b\uff1a \u6210\u4e3a\u65b0\u4f1a\u8bdd\u7684\u9996\u8fdb\u7a0b \u6210\u4e3a\u4e00\u4e2a\u65b0\u8fdb\u7a0b\u7ec4\u7684\u7ec4\u957f\u8fdb\u7a0b \u6ca1\u6709\u63a7\u5236\u7ec8\u7aef \u5c06\u5f53\u524d\u76ee\u5f55\u66f4\u6539\u4e3a\u6839\u76ee\u5f55 \u5173\u95ed\u4e0d\u5728\u9700\u8981\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 \u67d0\u4e9b\u5b88\u62a4\u8fdb\u7a0b\u6253\u5f00 /dev/null \u4f7f\u5176\u5177\u6709\u6587\u4ef6\u63cf\u8ff0\u7b260\uff0c1\u548c2\uff0c\u8fd9\u6837\u4efb\u4f55\u4e00\u4e2a\u89c6\u56fe\u8bfbstdin\uff0cstdout\u548cstderr\u7684\u5e93\u4f8b\u7a0b\u90fd\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u6548\u679c #include syslog.h #include fcntl.h #include sys/resource.h void daemoize(const char *cmd) { int i, fd0, fd1, fd2; pid_t pid; struct rlimit rl; struct sigaction sa; /* clear file creation mask */ umask(0); /*get maxinum number of file descriptors*/ if (getrlimit(RLIMIT_NOFILE, rl) 0) { err_quit( %s: can`t get file limit ,cmd); } /*become a session leader to lose controlling TTY*/ if ((pid = fork()) 0) { err_quit( %s: can`t fork ,cmd); } else if(pid != 0) { exit(0); } setsid(); /* change the current working directory to the root so * we won`t prevent file systems form being unmounted */ if(chdir( / ) 0) { err_quit( %s,can`t change directory to / ,cmd); } /* close all open file descriptors*/ if (rl.rlim_max == RLIM_INFINITY) { rl.rlim_max = 1024; } for (i = 0; i rl.rlim_max; i++) { close(i); } /* attach file descriptors 0,1,2 to /dev/null */ fd0 = open( /dev/null , O_RDWR); fd1 = dup(0); fd2 = dup(0); /* initialize the log file*/ openlog(cmd,LOG_CONS, LOG_DAEMON); if (fd0 != 0 || fd1 != 1|| fd2 != 2) { syslog(LOG_ERR, unexpected file decriptors ); exit(1); } } \u8fdb\u7a0b\u95f4\u901a\u4fe1 \u7ba1\u9053 \u65e0\u540d\u7ba1\u9053 \u4e00\u822c\u662f\u534a\u53cc\u5de5\u7684 \u53ea\u80fd\u5728\u5177\u6709\u516c\u5171\u7956\u5148\u7684\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u4f7f\u7528 #include unistd.h int pipe(int fd[2]); fd \u4f46\u4f1a\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c fd[0] \u4e3a\u8bfb\u6253\u5f00\uff0c fd[1] \u4e3a\u5199\u6253\u5f00 \u5f53\u7ba1\u9053\u7684\u4e00\u7aef\u88ab\u5173\u95ed\u540e\uff0c\u4e0b\u5217\u4e24\u6761\u89c4\u5219\u8d77\u4f5c\u7528 \u5f53\u8bfb\u4e00\u4e2a\u5199\u7aef\u5df2\u88ab\u5173\u95ed\u7684\u7ba1\u9053\u65f6\uff0c\u6240\u6709\u6570\u636e\u8bfb\u51fa\u540e\uff0cread\u8fd4\u56de0\uff0c\u8868\u793a\u6587\u4ef6\u7ed3\u675f\u3002 \u5982\u679c\u5199\u4e00\u4e2a\u8bfb\u7aef\u5df2\u88ab\u5173\u95ed\u7684\u7ba1\u9053\u65f6\uff0c\u5219\u4ea7\u751f\u4fe1\u53f7 SIGPIPE FIFO(\u6709\u540d\u7ba1\u9053) \u4e0d\u76f8\u5173\u7684\u8fdb\u7a0b\u4e5f\u80fd\u4ea4\u6362\u6570\u636e #include sys/stat.h int mkfifo(const char *path, mode_t mode); \u6d88\u606f\u961f\u5217 #include sys/msg.h int msgget(key_t key, int flag); /* cmd\u6307\u5b9a\u6267\u884c\u7684\u547d\u4ee4 * IPC_STAT: \u53d6\u6b21\u961f\u5217\u7684msqid_ds\u7ed3\u6784\uff0c\u653e\u5165buf\u4e2d * IPC_SET: \u8bbe\u7f6e\u961f\u5217\u7684msqid_ds\u7ed3\u6784\u4f53 * IPC_RMID: \u5220\u9664\u8be5\u6d88\u606f\u961f\u5217 */ int msgctl(int msgpid, int cmd, struct msqid_ds *buf); int msgsnd(int msgid, const void * ptr, size_t nbytes, int flags); int msgrcv(int msgid, const void * ptr, size_t nbytes, long type, int flags); \u6d88\u606f\u961f\u5217\u53d1\u9001\u4e2d\u7684 ptr \u6307\u5411\u7ed3\u6784\u4f53\uff0c struct mymsg { long type; char mtext[32]; } nbytes \u957f\u5ea6\u4e3a sizof(struct mymsg) - sizeof (long) ; \u82e5 flag \u5b9a\u4e49\u4e3a IPC_NOWAIT \u5219\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u4f1a\u963b\u585e\u3002 \u6d88\u606f\u961f\u5217\u63a5\u6536\u4e2d\u7684type\u4f7f\u7528\u5982\u4e0b\uff1b type == 0 : \u8fd4\u56de\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u6d88\u606f type 0 \uff1a \u8fd4\u56de\u961f\u5217\u4e2d\u6d88\u606f\u7c7b\u578b\u4e3a type \u7684\u7b2c\u4e00\u4e2a\u6d88\u606f type 0 : \u8fd4\u56de\u961f\u5217\u4e2d\u6d88\u606f\u7c7b\u578b\u503c\u5c0f\u4e8e type \u7edd\u5bf9\u503c\u5f97\u6d88\u606f\uff0c\u82e5\u6709\u82e5\u5e72\u4e2a\uff0c\u5219\u53d6\u7c7b\u578b\u503c\u6700\u5c0f\u7684 \u4fe1\u53f7\u91cf #include sys/sem.h int semget(key_t key, int mems, int flags); union semun { int value; /* for SETVAL*/ struct semid_ds *buf; /* for IPC_STAT and IPC_SET */ unsigned short *array; /* for GETALL and SETALL*/ }; int semctl(int semid, int semnum, int cmd,... /* union semun arg*/); struct sembuf{ ushort sem_num;/*member#inset(0,1,\u2026,nsems-1*/ short sem_op; /*operation(negative,0,orpasitive*/) short sem_flg;/*IPC_NOWAIT,SEM_UNDO*/ }; int semop(int semid, struct sembuf semoparray[], size_t nops); cmd \u53c2\u6570\u6307\u5b9a\u4e8610\u4e2d\u547d\u4ee4 IPC_STAT\u5bf9\u6b64\u96c6\u5408\u53d6 semid_ds \u7ed3\u6784\uff0c\u5e76\u5b58\u653e\u5728\u7531 arg.buf \u6307\u5411\u7684\u7ed3\u6784\u4e2d\u3002 IPC_SET\u6309\u7531 arg.buf \u6307\u5411\u7684\u7ed3\u6784\u4e2d\u7684\u503c\u8bbe\u7f6e\u4e0e\u6b64\u96c6\u5408\u76f8\u5173\u7ed3\u6784\u4e2d\u7684\u4e0b\u5217\u4e09\u4e2a\u5b57\u6bb5\u503c\uff1a sem_perm.uid,sem_perm.gid \u548c sem_perm.mode \u3002\u6b64\u547d\u4ee4\u53ea\u80fd\u7531\u4e0b\u5217\u4e24\u79cd\u8fdb\u7a0b\u6267\u884c\uff1a\u4e00\u79cd\u662f\u5176\u6709 \u6548\u7528\u6237ID\u7b49\u4e8e sem_perm.cuid \u6216 sem_perm.uid \u7684\u8fdb\u7a0b;\u53e6\u4e00\u79cd\u662f\u5177\u6709\u8d85\u7ea7\u7528\u6237\u7279\u6743\u7684\u8fdb\u7a0b\u3002 IPC_RMID\u4ece\u7cfb\u7edf\u4e2d\u5220\u9664\u8be5\u4fe1\u53f7\u91cf\u96c6\u5408\u3002\u8fd9\u79cd\u5220\u9664\u662f\u7acb\u5373\u7684\u3002\u4ecd\u5728\u4f7f\u7528\u6b64\u4fe1\u53f7\u91cf\u7684 \u5176\u4ed6\u8fdb\u7a0b\u5728\u5b83\u4eec\u4e0b\u6b21\u610f\u56fe\u5bf9\u6b64\u4fe1\u53f7\u91cf\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5c06\u51fa\u9519\u8fd4\u56deEIDRM\u3002\u6b64\u547d\u4ee4\u53ea\u80fd\u7531\u4e0b\u5217\u4e24 \u79cd\u8fdb\u7a0b\u6267\u884c\uff1a\u4e00\u79cd\u662f\u5177\u6709\u6548\u7528\u6237ID\u7b49\u4e8e sem_perm.cuid \u6216 sem_perm.uid \u7684\u8fdb\u7a0b\uff1b\u53e6\u4e00\u79cd\u662f\u5177\u6709\u8d85 \u7ea7\u7528\u6237\u7279\u6743\u7684\u8fdb\u7a0b\u3002 GETVAL\u8fd4\u56de\u6210\u5458 semnum \u7684 semval \u503c\u3002 SETVAL\u8bbe\u7f6e\u6210\u5458 semnum \u7684 semval \u503c\u3002\u8be5\u503c\u7531 arg.val \u6307\u5b9a\u3002 GETPID\u8fd4\u56de\u6210\u5458 semnum \u7684 sempid \u503c\u3002 GETNCNT\u8fd4\u56de\u6210\u5458 semnum \u7684 semncnt \u503c\u3002 GETZCNT\u8fd4\u56de\u6210\u5458 semnum \u7684 semzcnt \u503c\u3002 GETALL\u53d6\u8be5\u96c6\u5408\u4e2d\u6240\u6709\u4fe1\u53f7\u91cf\u7684\u503c\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u653e\u5728\u7531 arg.array \u6307\u5411\u7684\u6570\u7ec4\u4e2d\u3002 SETALL\u6309 arg.array \u6307\u5411\u7684\u6570\u7ec4\u4e2d\u7684\u503c\u8bbe\u7f6e\u8be5\u96c6\u5408\u4e2d\u6240\u6709\u4fe1\u53f7\u91cf\u7684\u503c\u3002 semop \u4e2d sembuf \u7ed3\u6784\u4f53\u4e2d\u7684 sme_op \u4e3a\u6b63\uff0c\u8fd4\u56de\u8fdb\u7a0b\u5360\u7528\u7684\u8d44\u6e90\uff0c\u4e3a\u8d1f\u83b7\u53d6\u8be5\u8d44\u6e90\u3002 \u5171\u4eab\u5185\u5b58 \u5171\u4eab\u5b58\u50a8\u5141\u8bb8\u4e24\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u4e00\u5b9a\u7684\u5b58\u50a8\u533a\uff0c\u4fe1\u53f7\u91cf\u88ab\u7528\u6765\u5b9e\u73b0\u5171\u4eab\u5b58\u50a8\u7684\u540c\u6b65\u3002 #incldue sys/shm.h int shmget(key_t key, int size, int flag); /* cmd : IPC_STAT,IPC_SET,IPC_RAMID,SHM_LOCK, SHM_UNLOCK*/ int shmctl(int shmid, int cmd, struct shmid_ds buf); /*addr \u4e3a0 \u6b64\u6bb5\u8fde\u63a5\u5230\u6709\u5185\u6838\u9009\u62e9\u7684\u7b2c\u4e00\u4e2a\u5730\u5740\uff0c\u63a8\u8350\u4f7f\u7528*/ void *shmat(int shmid, void addr, int flag); int shmdt(void addr); \u7ebf\u7a0b \u5c31\u50cf\u8fdb\u7a0bID\u4e00\u6837\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4e5f\u6709\u4e00\u4e2aID\uff0c\u8fdb\u7a0bID\u5728\u6574\u4e2a\u7cfb\u7edf\u662f\u552f\u4e00\u7684\uff0c\u4f46\u7ebf\u7a0bID\u53ea\u6709\u5728\u5b83\u6240\u5c5e\u7684\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u6709\u610f\u4e49\u3002 \u7ebf\u7a0b\u7684\u521b\u5efa #include pthread.h int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine) (void *), void *arg); /* \u6210\u529f\u8fd4\u56de 0 */ \u7ebf\u7a0b\u7684\u7ec8\u6b62 \u5982\u679c\u8fdb\u7a0b\u4e2d\u7684\u4efb\u610f\u7ebf\u7a0b\u8c03\u7528\u4e86 exit \uff0c _exit \uff0c _Exit \u90a3\u4e48\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u7ec8\u6b62\u3002 \u5355\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc73\u79cd\u65b9\u5f0f\u9000\u51fa \u7ebf\u7a0b\u53ef\u4ee5\u7b80\u5355\u7684\u4ece\u542f\u52a8\u4f8b\u7a0b\u4e2d\u8fd4\u56de\uff0c\u8fd4\u56de\u503c\u662f\u7ebf\u7a0b\u7684\u9000\u51fa\u7801 \u7ebf\u7a0b\u53ef\u4ee5\u88ab\u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u53d6\u6d88 \u7ebf\u7a0b\u8c03\u7528 pthread_exit void pthread_exit(void *rval_ptr); /* rval_ptr \u662f\u4e00\u4e2a\u65e0\u7c7b\u578b\u7684\u6307\u9488\uff0c\u4e0e\u4f20\u7ed9\u542f\u52a8\u4f8b\u7a0b\u7684\u5355\u4e2a\u53c2\u6570\u7c7b\u4f3c\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u8c03\u7528 pthread_join\u8bbf\u95ee\u5230\u8fd9\u4e2a\u6307\u9488 */ int pthread_join(pthread_t thread, void ** rval_ptr) pthread_join \u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u6307\u5b9a\u7ebf\u7a0b\u7ec8\u6b62 int pthread_cancel(pthread_t tid); /* \u4ec5\u4ec5\u63d0\u51fa\u8bf7\u6c42\uff0c\u7ebf\u7a0b\u53ef\u9009\u62e9\u5ffd\u7565 */ \u7ebf\u7a0b\u540c\u6b65 \u4e92\u65a5\u91cf #include pthread.h int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restrict attr); int pthread_mutex_destroy(pthread_mutex_t *mutex); pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER; int pthread_mutex_lock(pthread_mutex_t *mutex); /* \u4e0d\u963b\u585e \uff0c\u6709\u9501\u65f6\u5c31\u5931\u8d25\u8fd4\u56deEBUSY*/ int pthread_mutex_trylock(pthread_mutex_t *mutex); int pthread_mutex_unlock(pthread_mutex_t *mutex); /* \u6210\u529f\u8fd4\u56de 0 */ \u907f\u514d\u6b7b\u9501 \u4f8b\u5982\uff0c\u7a0b\u5e8f\u4f7f\u7528\u4e00\u4e2a\u4ee5\u4e0a\u7684\u4e92\u65a5\u9501\uff0c\u5982\u679c\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u4e00\u76f4\u5360\u6709\u7b2c\u4e00\u4e2a\u4e92\u65a5\u91cf\uff0c\u5e76\u5728\u8bd5\u56fe\u9501\u4f4f\u7b2c\u4e8c\u4e2a\u65f6\u5904\u4e8e\u963b\u585e\uff0c\u4f46\u662f\u62e5\u6709\u7b2c\u4e8c\u4e2a\u4e92\u65a5\u91cf\u7684\u7ebf\u7a0b\u4e5f\u8bd5\u56fe\u9501\u4f4f\u7b2c\u4e00\u4e2a\uff0c\u4e8e\u662f\u4ea7\u751f\u6b7b\u9501 \u907f\u514d\u6b7b\u9501\u53d1\u751f \u591a\u4e2a\u4e92\u65a5\u91cf\u6ce8\u610f\u6392\u5e8f \u4f7f\u7528 pthread_mutex_trylock \u5e26\u6709\u8d85\u65f6\u7684\u8bfb\u5199\u9501 \u6761\u4ef6\u53d8\u91cf \u6761\u4ef6\u53d8\u91cf\u7ed9\u591a\u4e2a\u7ebf\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f1a\u5408\u7684\u573a\u6240\uff0c\u6761\u4ef6\u53d8\u91cf\u4e0e\u4e92\u65a5\u91cf\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u5141\u8bb8\u7ebf\u7a0b\u4ee5\u65e0\u7ade\u4e89\u7684\u65b9\u5f0f\u7b49\u5f85\u7279\u5b9a\u7684\u6761\u4ef6\u53d1\u751f int pthread_cond_init(pthread_cond_t *restrict_cond, const pthread_condattr_t *restrict_attr); int pthread_cond_destroy(pthread_cond_t *cond); int pthread_cond_wait(pthread_cond_t *restrict_cond, pthread_mutex_t *restrict_cond); int pthread_cond_timewait(pthread_cond_t *restrict_cond, pthread_mutex_t *restrict_cond, const struct timespec * restrict tsptr); \u81ea\u65cb\u9501 \u5b83\u4e0e\u4e92\u65a5\u91cf\u7c7b\u4f3c\uff0c\u4f46\u662f\u4e0d\u901a\u8fc7\u4f11\u7720\u4f7f\u8fdb\u7a0b\u963b\u585e\uff0c\u800c\u662f\u83b7\u53d6\u9501\u4e4b\u524d\u4e00\u76f4\u5904\u4e8e\u5fd9\u7b49\u5f85\u963b\u585e\u72b6\u6001\uff0c\u81ea\u65cb\u9501\u7528\u4e8e\uff1a\u9501\u88ab\u6301\u6709\u7684\u65f6\u95f4\u77ed\uff0c\u4e14\u7ebf\u7a0b\u4e0d\u5e0c\u671b\u5728\u91cd\u65b0\u8c03\u5ea6\u4e0a\u82b1\u8d39\u592a\u591a\u6210\u672c\u3002 \u4fe1\u53f7 \u4fe1\u53f7\u662f\u8f6f\u4ef6\u4e2d\u65ad\uff0c\u9996\u5148\u6bcf\u4e2a\u4fe1\u53f7\u90fd\u6709\u4e00\u4e2a\u540d\u5b57\uff0c SIG \u5f00\u5934\u3002\u5f53\u67d0\u4e2a\u4fe1\u53f7\u51fa\u73b0\u65f6\u5019\uff0c\u53ef\u4ee5\u544a\u8bc9\u5185\u6838\u6309\u4e0b\u52173\u79cd\u65b9\u5f0f\u5904\u7406 \u5ffd\u7565\u6b64\u4fe1\u53f7\u3002\u5927\u591a\u6570\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\uff0c\u4f46\u662f SIGKILL , SIGSTOP \u4e0d\u80fd\u88ab\u5ffd\u7565 \u6355\u6349\u4fe1\u53f7\u3002\u8981\u901a\u77e5\u5185\u6838\u5728\u67d0\u79cd\u4fe1\u53f7\u53d1\u751f\u65f6\uff0c\u8c03\u7528\u4e00\u4e2a\u7528\u6237\u51fd\u6570 \u6267\u884c\u7cfb\u7edf\u9ed8\u8ba4\u52a8\u4f5c #include signal.h typedef void (*sighandler_t)(int); sighandler_t signal(int signum, sighandler_t handler); /* \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u8fdb\u7a0b\u6216\u8fdb\u7a0b\u7ec4 */ int kill(pid_t pid, int signo); /* \u5141\u8bb8\u8fdb\u7a0b\u5411\u81ea\u8eab\u53d1\u9001\u4fe1\u53f7 */ int raise(int signo) kill \u7684 pid \u53c2\u6570\u6709\u4ee5\u4e0b4\u79cd\u60c5\u51b5 pid 0 : \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9ID\u4e3a pid \u7684\u8fdb\u7a0b pid == 0 : \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u4e0e\u53d1\u9001\u8fdb\u7a0b\u5c5e\u4e8e\u540c\u4e00\u8fdb\u7a0b\u7ec4\u7684\u6240\u6709\u8fdb\u7a0b pid 0 : \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u8fdb\u7a0b\u7ec4ID\u7b49\u4e8e pid \u7edd\u5bf9\u503c pid == -1 : \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u53d1\u9001\u8fdb\u7a0b\u6709\u6743\u9650\u5411\u4ed6\u4eec\u53d1\u4fe1\u53f7\u7684\u6240\u6709\u8fdb\u7a0b unsigned int alarm(unsigned int seconds); /* \u4f7f\u7528\u8c03\u7528\u8fdb\u7a0b\u6302\u8d77\u76f4\u81f3\u6355\u6349\u5230\u4e00\u4e2a\u4fe1\u53f7 */ int pause(void);","title":"\u8fdb\u7a0b"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_1","text":"","title":"\u8fdb\u7a0b"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_2","text":"","title":"\u8fdb\u7a0b\u57fa\u672c"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_3","text":"\u6709\u4e00\u6bb5\u7a0b\u5e8f\u4f9b\u5176\u6267\u884c\u3002\u4e0d\u4e00\u5b9a\u662f\u8fdb\u7a0b\u6240\u4e13\u6709\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6\u8fdb\u7a0b\u5171\u7528 \u6709\u8d77\u7801\u7684 \u201c\u79c1\u6709\u8d22\u4ea7\u201d \uff0c\u8fd9\u5c31\u662f\u8fdb\u7a0b\u7684\u4e13\u7528\u7684\u7cfb\u7edf\u5806\u6808\u7a7a\u95f4 \u6709 \u201c\u6237\u53e3\u201d \uff0c\u8fd9\u5c31\u662f\u5728\u5185\u6838\u4e2d\u6709\u4e00\u4e2a task_struct \u7684\u6570\u636e\u7ed3\u6784\uff0c\u6216\u6210\u4e3a \u201c\u8fdb\u7a0b\u63a7\u5236\u5757\u201d \uff0c\u6709\u4e86\u8fd9\u4e2a\u80fd\u6210\u4e3a\u5185\u6838\u8c03\u5ea6\u7684\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d\u63a5\u53d7\u5185\u6838\u7684\u8c03\u5ea6\u3002 \u6709\u72ec\u7acb\u7684\u50a8\u5b58\u7a7a\u95f4\uff0c\u610f\u5473\u7740\u6709\u4e13\u6709\u7684\u7528\u6237\u7a7a\u95f4\u3002\u8fdb\u4e00\u6b65\u610f\u5473\u7740\u51fa\u6765\u524d\u8ff0\u7684\u7cfb\u7edf\u7a7a\u95f4\u5806\u6808\u8fd8\u6709\u4e13\u7528\u7684\u7528\u6237\u7a7a\u95f4\u5806\u6808 \u8fd9\u56db\u6761\u662f\u5fc5\u8981\u7684\u3002\u5982\u679c\u53ea\u5177\u5907\u524d\u9762\u4e24\u6761\u800c\u7f3a\u4e86\u7b2c\u56db\u6761\uff0c\u90a3\u5c31\u6210\u4e3a \u201c\u7ebf\u7a0b\u201d , \u5982\u679c\u6ca1\u6709\u7528\u6237\u7a7a\u95f4\u5c31\u79f0\u4e3a \u201c\u5185\u6838\u7ebf\u7a0b\u201d \u3002\u5982\u679c\u5171\u4eab\u7528\u6237\u7a7a\u95f4\u5c31\u79f0\u4e3a \u201c\u7528\u6237\u7a7a\u95f4\u201d","title":"\u56db\u8981\u7d20"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_4","text":"8\u79cd\u65b9\u5f0f\u662f\u8fdb\u7a0b\u7ec8\u6b62\uff0c\u5176\u4e2d5\u79cd\u662f\u6b63\u5e38\u65b9\u5f0f\uff1a \u4ecemain \u8fd4\u56de \u8c03\u7528 exit \u8c03\u7528 _exit \u6216 _Exit \u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u4ece\u5176\u542f\u52a8\u4f8b\u7a0b\u8fd4\u56de \u4ece\u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528 pthread_exit \u5f02\u5e38\u7ec8\u6b62 \u8c03\u7528 abort \u63a5\u6536\u5230\u4e00\u4e2a\u4fe1\u53f7 \u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u53d6\u6d88\u8bf7\u6c42\u4f5c\u51fa\u54cd\u5e94","title":"\u8fdb\u7a0b\u7ec8\u6b62"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_5","text":"","title":"\u8fdb\u7a0b\u63a7\u5236"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#fork","text":"fork \u51fd\u6570\u88ab\u8c03\u7528\u4e00\u6b21\u8fd4\u56de\u4e24\u6b21\uff0c\u5b50\u8fdb\u7a0b\u8fd4\u56de\u503c\u662f0\uff0c\u7236\u8fdb\u7a0b\u8fd4\u56de\u503c\u662f\u5b50\u8fdb\u7a0b\u7684ID","title":"\u51fd\u6570fork"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#vfork","text":"vfork \u548c fork \u533a\u522b\u662f\uff1avfork\u4fdd\u8bc1\u5b50\u8fdb\u7a0b\u5148\u8fd0\u884c\uff0c\u5728\u5b83\u8c03\u7528 exec \u6216 exit \u4e4b\u540e\u7236\u8fdb\u7a0b\u624d\u53ef\u80fd\u88ab\u8c03\u5ea6\u8fd0\u884c\u3002\u5f53\u5b50\u8fdb\u7a0b\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u4efb\u610f\u4e00\u4e2a\u65f6\uff0c\u7236\u8fdb\u7a0b\u4f1a\u6062\u590d\u8fd0\u884c\u3002\uff08\u5982\u679c\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e4b\u524d\u5b50\u8fdb\u7a0b\u4f9d\u8d56\u7236\u8fdb\u7a0b\u7684\u8fdb\u4e00\u6b65\u52a8\u4f5c\uff0c\u5219\u4f1a\u6b7b\u9501\uff09","title":"vfork"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#exit","text":"3\u4e2a\u7ec8\u6b62\u51fd\u6570\uff08 exit , _exit , _Exit \uff09\u5c06\u5176 \u9000\u51fa\u72b6\u6001 \u4f5c\u4e3a\u53c2\u6570\u4f20\u9001\u7ed9\u51fd\u6570\u3002\u5728\u5f02\u5e38\u7ec8\u6b62\u60c5\u51b5\uff0c\u5185\u6838\u4ea7\u751f\u4e00\u4e2a\u6307\u793a\u5f02\u5e38\u7ec8\u6b62\u539f\u56e0\u7684\u4e2d\u6b62\u72b6\u6001\uff0c\u7236\u8fdb\u7a0b\u7528 wait \u548c waitpid \u83b7\u53d6\u5176\u72b6\u6001","title":"exit"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#waitwaitpid","text":"\u8fdb\u7a0b\u7ec8\u6b62\u65f6\uff0c\u5185\u6838\u5c31\u50cf\u5176\u7236\u8fdb\u7a0b\u53d1\u9001 SIGCHLD \u4fe1\u53f7\uff0c\u8fd9\u662f\u4e2a\u5f02\u6b65\u4e8b\u4ef6\uff0c\u7236\u8fdb\u7a0b\u53ef\u4ee5\u9009\u62e9\u5ffd\u7565\u8be5\u4fe1\u53f7\uff0c\u6216\u8005\u63d0\u4f9b\u5904\u7406\u51fd\u6570\u3002 #include sys/wait.h pid_t wait(int *static); pid_t wait_pid(pit_t pid, int *static, int options) \u5982\u679c\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62\uff0c wait \u7acb\u5373\u8fd4\u56de\u5e76\u53d6\u5f97\u5b50\u8fdb\u7a0b\u7684\u72b6\u6001\uff0c\u5426\u5219\u963b\u585e\uff0c\u76f4\u5230\u5b50\u8fdb\u7a0b\u7ed3\u675f wait_pid \u4e2d\u7684 pid \u53c2\u6570\u4f5c\u7528\u5982\u4e0b; pid == -1 : \u7b49\u5f85\u4efb\u4e00\u5b50\u8fdb\u7a0b pid 0 : \u7b49\u5f85\u8fdb\u7a0bID\u4e0epid\u76f8\u7b49\u7684\u5b50\u8fdb\u7a0b pid == 0 : \u7b49\u5f85\u7ec4ID\u7b49\u4e8e\u8c03\u7528\u8fdb\u7a0b\u7ec4ID\u7684\u4efb\u4e00\u5b50\u8fdb\u7a0b pid -1 : \u7b49\u5f85\u7ec4ID\u7b49\u4e8epid\u7edd\u5bf9\u503c\u7684\u4efb\u4e00\u5b50\u8fdb\u7a0b options \u53c2\u6570\uff1a \u5e38\u91cf \u8bf4\u660e WCONTINUED \u82e5\u5b9e\u73b0\u652f\u6301\u4f5c\u4e1a\u63a7\u5236\uff0c\u7531pid\u6307\u5b9a\u7684\u4efb\u4e00\u5b50\u8fdb\u7a0b\u5728\u505c\u6b62\u540e\u5df2\u7ecf\u7ee7\u7eed\uff0c\u4f46\u5176\u72b6\u6001\u5c1a\u672a\u62a5\u544a\uff0c\u5219\u8fd4\u56de\u5176\u72b6\u6001 WNOHANG \u82e5\u7531pid\u6307\u5b9a\u7684\u5b50\u8fdb\u7a0b\u5e76\u4e0d\u662f\u7acb\u5373\u53ef\u7528\u7684\uff0c\u5219waitpid\u4e0d\u963b\u585e\uff0c\u6b64\u65f6\u8fd4\u56de\u503c\u662f0 WUNTRACED \u82e5\u5b9e\u73b0\u652f\u6301\u4f5c\u4e1a\u63a7\u5236\uff0c\u7531pid\u6307\u5b9a\u7684\u4efb\u4e00\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u505c\u6b62\u72b6\u6001\uff0c\u5e76\u4e14\u5176\u72b6\u6001\u5c1a\u672a\u62a5\u544a\uff0c\u5219\u8fd4\u56de\u5176\u72b6\u6001","title":"wait\u548cwaitpid"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#exec","text":"#include unistd.h int execl(const char *pathname, const char * arg0, ... /* (char *) 0 */); int execv(const char *pathname, char *const argv[] ); int execle(const char *pathname, const char * arg0, ... /* (char *)0, char *const envp[] */); int execve(const char *pathname, char *const argv[], char *constenvp[] ); int execlp(const char *filename, const char * arg0, ... /* (char *) 0 */); int execvp(const char *filename, char *const argv[] ); \u516d\u4e2a\u51fd\u6570\u8fd4\u56de\uff1a\u82e5\u51fa\u9519\u5219\u4e3a- 1\uff0c\u82e5\u6210\u529f\u5219\u4e0d\u8fd4\u56de","title":"exec"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#system","text":"","title":"system"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_6","text":"","title":"\u8fdb\u7a0b\u5173\u7cfb"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_7","text":"\u7236\u8fdb\u7a0b\u5148\u9000\u51fa","title":"\u5b64\u513f\u8fdb\u7a0b"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_8","text":"","title":"\u50f5\u5c38\u8fdb\u7a0b"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_9","text":"","title":"\u5b88\u62a4\u8fdb\u7a0b"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#ps","text":"\u6253\u5370\u7cfb\u7edf\u5404\u4e2a\u8fdb\u7a0b\u7684\u72b6\u6001 ps -axj -a : \u663e\u793a\u6709\u5176\u4ed6\u7528\u6237\u6240\u62e5\u6709\u7684\u8fdb\u7a0b\u7684\u72b6\u6001 -x :\u663e\u793a\u6ca1\u6709\u63a7\u5236\u7ec8\u7aef\u7684\u8fdb\u7a0b\u72b6\u6001 -j :\u663e\u793a\u4e0e\u4f5c\u4e1a\u76f8\u5173\u7684\u4fe1\u606f","title":"ps\u547d\u4ee4"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_10","text":"\u8c03\u7528 umask \u5c06\u6587\u4ef6\u6a21\u5f0f\u521b\u5efa\u5c4f\u853d\u5b57\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5df2\u77e5\u503c \u8c03\u7528fork \uff0c\u7136\u540e\u4f7f\u7236\u8fdb\u7a0bexit\u3002 \u8c03\u7528 setsid \u521b\u5efa\u65b0\u4f1a\u8bdd\uff0c \u4f7f\u8c03\u7528\u8fdb\u7a0b\uff1a \u6210\u4e3a\u65b0\u4f1a\u8bdd\u7684\u9996\u8fdb\u7a0b \u6210\u4e3a\u4e00\u4e2a\u65b0\u8fdb\u7a0b\u7ec4\u7684\u7ec4\u957f\u8fdb\u7a0b \u6ca1\u6709\u63a7\u5236\u7ec8\u7aef \u5c06\u5f53\u524d\u76ee\u5f55\u66f4\u6539\u4e3a\u6839\u76ee\u5f55 \u5173\u95ed\u4e0d\u5728\u9700\u8981\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 \u67d0\u4e9b\u5b88\u62a4\u8fdb\u7a0b\u6253\u5f00 /dev/null \u4f7f\u5176\u5177\u6709\u6587\u4ef6\u63cf\u8ff0\u7b260\uff0c1\u548c2\uff0c\u8fd9\u6837\u4efb\u4f55\u4e00\u4e2a\u89c6\u56fe\u8bfbstdin\uff0cstdout\u548cstderr\u7684\u5e93\u4f8b\u7a0b\u90fd\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u6548\u679c #include syslog.h #include fcntl.h #include sys/resource.h void daemoize(const char *cmd) { int i, fd0, fd1, fd2; pid_t pid; struct rlimit rl; struct sigaction sa; /* clear file creation mask */ umask(0); /*get maxinum number of file descriptors*/ if (getrlimit(RLIMIT_NOFILE, rl) 0) { err_quit( %s: can`t get file limit ,cmd); } /*become a session leader to lose controlling TTY*/ if ((pid = fork()) 0) { err_quit( %s: can`t fork ,cmd); } else if(pid != 0) { exit(0); } setsid(); /* change the current working directory to the root so * we won`t prevent file systems form being unmounted */ if(chdir( / ) 0) { err_quit( %s,can`t change directory to / ,cmd); } /* close all open file descriptors*/ if (rl.rlim_max == RLIM_INFINITY) { rl.rlim_max = 1024; } for (i = 0; i rl.rlim_max; i++) { close(i); } /* attach file descriptors 0,1,2 to /dev/null */ fd0 = open( /dev/null , O_RDWR); fd1 = dup(0); fd2 = dup(0); /* initialize the log file*/ openlog(cmd,LOG_CONS, LOG_DAEMON); if (fd0 != 0 || fd1 != 1|| fd2 != 2) { syslog(LOG_ERR, unexpected file decriptors ); exit(1); } }","title":"\u7f16\u7a0b\u89c4\u5219"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_11","text":"","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_12","text":"","title":"\u7ba1\u9053"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_13","text":"\u4e00\u822c\u662f\u534a\u53cc\u5de5\u7684 \u53ea\u80fd\u5728\u5177\u6709\u516c\u5171\u7956\u5148\u7684\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u4f7f\u7528 #include unistd.h int pipe(int fd[2]); fd \u4f46\u4f1a\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c fd[0] \u4e3a\u8bfb\u6253\u5f00\uff0c fd[1] \u4e3a\u5199\u6253\u5f00 \u5f53\u7ba1\u9053\u7684\u4e00\u7aef\u88ab\u5173\u95ed\u540e\uff0c\u4e0b\u5217\u4e24\u6761\u89c4\u5219\u8d77\u4f5c\u7528 \u5f53\u8bfb\u4e00\u4e2a\u5199\u7aef\u5df2\u88ab\u5173\u95ed\u7684\u7ba1\u9053\u65f6\uff0c\u6240\u6709\u6570\u636e\u8bfb\u51fa\u540e\uff0cread\u8fd4\u56de0\uff0c\u8868\u793a\u6587\u4ef6\u7ed3\u675f\u3002 \u5982\u679c\u5199\u4e00\u4e2a\u8bfb\u7aef\u5df2\u88ab\u5173\u95ed\u7684\u7ba1\u9053\u65f6\uff0c\u5219\u4ea7\u751f\u4fe1\u53f7 SIGPIPE","title":"\u65e0\u540d\u7ba1\u9053"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#fifo","text":"\u4e0d\u76f8\u5173\u7684\u8fdb\u7a0b\u4e5f\u80fd\u4ea4\u6362\u6570\u636e #include sys/stat.h int mkfifo(const char *path, mode_t mode);","title":"FIFO(\u6709\u540d\u7ba1\u9053)"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_14","text":"#include sys/msg.h int msgget(key_t key, int flag); /* cmd\u6307\u5b9a\u6267\u884c\u7684\u547d\u4ee4 * IPC_STAT: \u53d6\u6b21\u961f\u5217\u7684msqid_ds\u7ed3\u6784\uff0c\u653e\u5165buf\u4e2d * IPC_SET: \u8bbe\u7f6e\u961f\u5217\u7684msqid_ds\u7ed3\u6784\u4f53 * IPC_RMID: \u5220\u9664\u8be5\u6d88\u606f\u961f\u5217 */ int msgctl(int msgpid, int cmd, struct msqid_ds *buf); int msgsnd(int msgid, const void * ptr, size_t nbytes, int flags); int msgrcv(int msgid, const void * ptr, size_t nbytes, long type, int flags); \u6d88\u606f\u961f\u5217\u53d1\u9001\u4e2d\u7684 ptr \u6307\u5411\u7ed3\u6784\u4f53\uff0c struct mymsg { long type; char mtext[32]; } nbytes \u957f\u5ea6\u4e3a sizof(struct mymsg) - sizeof (long) ; \u82e5 flag \u5b9a\u4e49\u4e3a IPC_NOWAIT \u5219\u7acb\u5373\u8fd4\u56de\uff0c\u4e0d\u4f1a\u963b\u585e\u3002 \u6d88\u606f\u961f\u5217\u63a5\u6536\u4e2d\u7684type\u4f7f\u7528\u5982\u4e0b\uff1b type == 0 : \u8fd4\u56de\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u6d88\u606f type 0 \uff1a \u8fd4\u56de\u961f\u5217\u4e2d\u6d88\u606f\u7c7b\u578b\u4e3a type \u7684\u7b2c\u4e00\u4e2a\u6d88\u606f type 0 : \u8fd4\u56de\u961f\u5217\u4e2d\u6d88\u606f\u7c7b\u578b\u503c\u5c0f\u4e8e type \u7edd\u5bf9\u503c\u5f97\u6d88\u606f\uff0c\u82e5\u6709\u82e5\u5e72\u4e2a\uff0c\u5219\u53d6\u7c7b\u578b\u503c\u6700\u5c0f\u7684","title":"\u6d88\u606f\u961f\u5217"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_15","text":"#include sys/sem.h int semget(key_t key, int mems, int flags); union semun { int value; /* for SETVAL*/ struct semid_ds *buf; /* for IPC_STAT and IPC_SET */ unsigned short *array; /* for GETALL and SETALL*/ }; int semctl(int semid, int semnum, int cmd,... /* union semun arg*/); struct sembuf{ ushort sem_num;/*member#inset(0,1,\u2026,nsems-1*/ short sem_op; /*operation(negative,0,orpasitive*/) short sem_flg;/*IPC_NOWAIT,SEM_UNDO*/ }; int semop(int semid, struct sembuf semoparray[], size_t nops); cmd \u53c2\u6570\u6307\u5b9a\u4e8610\u4e2d\u547d\u4ee4 IPC_STAT\u5bf9\u6b64\u96c6\u5408\u53d6 semid_ds \u7ed3\u6784\uff0c\u5e76\u5b58\u653e\u5728\u7531 arg.buf \u6307\u5411\u7684\u7ed3\u6784\u4e2d\u3002 IPC_SET\u6309\u7531 arg.buf \u6307\u5411\u7684\u7ed3\u6784\u4e2d\u7684\u503c\u8bbe\u7f6e\u4e0e\u6b64\u96c6\u5408\u76f8\u5173\u7ed3\u6784\u4e2d\u7684\u4e0b\u5217\u4e09\u4e2a\u5b57\u6bb5\u503c\uff1a sem_perm.uid,sem_perm.gid \u548c sem_perm.mode \u3002\u6b64\u547d\u4ee4\u53ea\u80fd\u7531\u4e0b\u5217\u4e24\u79cd\u8fdb\u7a0b\u6267\u884c\uff1a\u4e00\u79cd\u662f\u5176\u6709 \u6548\u7528\u6237ID\u7b49\u4e8e sem_perm.cuid \u6216 sem_perm.uid \u7684\u8fdb\u7a0b;\u53e6\u4e00\u79cd\u662f\u5177\u6709\u8d85\u7ea7\u7528\u6237\u7279\u6743\u7684\u8fdb\u7a0b\u3002 IPC_RMID\u4ece\u7cfb\u7edf\u4e2d\u5220\u9664\u8be5\u4fe1\u53f7\u91cf\u96c6\u5408\u3002\u8fd9\u79cd\u5220\u9664\u662f\u7acb\u5373\u7684\u3002\u4ecd\u5728\u4f7f\u7528\u6b64\u4fe1\u53f7\u91cf\u7684 \u5176\u4ed6\u8fdb\u7a0b\u5728\u5b83\u4eec\u4e0b\u6b21\u610f\u56fe\u5bf9\u6b64\u4fe1\u53f7\u91cf\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5c06\u51fa\u9519\u8fd4\u56deEIDRM\u3002\u6b64\u547d\u4ee4\u53ea\u80fd\u7531\u4e0b\u5217\u4e24 \u79cd\u8fdb\u7a0b\u6267\u884c\uff1a\u4e00\u79cd\u662f\u5177\u6709\u6548\u7528\u6237ID\u7b49\u4e8e sem_perm.cuid \u6216 sem_perm.uid \u7684\u8fdb\u7a0b\uff1b\u53e6\u4e00\u79cd\u662f\u5177\u6709\u8d85 \u7ea7\u7528\u6237\u7279\u6743\u7684\u8fdb\u7a0b\u3002 GETVAL\u8fd4\u56de\u6210\u5458 semnum \u7684 semval \u503c\u3002 SETVAL\u8bbe\u7f6e\u6210\u5458 semnum \u7684 semval \u503c\u3002\u8be5\u503c\u7531 arg.val \u6307\u5b9a\u3002 GETPID\u8fd4\u56de\u6210\u5458 semnum \u7684 sempid \u503c\u3002 GETNCNT\u8fd4\u56de\u6210\u5458 semnum \u7684 semncnt \u503c\u3002 GETZCNT\u8fd4\u56de\u6210\u5458 semnum \u7684 semzcnt \u503c\u3002 GETALL\u53d6\u8be5\u96c6\u5408\u4e2d\u6240\u6709\u4fe1\u53f7\u91cf\u7684\u503c\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u653e\u5728\u7531 arg.array \u6307\u5411\u7684\u6570\u7ec4\u4e2d\u3002 SETALL\u6309 arg.array \u6307\u5411\u7684\u6570\u7ec4\u4e2d\u7684\u503c\u8bbe\u7f6e\u8be5\u96c6\u5408\u4e2d\u6240\u6709\u4fe1\u53f7\u91cf\u7684\u503c\u3002 semop \u4e2d sembuf \u7ed3\u6784\u4f53\u4e2d\u7684 sme_op \u4e3a\u6b63\uff0c\u8fd4\u56de\u8fdb\u7a0b\u5360\u7528\u7684\u8d44\u6e90\uff0c\u4e3a\u8d1f\u83b7\u53d6\u8be5\u8d44\u6e90\u3002","title":"\u4fe1\u53f7\u91cf"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_16","text":"\u5171\u4eab\u5b58\u50a8\u5141\u8bb8\u4e24\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u4e00\u5b9a\u7684\u5b58\u50a8\u533a\uff0c\u4fe1\u53f7\u91cf\u88ab\u7528\u6765\u5b9e\u73b0\u5171\u4eab\u5b58\u50a8\u7684\u540c\u6b65\u3002 #incldue sys/shm.h int shmget(key_t key, int size, int flag); /* cmd : IPC_STAT,IPC_SET,IPC_RAMID,SHM_LOCK, SHM_UNLOCK*/ int shmctl(int shmid, int cmd, struct shmid_ds buf); /*addr \u4e3a0 \u6b64\u6bb5\u8fde\u63a5\u5230\u6709\u5185\u6838\u9009\u62e9\u7684\u7b2c\u4e00\u4e2a\u5730\u5740\uff0c\u63a8\u8350\u4f7f\u7528*/ void *shmat(int shmid, void addr, int flag); int shmdt(void addr);","title":"\u5171\u4eab\u5185\u5b58"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_17","text":"\u5c31\u50cf\u8fdb\u7a0bID\u4e00\u6837\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4e5f\u6709\u4e00\u4e2aID\uff0c\u8fdb\u7a0bID\u5728\u6574\u4e2a\u7cfb\u7edf\u662f\u552f\u4e00\u7684\uff0c\u4f46\u7ebf\u7a0bID\u53ea\u6709\u5728\u5b83\u6240\u5c5e\u7684\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u6709\u610f\u4e49\u3002","title":"\u7ebf\u7a0b"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_18","text":"#include pthread.h int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine) (void *), void *arg); /* \u6210\u529f\u8fd4\u56de 0 */","title":"\u7ebf\u7a0b\u7684\u521b\u5efa"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_19","text":"\u5982\u679c\u8fdb\u7a0b\u4e2d\u7684\u4efb\u610f\u7ebf\u7a0b\u8c03\u7528\u4e86 exit \uff0c _exit \uff0c _Exit \u90a3\u4e48\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u7ec8\u6b62\u3002 \u5355\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc73\u79cd\u65b9\u5f0f\u9000\u51fa \u7ebf\u7a0b\u53ef\u4ee5\u7b80\u5355\u7684\u4ece\u542f\u52a8\u4f8b\u7a0b\u4e2d\u8fd4\u56de\uff0c\u8fd4\u56de\u503c\u662f\u7ebf\u7a0b\u7684\u9000\u51fa\u7801 \u7ebf\u7a0b\u53ef\u4ee5\u88ab\u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u53d6\u6d88 \u7ebf\u7a0b\u8c03\u7528 pthread_exit void pthread_exit(void *rval_ptr); /* rval_ptr \u662f\u4e00\u4e2a\u65e0\u7c7b\u578b\u7684\u6307\u9488\uff0c\u4e0e\u4f20\u7ed9\u542f\u52a8\u4f8b\u7a0b\u7684\u5355\u4e2a\u53c2\u6570\u7c7b\u4f3c\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u8c03\u7528 pthread_join\u8bbf\u95ee\u5230\u8fd9\u4e2a\u6307\u9488 */ int pthread_join(pthread_t thread, void ** rval_ptr) pthread_join \u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u6307\u5b9a\u7ebf\u7a0b\u7ec8\u6b62 int pthread_cancel(pthread_t tid); /* \u4ec5\u4ec5\u63d0\u51fa\u8bf7\u6c42\uff0c\u7ebf\u7a0b\u53ef\u9009\u62e9\u5ffd\u7565 */","title":"\u7ebf\u7a0b\u7684\u7ec8\u6b62"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_20","text":"","title":"\u7ebf\u7a0b\u540c\u6b65"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_21","text":"#include pthread.h int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restrict attr); int pthread_mutex_destroy(pthread_mutex_t *mutex); pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER; int pthread_mutex_lock(pthread_mutex_t *mutex); /* \u4e0d\u963b\u585e \uff0c\u6709\u9501\u65f6\u5c31\u5931\u8d25\u8fd4\u56deEBUSY*/ int pthread_mutex_trylock(pthread_mutex_t *mutex); int pthread_mutex_unlock(pthread_mutex_t *mutex); /* \u6210\u529f\u8fd4\u56de 0 */","title":"\u4e92\u65a5\u91cf"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_22","text":"\u4f8b\u5982\uff0c\u7a0b\u5e8f\u4f7f\u7528\u4e00\u4e2a\u4ee5\u4e0a\u7684\u4e92\u65a5\u9501\uff0c\u5982\u679c\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u4e00\u76f4\u5360\u6709\u7b2c\u4e00\u4e2a\u4e92\u65a5\u91cf\uff0c\u5e76\u5728\u8bd5\u56fe\u9501\u4f4f\u7b2c\u4e8c\u4e2a\u65f6\u5904\u4e8e\u963b\u585e\uff0c\u4f46\u662f\u62e5\u6709\u7b2c\u4e8c\u4e2a\u4e92\u65a5\u91cf\u7684\u7ebf\u7a0b\u4e5f\u8bd5\u56fe\u9501\u4f4f\u7b2c\u4e00\u4e2a\uff0c\u4e8e\u662f\u4ea7\u751f\u6b7b\u9501 \u907f\u514d\u6b7b\u9501\u53d1\u751f \u591a\u4e2a\u4e92\u65a5\u91cf\u6ce8\u610f\u6392\u5e8f \u4f7f\u7528 pthread_mutex_trylock","title":"\u907f\u514d\u6b7b\u9501"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_23","text":"","title":"\u5e26\u6709\u8d85\u65f6\u7684\u8bfb\u5199\u9501"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_24","text":"\u6761\u4ef6\u53d8\u91cf\u7ed9\u591a\u4e2a\u7ebf\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f1a\u5408\u7684\u573a\u6240\uff0c\u6761\u4ef6\u53d8\u91cf\u4e0e\u4e92\u65a5\u91cf\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u5141\u8bb8\u7ebf\u7a0b\u4ee5\u65e0\u7ade\u4e89\u7684\u65b9\u5f0f\u7b49\u5f85\u7279\u5b9a\u7684\u6761\u4ef6\u53d1\u751f int pthread_cond_init(pthread_cond_t *restrict_cond, const pthread_condattr_t *restrict_attr); int pthread_cond_destroy(pthread_cond_t *cond); int pthread_cond_wait(pthread_cond_t *restrict_cond, pthread_mutex_t *restrict_cond); int pthread_cond_timewait(pthread_cond_t *restrict_cond, pthread_mutex_t *restrict_cond, const struct timespec * restrict tsptr);","title":"\u6761\u4ef6\u53d8\u91cf"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_25","text":"\u5b83\u4e0e\u4e92\u65a5\u91cf\u7c7b\u4f3c\uff0c\u4f46\u662f\u4e0d\u901a\u8fc7\u4f11\u7720\u4f7f\u8fdb\u7a0b\u963b\u585e\uff0c\u800c\u662f\u83b7\u53d6\u9501\u4e4b\u524d\u4e00\u76f4\u5904\u4e8e\u5fd9\u7b49\u5f85\u963b\u585e\u72b6\u6001\uff0c\u81ea\u65cb\u9501\u7528\u4e8e\uff1a\u9501\u88ab\u6301\u6709\u7684\u65f6\u95f4\u77ed\uff0c\u4e14\u7ebf\u7a0b\u4e0d\u5e0c\u671b\u5728\u91cd\u65b0\u8c03\u5ea6\u4e0a\u82b1\u8d39\u592a\u591a\u6210\u672c\u3002","title":"\u81ea\u65cb\u9501"},{"location":"linux/\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b/#_26","text":"\u4fe1\u53f7\u662f\u8f6f\u4ef6\u4e2d\u65ad\uff0c\u9996\u5148\u6bcf\u4e2a\u4fe1\u53f7\u90fd\u6709\u4e00\u4e2a\u540d\u5b57\uff0c SIG \u5f00\u5934\u3002\u5f53\u67d0\u4e2a\u4fe1\u53f7\u51fa\u73b0\u65f6\u5019\uff0c\u53ef\u4ee5\u544a\u8bc9\u5185\u6838\u6309\u4e0b\u52173\u79cd\u65b9\u5f0f\u5904\u7406 \u5ffd\u7565\u6b64\u4fe1\u53f7\u3002\u5927\u591a\u6570\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\uff0c\u4f46\u662f SIGKILL , SIGSTOP \u4e0d\u80fd\u88ab\u5ffd\u7565 \u6355\u6349\u4fe1\u53f7\u3002\u8981\u901a\u77e5\u5185\u6838\u5728\u67d0\u79cd\u4fe1\u53f7\u53d1\u751f\u65f6\uff0c\u8c03\u7528\u4e00\u4e2a\u7528\u6237\u51fd\u6570 \u6267\u884c\u7cfb\u7edf\u9ed8\u8ba4\u52a8\u4f5c #include signal.h typedef void (*sighandler_t)(int); sighandler_t signal(int signum, sighandler_t handler); /* \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u8fdb\u7a0b\u6216\u8fdb\u7a0b\u7ec4 */ int kill(pid_t pid, int signo); /* \u5141\u8bb8\u8fdb\u7a0b\u5411\u81ea\u8eab\u53d1\u9001\u4fe1\u53f7 */ int raise(int signo) kill \u7684 pid \u53c2\u6570\u6709\u4ee5\u4e0b4\u79cd\u60c5\u51b5 pid 0 : \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9ID\u4e3a pid \u7684\u8fdb\u7a0b pid == 0 : \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u4e0e\u53d1\u9001\u8fdb\u7a0b\u5c5e\u4e8e\u540c\u4e00\u8fdb\u7a0b\u7ec4\u7684\u6240\u6709\u8fdb\u7a0b pid 0 : \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u8fdb\u7a0b\u7ec4ID\u7b49\u4e8e pid \u7edd\u5bf9\u503c pid == -1 : \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u53d1\u9001\u8fdb\u7a0b\u6709\u6743\u9650\u5411\u4ed6\u4eec\u53d1\u4fe1\u53f7\u7684\u6240\u6709\u8fdb\u7a0b unsigned int alarm(unsigned int seconds); /* \u4f7f\u7528\u8c03\u7528\u8fdb\u7a0b\u6302\u8d77\u76f4\u81f3\u6355\u6349\u5230\u4e00\u4e2a\u4fe1\u53f7 */ int pause(void);","title":"\u4fe1\u53f7"},{"location":"python/readme/","text":"Python","title":"Readme"}]}