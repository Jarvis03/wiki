==========
编译过程
==========

1. 预处理
***********
预处理相当于将预处理指令组装成新的程序，会替换宏，条件编译指令等内容。同原文件无异，知识内容有所不同。

A. 处理（#开头的指令）伪指令


  1) 将所有的 ``#define`` 删除，并展开所有的宏定义
  2) 处理所有条件编译指令，如 ``#if`` , ``#endif`` 
  3) 处理预编译指令 ``#include`` ，将包含的文件插入该位置
B. 删除所有注释
C. 添加行号和文件名标识
D. 保留所有的 ``#pragma`` 编译器指令


2. 编译
***********

将预处理完的文件进行一系列的词法分析、语法分析、语义分析及优化后。产生响应的汇编代码文件

3. 汇编
***********

将编译完的汇编代码文件翻译成机器指令。并生成可重定位目标程序的 ``.o`` 文件。该文件是二进制文件，字节编码是机器指令。
  汇编器是将汇编代码转变成机器可以执行的指令，每一个汇编语句几乎对应一条机器指令。所以汇编器的汇编过程相对于编译器比较简单。
  它没有复杂的语法，也没有语义，不需要做指令优化。知识根据汇编只看和机器指令的对照表一一翻译即可。
  
4. 链接  
***********
通过链接器将一个个目标文件（或许还有库文件）链接在一起生成一个完整的可执行程序。

由汇编器生成的目标文件并不能立即执行，其中还有许多没有解决的问题
  例如某个源文件中的函数可能引用了另一个源文件中定义的某个符号，程序中可能调用了某个库文件中的函数，等等。所以需要连接器处理
  
链接程序的主要工作就是讲有关的目标文件彼此链接，也就是讲一个文件引用的符号同该符号在另外一个文件中的定义链接起来。
使得所有的目标文件成为一个能够被操作系统装入执行的统一整体
  
  
